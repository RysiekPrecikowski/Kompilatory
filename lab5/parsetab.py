
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNINCREMENTDECREMENTMULTIPLY_ASSIGNDIVIDE_ASSIGNleftLESSERGREATERLESSER_EQUALGREATER_EQUALEQUALSNOT_EQUALleftPLUSMINUSPLUS_MATRIXMINUS_MATRIXleftTIMESDIVIDETIMES_MATRIXDIVIDE_MATRIXrightONESZEROSEYEleftTRANSPOSErightRANGEnonassocIFXnonassocELSEASSIGN BREAK COMMA CONTINUE DECREMENT DIVIDE DIVIDE_ASSIGN DIVIDE_MATRIX ELSE EQUALS EYE FLOATNUMBER FOR GREATER GREATER_EQUAL ID IF INCREMENT LESSER LESSER_EQUAL LPAREN LPAREN_F LPAREN_SQ MINUS MINUS_MATRIX MULTIPLY_ASSIGN NOT_EQUAL NUMBER ONES PLUS PLUS_MATRIX PRINT RANGE RETURN RPAREN RPAREN_F RPAREN_SQ SEMICOLON STRING TIMES TIMES_MATRIX TRANSPOSE WHILE ZEROS\n    program : stmt\n    \n    program : program stmt\n    \n    stmt : print_stmt\n         | if_stmt\n         | while_stmt\n         | for_stmt\n    \n    stmt : LPAREN_F stmt_list RPAREN_F\n    \n    stmt_list : stmt\n    \n    stmt_list : stmt_list stmt\n    \n    stmt : SEMICOLON\n         | LPAREN_F RPAREN_F\n    \n    stmt : BREAK SEMICOLON\n    \n    stmt : CONTINUE SEMICOLON\n    \n    stmt : expr SEMICOLON\n    expr : LPAREN expr RPAREN\n    stmt : RETURN expr SEMICOLON\n    \n    comparison : expr GREATER expr\n               | expr LESSER expr\n               | expr GREATER_EQUAL expr\n               | expr LESSER_EQUAL expr\n               | expr EQUALS expr\n               | expr NOT_EQUAL expr\n    \n    operator : expr PLUS expr\n             | expr MINUS expr\n             | expr TIMES expr\n             | expr DIVIDE expr\n    \n    type_recognition : ID\n    \n    type_recognition : NUMBER\n    \n    type_recognition : FLOATNUMBER\n    \n    type_recognition : STRING\n    \n    single_operation : ID ASSIGN expr\n                     | ID INCREMENT expr\n                     | ID DECREMENT expr\n                     | ID MULTIPLY_ASSIGN expr\n                     | ID DIVIDE_ASSIGN expr\n    \n    expression_operation : expr PLUS_MATRIX expr\n                         | expr MINUS_MATRIX expr\n                         | expr TIMES_MATRIX expr\n                         | expr DIVIDE_MATRIX expr\n    \n    matrix_element_operation : lvalue ASSIGN expr\n                             | lvalue INCREMENT expr\n                             | lvalue DECREMENT expr\n                             | lvalue MULTIPLY_ASSIGN expr\n                             | lvalue DIVIDE_ASSIGN expr\n    \n    lvalue : expr idx\n    \n    idx : LPAREN_SQ list RPAREN_SQ\n    \n    list : expr\n         | range\n    \n    list : list COMMA expr\n         | list COMMA range\n    \n    empty : LPAREN_SQ RPAREN_SQ\n    \n    special_matrix : EYE LPAREN list RPAREN\n                   | ONES LPAREN list RPAREN\n                   | ZEROS LPAREN list RPAREN\n    \n    expr : type_recognition\n         | single_operation\n         | matrix_element_operation\n         | expression_operation\n         | comparison\n         | operator\n         | special_matrix\n         | empty\n         | idx\n         | lvalue\n    \n    expr : expr TRANSPOSE\n    \n    if_stmt : IF LPAREN expr RPAREN stmt %prec IFX\n    \n    if_stmt : IF LPAREN expr RPAREN stmt ELSE stmt\n    \n    while_stmt : WHILE LPAREN expr RPAREN stmt\n    \n    for_stmt : FOR ID ASSIGN range stmt\n    \n    range : expr RANGE expr\n    \n    print_stmt : PRINT list SEMICOLON\n    '
    
_lr_action_items = {'LPAREN_F':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[7,7,-1,-3,-4,-5,-6,7,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,7,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,7,7,7,-52,-53,-54,-66,-68,-69,7,-67,]),'SEMICOLON':([0,1,2,3,4,5,6,7,8,9,10,11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,60,61,62,63,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,121,122,123,124,125,126,128,129,130,131,132,133,134,135,],[8,8,-1,-3,-4,-5,-6,8,-10,40,41,42,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,8,-11,-8,-12,-13,-14,-65,-45,99,100,-47,-48,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-49,-50,-70,8,8,8,-52,-53,-54,-66,-68,-69,8,-67,]),'BREAK':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[9,9,-1,-3,-4,-5,-6,9,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,9,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,9,9,9,-52,-53,-54,-66,-68,-69,9,-67,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[10,10,-1,-3,-4,-5,-6,10,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,10,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,10,10,10,-52,-53,-54,-66,-68,-69,10,-67,]),'RETURN':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[12,12,-1,-3,-4,-5,-6,12,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,12,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,12,12,12,-52,-53,-54,-66,-68,-69,12,-67,]),'PRINT':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[13,13,-1,-3,-4,-5,-6,13,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,13,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,13,13,13,-52,-53,-54,-66,-68,-69,13,-67,]),'IF':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[14,14,-1,-3,-4,-5,-6,14,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,14,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,14,14,14,-52,-53,-54,-66,-68,-69,14,-67,]),'WHILE':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[16,16,-1,-3,-4,-5,-6,16,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,16,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,16,16,16,-52,-53,-54,-66,-68,-69,16,-67,]),'FOR':([0,1,2,3,4,5,6,7,8,18,19,20,21,22,23,24,25,26,27,28,29,30,31,36,37,38,39,40,41,42,43,58,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[17,17,-1,-3,-4,-5,-6,17,-10,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-2,17,-11,-8,-12,-13,-14,-65,-45,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,17,17,17,-52,-53,-54,-66,-68,-69,17,-67,]),'LPAREN':([0,1,2,3,4,5,6,7,8,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[15,15,-1,-3,-4,-5,-6,15,-10,15,15,64,15,66,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,78,79,80,15,-2,15,-11,-8,-12,-13,-14,-65,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-45,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,15,15,-15,15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,15,15,15,-52,-53,-54,-66,-68,-69,15,-67,]),'ID':([0,1,2,3,4,5,6,7,8,12,13,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[18,18,-1,-3,-4,-5,-6,18,-10,18,18,18,67,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,18,-2,18,-11,-8,-12,-13,-14,-65,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-45,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,18,18,-15,18,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,18,18,18,-52,-53,-54,-66,-68,-69,18,-67,]),'NUMBER':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[29,29,-1,-3,-4,-5,-6,29,-10,29,29,29,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,29,-2,29,-11,-8,-12,-13,-14,-65,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-45,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,29,29,-15,29,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,29,29,29,-52,-53,-54,-66,-68,-69,29,-67,]),'FLOATNUMBER':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[30,30,-1,-3,-4,-5,-6,30,-10,30,30,30,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,30,-2,30,-11,-8,-12,-13,-14,-65,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-45,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,30,30,-15,30,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,30,30,30,-52,-53,-54,-66,-68,-69,30,-67,]),'STRING':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[31,31,-1,-3,-4,-5,-6,31,-10,31,31,31,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,31,-2,31,-11,-8,-12,-13,-14,-65,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-45,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,31,31,-15,31,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,31,31,31,-52,-53,-54,-66,-68,-69,31,-67,]),'EYE':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[32,32,-1,-3,-4,-5,-6,32,-10,32,32,32,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,32,-2,32,-11,-8,-12,-13,-14,-65,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-45,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,32,32,-15,32,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,32,32,32,-52,-53,-54,-66,-68,-69,32,-67,]),'ONES':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[33,33,-1,-3,-4,-5,-6,33,-10,33,33,33,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,33,-2,33,-11,-8,-12,-13,-14,-65,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-45,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,33,33,-15,33,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,33,33,33,-52,-53,-54,-66,-68,-69,33,-67,]),'ZEROS':([0,1,2,3,4,5,6,7,8,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,106,107,108,109,110,111,112,113,114,115,116,120,123,124,125,126,128,129,130,131,132,133,134,135,],[34,34,-1,-3,-4,-5,-6,34,-10,34,34,34,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,34,-2,34,-11,-8,-12,-13,-14,-65,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-45,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,34,34,-15,34,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-70,34,34,34,-52,-53,-54,-66,-68,-69,34,-67,]),'LPAREN_SQ':([0,1,2,3,4,5,6,7,8,11,12,13,15,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,123,124,125,126,127,128,129,130,131,132,133,134,135,],[35,35,-1,-3,-4,-5,-6,35,-10,59,35,35,35,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,35,-2,35,-11,-8,-12,-13,-14,-65,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-45,35,59,59,35,59,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-51,-7,-9,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-16,-71,35,35,59,-15,59,35,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,59,-70,35,35,35,59,-52,-53,-54,-66,-68,-69,35,-67,]),'$end':([1,2,3,4,5,6,8,36,38,40,41,42,83,99,100,131,132,133,135,],[0,-1,-3,-4,-5,-6,-10,-2,-11,-12,-13,-14,-7,-16,-71,-66,-68,-69,-67,]),'RPAREN_F':([3,4,5,6,7,8,37,38,39,40,41,42,83,84,99,100,131,132,133,135,],[-3,-4,-5,-6,38,-10,83,-11,-8,-12,-13,-14,-7,-9,-16,-71,-66,-68,-69,-67,]),'ELSE':([3,4,5,6,8,38,40,41,42,83,99,100,131,132,133,135,],[-3,-4,-5,-6,-10,-11,-12,-13,-14,-7,-16,-71,134,-68,-69,-67,]),'TRANSPOSE':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[43,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,43,43,43,-51,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-15,43,43,43,43,43,43,43,43,43,43,43,-46,43,43,43,-52,-53,-54,]),'PLUS_MATRIX':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[44,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,44,44,44,-51,-36,-37,-38,-39,44,44,44,44,44,44,-23,-24,-25,-26,44,-15,44,44,44,44,44,44,44,44,44,44,44,-46,44,44,44,-52,-53,-54,]),'MINUS_MATRIX':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[45,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,45,45,45,-51,-36,-37,-38,-39,45,45,45,45,45,45,-23,-24,-25,-26,45,-15,45,45,45,45,45,45,45,45,45,45,45,-46,45,45,45,-52,-53,-54,]),'TIMES_MATRIX':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[46,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,46,46,46,-51,46,46,-38,-39,46,46,46,46,46,46,46,46,-25,-26,46,-15,46,46,46,46,46,46,46,46,46,46,46,-46,46,46,46,-52,-53,-54,]),'DIVIDE_MATRIX':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[47,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,47,47,47,-51,47,47,-38,-39,47,47,47,47,47,47,47,47,-25,-26,47,-15,47,47,47,47,47,47,47,47,47,47,47,-46,47,47,47,-52,-53,-54,]),'GREATER':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[48,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,48,48,48,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,48,-15,48,48,48,48,48,48,48,48,48,48,48,-46,48,48,48,-52,-53,-54,]),'LESSER':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[49,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,49,49,49,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,49,-15,49,49,49,49,49,49,49,49,49,49,49,-46,49,49,49,-52,-53,-54,]),'GREATER_EQUAL':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[50,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,50,50,50,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,50,-15,50,50,50,50,50,50,50,50,50,50,50,-46,50,50,50,-52,-53,-54,]),'LESSER_EQUAL':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[51,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,51,51,51,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,51,-15,51,51,51,51,51,51,51,51,51,51,51,-46,51,51,51,-52,-53,-54,]),'EQUALS':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[52,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,52,52,52,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,52,-15,52,52,52,52,52,52,52,52,52,52,52,-46,52,52,52,-52,-53,-54,]),'NOT_EQUAL':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[53,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,53,53,53,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,53,-15,53,53,53,53,53,53,53,53,53,53,53,-46,53,53,53,-52,-53,-54,]),'PLUS':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[54,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,54,54,54,-51,-36,-37,-38,-39,54,54,54,54,54,54,-23,-24,-25,-26,54,-15,54,54,54,54,54,54,54,54,54,54,54,-46,54,54,54,-52,-53,-54,]),'MINUS':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[55,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,55,55,55,-51,-36,-37,-38,-39,55,55,55,55,55,55,-23,-24,-25,-26,55,-15,55,55,55,55,55,55,55,55,55,55,55,-46,55,55,55,-52,-53,-54,]),'TIMES':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[56,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,56,56,56,-51,56,56,-38,-39,56,56,56,56,56,56,56,56,-25,-26,56,-15,56,56,56,56,56,56,56,56,56,56,56,-46,56,56,56,-52,-53,-54,]),'DIVIDE':([11,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,60,62,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,120,121,123,127,128,129,130,],[57,-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,57,57,57,-51,57,57,-38,-39,57,57,57,57,57,57,57,57,-25,-26,57,-15,57,57,57,57,57,57,57,57,57,57,57,-46,57,57,57,-52,-53,-54,]),'RANGE':([18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,62,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,107,108,109,110,111,112,113,114,115,116,120,121,127,128,129,130,],[-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,102,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,102,102,-52,-53,-54,]),'COMMA':([18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,61,62,63,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,128,129,130,],[-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,101,-47,-48,-51,101,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,101,101,101,-46,-49,-50,-70,-52,-53,-54,]),'RPAREN':([18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,58,62,63,65,81,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,128,129,130,],[-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,-65,-45,-47,-48,104,-51,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,124,-15,125,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,128,129,130,-46,-49,-50,-70,-52,-53,-54,]),'RPAREN_SQ':([18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,43,58,62,63,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,107,108,109,110,111,112,113,114,115,116,120,121,122,123,128,129,130,],[-27,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-28,-29,-30,81,-65,-45,-47,-48,-51,120,-36,-37,-38,-39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-15,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-49,-50,-70,-52,-53,-54,]),'ASSIGN':([18,28,58,67,120,],[68,73,-45,106,-46,]),'INCREMENT':([18,28,58,120,],[69,74,-45,-46,]),'DECREMENT':([18,28,58,120,],[70,75,-45,-46,]),'MULTIPLY_ASSIGN':([18,28,58,120,],[71,76,-45,-46,]),'DIVIDE_ASSIGN':([18,28,58,120,],[72,77,-45,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt':([0,1,7,37,124,125,126,134,],[2,36,39,84,131,132,133,135,]),'print_stmt':([0,1,7,37,124,125,126,134,],[3,3,3,3,3,3,3,3,]),'if_stmt':([0,1,7,37,124,125,126,134,],[4,4,4,4,4,4,4,4,]),'while_stmt':([0,1,7,37,124,125,126,134,],[5,5,5,5,5,5,5,5,]),'for_stmt':([0,1,7,37,124,125,126,134,],[6,6,6,6,6,6,6,6,]),'expr':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[11,11,11,60,62,65,62,11,85,86,87,88,89,90,91,92,93,94,95,96,97,98,62,103,105,107,108,109,110,111,112,113,114,115,116,62,62,62,121,123,127,11,11,11,11,]),'type_recognition':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'single_operation':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'matrix_element_operation':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'expression_operation':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'comparison':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'operator':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'special_matrix':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'empty':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'idx':([0,1,7,11,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,121,123,124,125,126,127,134,],[27,27,27,58,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,58,58,27,58,27,27,27,27,27,27,27,27,27,27,27,27,27,27,58,58,58,58,58,58,58,58,58,58,58,58,58,58,27,27,58,58,27,58,58,58,58,58,58,58,58,58,58,58,58,27,27,27,58,27,]),'lvalue':([0,1,7,12,13,15,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,101,102,106,124,125,126,134,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'stmt_list':([7,],[37,]),'list':([13,35,59,78,79,80,],[61,82,82,117,118,119,]),'range':([13,35,59,78,79,80,101,106,],[63,63,63,63,63,63,122,126,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program_simple','Mparser.py',34),
  ('program -> program stmt','program',2,'p_program_add','Mparser.py',41),
  ('stmt -> print_stmt','stmt',1,'p_stmt','Mparser.py',50),
  ('stmt -> if_stmt','stmt',1,'p_stmt','Mparser.py',51),
  ('stmt -> while_stmt','stmt',1,'p_stmt','Mparser.py',52),
  ('stmt -> for_stmt','stmt',1,'p_stmt','Mparser.py',53),
  ('stmt -> LPAREN_F stmt_list RPAREN_F','stmt',3,'p_program_block','Mparser.py',60),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_start','Mparser.py',67),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_add','Mparser.py',74),
  ('stmt -> SEMICOLON','stmt',1,'p_empty_stmt','Mparser.py',82),
  ('stmt -> LPAREN_F RPAREN_F','stmt',2,'p_empty_stmt','Mparser.py',83),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_break','Mparser.py',92),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_continue','Mparser.py',101),
  ('stmt -> expr SEMICOLON','stmt',2,'p_stmt_semicolon','Mparser.py',109),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_parentheses','Mparser.py',116),
  ('stmt -> RETURN expr SEMICOLON','stmt',3,'p_return','Mparser.py',122),
  ('comparison -> expr GREATER expr','comparison',3,'p_comparison','Mparser.py',129),
  ('comparison -> expr LESSER expr','comparison',3,'p_comparison','Mparser.py',130),
  ('comparison -> expr GREATER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',131),
  ('comparison -> expr LESSER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',132),
  ('comparison -> expr EQUALS expr','comparison',3,'p_comparison','Mparser.py',133),
  ('comparison -> expr NOT_EQUAL expr','comparison',3,'p_comparison','Mparser.py',134),
  ('operator -> expr PLUS expr','operator',3,'p_operator','Mparser.py',141),
  ('operator -> expr MINUS expr','operator',3,'p_operator','Mparser.py',142),
  ('operator -> expr TIMES expr','operator',3,'p_operator','Mparser.py',143),
  ('operator -> expr DIVIDE expr','operator',3,'p_operator','Mparser.py',144),
  ('type_recognition -> ID','type_recognition',1,'p_Variable','Mparser.py',162),
  ('type_recognition -> NUMBER','type_recognition',1,'p_intNum','Mparser.py',169),
  ('type_recognition -> FLOATNUMBER','type_recognition',1,'p_floatNum','Mparser.py',176),
  ('type_recognition -> STRING','type_recognition',1,'p_string','Mparser.py',183),
  ('single_operation -> ID ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',190),
  ('single_operation -> ID INCREMENT expr','single_operation',3,'p_single_operation','Mparser.py',191),
  ('single_operation -> ID DECREMENT expr','single_operation',3,'p_single_operation','Mparser.py',192),
  ('single_operation -> ID MULTIPLY_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',193),
  ('single_operation -> ID DIVIDE_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',194),
  ('expression_operation -> expr PLUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',204),
  ('expression_operation -> expr MINUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',205),
  ('expression_operation -> expr TIMES_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',206),
  ('expression_operation -> expr DIVIDE_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',207),
  ('matrix_element_operation -> lvalue ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',214),
  ('matrix_element_operation -> lvalue INCREMENT expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',215),
  ('matrix_element_operation -> lvalue DECREMENT expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',216),
  ('matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',217),
  ('matrix_element_operation -> lvalue DIVIDE_ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',218),
  ('lvalue -> expr idx','lvalue',2,'p_matrix_reference','Mparser.py',227),
  ('idx -> LPAREN_SQ list RPAREN_SQ','idx',3,'p_idx','Mparser.py',237),
  ('list -> expr','list',1,'p_list','Mparser.py',244),
  ('list -> range','list',1,'p_list','Mparser.py',245),
  ('list -> list COMMA expr','list',3,'p_list_add','Mparser.py',252),
  ('list -> list COMMA range','list',3,'p_list_add','Mparser.py',253),
  ('empty -> LPAREN_SQ RPAREN_SQ','empty',2,'p_empty','Mparser.py',261),
  ('special_matrix -> EYE LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',268),
  ('special_matrix -> ONES LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',269),
  ('special_matrix -> ZEROS LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',270),
  ('expr -> type_recognition','expr',1,'p_epxr','Mparser.py',278),
  ('expr -> single_operation','expr',1,'p_epxr','Mparser.py',279),
  ('expr -> matrix_element_operation','expr',1,'p_epxr','Mparser.py',280),
  ('expr -> expression_operation','expr',1,'p_epxr','Mparser.py',281),
  ('expr -> comparison','expr',1,'p_epxr','Mparser.py',282),
  ('expr -> operator','expr',1,'p_epxr','Mparser.py',283),
  ('expr -> special_matrix','expr',1,'p_epxr','Mparser.py',284),
  ('expr -> empty','expr',1,'p_epxr','Mparser.py',285),
  ('expr -> idx','expr',1,'p_epxr','Mparser.py',286),
  ('expr -> lvalue','expr',1,'p_epxr','Mparser.py',287),
  ('expr -> expr TRANSPOSE','expr',2,'p_transpose','Mparser.py',295),
  ('if_stmt -> IF LPAREN expr RPAREN stmt','if_stmt',5,'p_if_stmt','Mparser.py',302),
  ('if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','if_stmt',7,'p_if_else_stmt','Mparser.py',310),
  ('while_stmt -> WHILE LPAREN expr RPAREN stmt','while_stmt',5,'p_while_stmt','Mparser.py',317),
  ('for_stmt -> FOR ID ASSIGN range stmt','for_stmt',5,'p_for_stmt','Mparser.py',324),
  ('range -> expr RANGE expr','range',3,'p_range','Mparser.py',334),
  ('print_stmt -> PRINT list SEMICOLON','print_stmt',3,'p_print','Mparser.py',343),
]
