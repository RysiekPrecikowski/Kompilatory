
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNINCREMENTDECREMENTMULTIPLY_ASSIGNDIVIDE_ASSIGNleftLESSERGREATERLESSER_EQUALGREATER_EQUALEQUALSNOT_EQUALleftPLUSMINUSPLUS_MATRIXMINUS_MATRIXleftTIMESDIVIDETIMES_MATRIXDIVIDE_MATRIXrightONESZEROSEYEleftTRANSPOSErightRANGErightUMINUSnonassocIFXnonassocELSEASSIGN BREAK COMMA CONTINUE DECREMENT DIVIDE DIVIDE_ASSIGN DIVIDE_MATRIX ELSE EQUALS EYE FLOATNUMBER FOR GREATER GREATER_EQUAL ID IF INCREMENT LESSER LESSER_EQUAL LPAREN LPAREN_F LPAREN_SQ MINUS MINUS_MATRIX MULTIPLY_ASSIGN NOT_EQUAL NUMBER ONES PLUS PLUS_MATRIX PRINT RANGE RETURN RPAREN RPAREN_F RPAREN_SQ SEMICOLON STRING TIMES TIMES_MATRIX TRANSPOSE WHILE ZEROS\n    program : stmt\n    \n    program : program stmt\n    \n    stmt : print_stmt\n         | if_stmt\n         | while_stmt\n         | for_stmt\n    \n    stmt : LPAREN_F stmt_list RPAREN_F\n    \n    stmt_list : stmt\n    \n    stmt_list : stmt_list stmt\n    \n    stmt : SEMICOLON\n         | LPAREN_F RPAREN_F\n    \n    stmt : BREAK SEMICOLON\n    \n    stmt : CONTINUE SEMICOLON\n    \n    stmt : expr SEMICOLON\n    \n    stmt : RETURN expr SEMICOLON\n    \n    comparison : expr GREATER expr\n               | expr LESSER expr\n               | expr GREATER_EQUAL expr\n               | expr LESSER_EQUAL expr\n               | expr EQUALS expr\n               | expr NOT_EQUAL expr\n    \n    operator : expr PLUS expr\n             | expr MINUS expr\n             | expr TIMES expr\n             | expr DIVIDE expr\n    \n    operator : MINUS expr %prec UMINUS\n    \n    type_recognition : ID\n    \n    type_recognition : NUMBER\n    \n    type_recognition : FLOATNUMBER\n    \n    type_recognition : STRING\n    \n    single_operation : ID ASSIGN expr\n                     | ID INCREMENT expr\n                     | ID DECREMENT expr\n                     | ID MULTIPLY_ASSIGN expr\n                     | ID DIVIDE_ASSIGN expr\n    \n    expression_operation : expr PLUS_MATRIX expr\n                         | expr MINUS_MATRIX expr\n                         | expr TIMES_MATRIX expr\n                         | expr DIVIDE_MATRIX expr\n    \n    matrix_element_operation : lvalue ASSIGN expr\n                             | lvalue INCREMENT expr\n                             | lvalue DECREMENT expr\n                             | lvalue MULTIPLY_ASSIGN expr\n                             | lvalue DIVIDE_ASSIGN expr\n    \n    lvalue : expr idx\n    \n    idx : LPAREN_SQ list RPAREN_SQ\n    \n    list : expr\n    \n    list : list COMMA expr\n    \n    empty : LPAREN_SQ RPAREN_SQ\n    \n    special_matrix : EYE LPAREN list RPAREN\n                   | ONES LPAREN list RPAREN\n                   | ZEROS LPAREN list RPAREN\n    \n    expr : type_recognition\n         | single_operation\n         | matrix_element_operation\n         | expression_operation\n         | comparison\n         | operator\n         | special_matrix\n         | empty\n         | idx\n         | lvalue\n    \n     expr : expr TRANSPOSE\n    \n    if_stmt : IF LPAREN expr RPAREN stmt %prec IFX\n    \n    if_stmt : IF LPAREN expr RPAREN stmt ELSE stmt\n    \n    while_stmt : WHILE LPAREN expr RPAREN stmt\n    \n    for_stmt : FOR ID ASSIGN range stmt\n    \n    range : expr RANGE expr\n    \n    print_stmt : PRINT list SEMICOLON\n    '
    
_lr_action_items = {'LPAREN_F':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[7,7,-1,-3,-4,-5,-6,7,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,7,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,7,7,7,-50,-51,-52,-64,-66,-67,7,-68,-65,]),'SEMICOLON':([0,1,2,3,4,5,6,7,8,9,10,11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,60,61,62,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,118,119,120,121,123,124,125,126,127,128,130,131,132,],[8,8,-1,-3,-4,-5,-6,8,-10,40,41,42,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,8,-11,-8,-12,-13,-14,-63,-45,98,99,-47,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-48,8,8,8,-50,-51,-52,-64,-66,-67,8,-68,-65,]),'BREAK':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[9,9,-1,-3,-4,-5,-6,9,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,9,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,9,9,9,-50,-51,-52,-64,-66,-67,9,-68,-65,]),'CONTINUE':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[10,10,-1,-3,-4,-5,-6,10,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,10,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,10,10,10,-50,-51,-52,-64,-66,-67,10,-68,-65,]),'RETURN':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[12,12,-1,-3,-4,-5,-6,12,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,12,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,12,12,12,-50,-51,-52,-64,-66,-67,12,-68,-65,]),'PRINT':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[13,13,-1,-3,-4,-5,-6,13,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,13,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,13,13,13,-50,-51,-52,-64,-66,-67,13,-68,-65,]),'IF':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[14,14,-1,-3,-4,-5,-6,14,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,14,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,14,14,14,-50,-51,-52,-64,-66,-67,14,-68,-65,]),'WHILE':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[15,15,-1,-3,-4,-5,-6,15,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,15,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,15,15,15,-50,-51,-52,-64,-66,-67,15,-68,-65,]),'FOR':([0,1,2,3,4,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,36,37,38,39,40,41,42,43,58,76,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,130,131,132,],[16,16,-1,-3,-4,-5,-6,16,-10,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-2,16,-11,-8,-12,-13,-14,-63,-45,-26,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,16,16,16,-50,-51,-52,-64,-66,-67,16,-68,-65,]),'ID':([0,1,2,3,4,5,6,7,8,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[17,17,-1,-3,-4,-5,-6,17,-10,17,17,65,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,17,17,-2,17,-11,-8,-12,-13,-14,-63,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-45,17,17,17,17,17,17,17,17,17,17,17,17,17,-26,17,17,17,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,17,17,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,17,17,17,-50,-51,-52,-64,-66,-67,17,17,-68,-65,]),'NUMBER':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[28,28,-1,-3,-4,-5,-6,28,-10,28,28,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,28,28,-2,28,-11,-8,-12,-13,-14,-63,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-45,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,28,28,28,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,28,28,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,28,28,28,-50,-51,-52,-64,-66,-67,28,28,-68,-65,]),'FLOATNUMBER':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[29,29,-1,-3,-4,-5,-6,29,-10,29,29,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,29,29,-2,29,-11,-8,-12,-13,-14,-63,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-45,29,29,29,29,29,29,29,29,29,29,29,29,29,-26,29,29,29,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,29,29,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,29,29,29,-50,-51,-52,-64,-66,-67,29,29,-68,-65,]),'STRING':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[30,30,-1,-3,-4,-5,-6,30,-10,30,30,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,30,30,-2,30,-11,-8,-12,-13,-14,-63,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-45,30,30,30,30,30,30,30,30,30,30,30,30,30,-26,30,30,30,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,30,30,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,30,30,30,-50,-51,-52,-64,-66,-67,30,30,-68,-65,]),'MINUS':([0,1,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,],[31,31,-1,-3,-4,-5,-6,31,-10,55,31,31,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,31,31,-2,31,-11,-8,-12,-13,-14,-63,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-45,31,55,55,31,31,31,31,31,31,31,31,31,31,31,31,-26,31,31,31,-49,-7,-9,-36,-37,-38,-39,55,55,55,55,55,55,-22,-23,-24,-25,-15,-69,31,55,55,31,55,55,55,55,55,55,55,55,55,55,-46,55,31,31,31,55,-50,-51,-52,-64,-66,-67,31,31,-68,-65,]),'EYE':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[32,32,-1,-3,-4,-5,-6,32,-10,32,32,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,32,32,-2,32,-11,-8,-12,-13,-14,-63,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-45,32,32,32,32,32,32,32,32,32,32,32,32,32,-26,32,32,32,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,32,32,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,32,32,32,-50,-51,-52,-64,-66,-67,32,32,-68,-65,]),'ONES':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[33,33,-1,-3,-4,-5,-6,33,-10,33,33,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,33,33,-2,33,-11,-8,-12,-13,-14,-63,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-45,33,33,33,33,33,33,33,33,33,33,33,33,33,-26,33,33,33,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,33,33,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,33,33,33,-50,-51,-52,-64,-66,-67,33,33,-68,-65,]),'ZEROS':([0,1,2,3,4,5,6,7,8,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,117,119,120,121,123,124,125,126,127,128,129,130,131,132,],[34,34,-1,-3,-4,-5,-6,34,-10,34,34,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,34,34,-2,34,-11,-8,-12,-13,-14,-63,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-45,34,34,34,34,34,34,34,34,34,34,34,34,34,-26,34,34,34,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,34,34,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,34,34,34,-50,-51,-52,-64,-66,-67,34,34,-68,-65,]),'LPAREN_SQ':([0,1,2,3,4,5,6,7,8,11,12,13,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,],[35,35,-1,-3,-4,-5,-6,35,-10,59,35,35,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,35,35,-2,35,-11,-8,-12,-13,-14,-63,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-45,35,59,59,35,35,35,35,35,35,35,35,35,35,35,35,-26,35,35,35,-49,-7,-9,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-15,-69,35,59,59,35,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,59,35,35,35,59,-50,-51,-52,-64,-66,-67,35,35,-68,-65,]),'$end':([1,2,3,4,5,6,8,36,38,40,41,42,82,98,99,126,127,128,132,],[0,-1,-3,-4,-5,-6,-10,-2,-11,-12,-13,-14,-7,-15,-69,-64,-66,-67,-65,]),'RPAREN_F':([3,4,5,6,7,8,37,38,39,40,41,42,82,83,98,99,126,127,128,132,],[-3,-4,-5,-6,38,-10,82,-11,-8,-12,-13,-14,-7,-9,-15,-69,-64,-66,-67,-65,]),'ELSE':([3,4,5,6,8,38,40,41,42,82,98,99,126,127,128,132,],[-3,-4,-5,-6,-10,-11,-12,-13,-14,-7,-15,-69,130,-66,-67,-65,]),'TRANSPOSE':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[43,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,43,43,-26,-49,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-46,43,43,-50,-51,-52,43,]),'PLUS_MATRIX':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[44,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,44,44,-26,-49,-36,-37,-38,-39,44,44,44,44,44,44,-22,-23,-24,-25,44,44,44,44,44,44,44,44,44,44,44,44,-46,44,44,-50,-51,-52,44,]),'MINUS_MATRIX':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[45,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,45,45,-26,-49,-36,-37,-38,-39,45,45,45,45,45,45,-22,-23,-24,-25,45,45,45,45,45,45,45,45,45,45,45,45,-46,45,45,-50,-51,-52,45,]),'TIMES_MATRIX':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[46,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,46,46,-26,-49,46,46,-38,-39,46,46,46,46,46,46,46,46,-24,-25,46,46,46,46,46,46,46,46,46,46,46,46,-46,46,46,-50,-51,-52,46,]),'DIVIDE_MATRIX':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[47,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,47,47,-26,-49,47,47,-38,-39,47,47,47,47,47,47,47,47,-24,-25,47,47,47,47,47,47,47,47,47,47,47,47,-46,47,47,-50,-51,-52,47,]),'GREATER':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[48,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,48,48,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,48,48,48,48,48,48,48,48,48,48,48,48,-46,48,48,-50,-51,-52,48,]),'LESSER':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[49,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,49,49,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,49,49,49,49,49,49,49,49,49,49,49,49,-46,49,49,-50,-51,-52,49,]),'GREATER_EQUAL':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[50,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,50,50,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,50,50,50,50,50,50,50,50,50,50,50,50,-46,50,50,-50,-51,-52,50,]),'LESSER_EQUAL':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[51,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,51,51,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,51,51,51,51,51,51,51,51,51,51,51,51,-46,51,51,-50,-51,-52,51,]),'EQUALS':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[52,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,52,52,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,52,52,52,52,52,52,52,52,52,52,52,52,-46,52,52,-50,-51,-52,52,]),'NOT_EQUAL':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[53,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,53,53,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,53,53,53,53,53,53,53,53,53,53,53,53,-46,53,53,-50,-51,-52,53,]),'PLUS':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[54,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,54,54,-26,-49,-36,-37,-38,-39,54,54,54,54,54,54,-22,-23,-24,-25,54,54,54,54,54,54,54,54,54,54,54,54,-46,54,54,-50,-51,-52,54,]),'TIMES':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[56,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,56,56,-26,-49,56,56,-38,-39,56,56,56,56,56,56,56,56,-24,-25,56,56,56,56,56,56,56,56,56,56,56,56,-46,56,56,-50,-51,-52,56,]),'DIVIDE':([11,17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,60,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,117,118,122,123,124,125,131,],[57,-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,57,57,-26,-49,57,57,-38,-39,57,57,57,57,57,57,57,57,-24,-25,57,57,57,57,57,57,57,57,57,57,57,57,-46,57,57,-50,-51,-52,57,]),'LPAREN':([14,15,32,33,34,],[63,64,77,78,79,]),'COMMA':([17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,61,62,76,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,125,],[-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,100,-47,-26,-49,100,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,100,100,100,-46,-48,-50,-51,-52,]),'RPAREN_SQ':([17,18,19,20,21,22,23,24,25,26,27,28,29,30,35,43,58,62,76,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,111,112,113,117,118,123,124,125,],[-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,80,-63,-45,-47,-26,-49,117,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,-48,-50,-51,-52,]),'RPAREN':([17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,62,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,124,125,],[-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,-47,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,119,120,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,123,124,125,-46,-48,-50,-51,-52,]),'RANGE':([17,18,19,20,21,22,23,24,25,26,27,28,29,30,43,58,76,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,104,105,106,107,108,109,110,111,112,113,117,122,123,124,125,],[-27,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-28,-29,-30,-63,-45,-26,-49,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-31,-32,-33,-34,-35,-40,-41,-42,-43,-44,-46,129,-50,-51,-52,]),'ASSIGN':([17,27,58,65,117,],[66,71,-45,103,-46,]),'INCREMENT':([17,27,58,117,],[67,72,-45,-46,]),'DECREMENT':([17,27,58,117,],[68,73,-45,-46,]),'MULTIPLY_ASSIGN':([17,27,58,117,],[69,74,-45,-46,]),'DIVIDE_ASSIGN':([17,27,58,117,],[70,75,-45,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt':([0,1,7,37,119,120,121,130,],[2,36,39,83,126,127,128,132,]),'print_stmt':([0,1,7,37,119,120,121,130,],[3,3,3,3,3,3,3,3,]),'if_stmt':([0,1,7,37,119,120,121,130,],[4,4,4,4,4,4,4,4,]),'while_stmt':([0,1,7,37,119,120,121,130,],[5,5,5,5,5,5,5,5,]),'for_stmt':([0,1,7,37,119,120,121,130,],[6,6,6,6,6,6,6,6,]),'expr':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[11,11,11,60,62,76,62,11,84,85,86,87,88,89,90,91,92,93,94,95,96,97,62,101,102,104,105,106,107,108,109,110,111,112,113,62,62,62,118,122,11,11,11,131,11,]),'type_recognition':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'single_operation':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'matrix_element_operation':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'expression_operation':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'comparison':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'operator':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'special_matrix':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'empty':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'idx':([0,1,7,11,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,60,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,119,120,121,122,129,130,131,],[26,26,26,58,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,58,58,26,26,26,26,26,26,26,26,26,26,26,26,58,26,26,26,58,58,58,58,58,58,58,58,58,58,58,58,58,58,26,58,58,26,58,58,58,58,58,58,58,58,58,58,58,26,26,26,58,26,26,58,]),'lvalue':([0,1,7,12,13,31,35,37,44,45,46,47,48,49,50,51,52,53,54,55,56,57,59,63,64,66,67,68,69,70,71,72,73,74,75,77,78,79,100,103,119,120,121,129,130,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'stmt_list':([7,],[37,]),'list':([13,35,59,77,78,79,],[61,81,81,114,115,116,]),'range':([103,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program_simple','Mparser.py',33),
  ('program -> program stmt','program',2,'p_program_add','Mparser.py',40),
  ('stmt -> print_stmt','stmt',1,'p_stmt','Mparser.py',49),
  ('stmt -> if_stmt','stmt',1,'p_stmt','Mparser.py',50),
  ('stmt -> while_stmt','stmt',1,'p_stmt','Mparser.py',51),
  ('stmt -> for_stmt','stmt',1,'p_stmt','Mparser.py',52),
  ('stmt -> LPAREN_F stmt_list RPAREN_F','stmt',3,'p_program_block','Mparser.py',59),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list_start','Mparser.py',66),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list_add','Mparser.py',73),
  ('stmt -> SEMICOLON','stmt',1,'p_empty_stmt','Mparser.py',81),
  ('stmt -> LPAREN_F RPAREN_F','stmt',2,'p_empty_stmt','Mparser.py',82),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_break','Mparser.py',91),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_continue','Mparser.py',100),
  ('stmt -> expr SEMICOLON','stmt',2,'p_stmt_semicolon','Mparser.py',108),
  ('stmt -> RETURN expr SEMICOLON','stmt',3,'p_return','Mparser.py',116),
  ('comparison -> expr GREATER expr','comparison',3,'p_comparison','Mparser.py',123),
  ('comparison -> expr LESSER expr','comparison',3,'p_comparison','Mparser.py',124),
  ('comparison -> expr GREATER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',125),
  ('comparison -> expr LESSER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',126),
  ('comparison -> expr EQUALS expr','comparison',3,'p_comparison','Mparser.py',127),
  ('comparison -> expr NOT_EQUAL expr','comparison',3,'p_comparison','Mparser.py',128),
  ('operator -> expr PLUS expr','operator',3,'p_operator','Mparser.py',135),
  ('operator -> expr MINUS expr','operator',3,'p_operator','Mparser.py',136),
  ('operator -> expr TIMES expr','operator',3,'p_operator','Mparser.py',137),
  ('operator -> expr DIVIDE expr','operator',3,'p_operator','Mparser.py',138),
  ('operator -> MINUS expr','operator',2,'p_uminus','Mparser.py',145),
  ('type_recognition -> ID','type_recognition',1,'p_Variable','Mparser.py',160),
  ('type_recognition -> NUMBER','type_recognition',1,'p_intNum','Mparser.py',167),
  ('type_recognition -> FLOATNUMBER','type_recognition',1,'p_floatNum','Mparser.py',174),
  ('type_recognition -> STRING','type_recognition',1,'p_string','Mparser.py',181),
  ('single_operation -> ID ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',188),
  ('single_operation -> ID INCREMENT expr','single_operation',3,'p_single_operation','Mparser.py',189),
  ('single_operation -> ID DECREMENT expr','single_operation',3,'p_single_operation','Mparser.py',190),
  ('single_operation -> ID MULTIPLY_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',191),
  ('single_operation -> ID DIVIDE_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',192),
  ('expression_operation -> expr PLUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',202),
  ('expression_operation -> expr MINUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',203),
  ('expression_operation -> expr TIMES_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',204),
  ('expression_operation -> expr DIVIDE_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',205),
  ('matrix_element_operation -> lvalue ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',212),
  ('matrix_element_operation -> lvalue INCREMENT expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',213),
  ('matrix_element_operation -> lvalue DECREMENT expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',214),
  ('matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',215),
  ('matrix_element_operation -> lvalue DIVIDE_ASSIGN expr','matrix_element_operation',3,'p_matrix_element_operation','Mparser.py',216),
  ('lvalue -> expr idx','lvalue',2,'p_matrix_reference','Mparser.py',225),
  ('idx -> LPAREN_SQ list RPAREN_SQ','idx',3,'p_idx','Mparser.py',235),
  ('list -> expr','list',1,'p_list','Mparser.py',242),
  ('list -> list COMMA expr','list',3,'p_list_add','Mparser.py',249),
  ('empty -> LPAREN_SQ RPAREN_SQ','empty',2,'p_empty','Mparser.py',257),
  ('special_matrix -> EYE LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',264),
  ('special_matrix -> ONES LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',265),
  ('special_matrix -> ZEROS LPAREN list RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',266),
  ('expr -> type_recognition','expr',1,'p_epxr','Mparser.py',274),
  ('expr -> single_operation','expr',1,'p_epxr','Mparser.py',275),
  ('expr -> matrix_element_operation','expr',1,'p_epxr','Mparser.py',276),
  ('expr -> expression_operation','expr',1,'p_epxr','Mparser.py',277),
  ('expr -> comparison','expr',1,'p_epxr','Mparser.py',278),
  ('expr -> operator','expr',1,'p_epxr','Mparser.py',279),
  ('expr -> special_matrix','expr',1,'p_epxr','Mparser.py',280),
  ('expr -> empty','expr',1,'p_epxr','Mparser.py',281),
  ('expr -> idx','expr',1,'p_epxr','Mparser.py',282),
  ('expr -> lvalue','expr',1,'p_epxr','Mparser.py',283),
  ('expr -> expr TRANSPOSE','expr',2,'p_transpose','Mparser.py',291),
  ('if_stmt -> IF LPAREN expr RPAREN stmt','if_stmt',5,'p_if_stmt','Mparser.py',298),
  ('if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','if_stmt',7,'p_if_else_stmt','Mparser.py',306),
  ('while_stmt -> WHILE LPAREN expr RPAREN stmt','while_stmt',5,'p_while_stmt','Mparser.py',313),
  ('for_stmt -> FOR ID ASSIGN range stmt','for_stmt',5,'p_for_stmt','Mparser.py',320),
  ('range -> expr RANGE expr','range',3,'p_range','Mparser.py',328),
  ('print_stmt -> PRINT list SEMICOLON','print_stmt',3,'p_print','Mparser.py',335),
]
