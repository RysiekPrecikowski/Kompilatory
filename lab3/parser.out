Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt
Rule 2     program -> program stmt
Rule 3     stmt -> print_stmt
Rule 4     stmt -> if_stmt
Rule 5     stmt -> while_stmt
Rule 6     stmt -> for_stmt
Rule 7     stmt -> LPAREN_F stmt_list RPAREN_F
Rule 8     stmt_list -> stmt
Rule 9     stmt_list -> stmt_list stmt
Rule 10    stmt -> SEMICOLON
Rule 11    stmt -> LPAREN_F RPAREN_F
Rule 12    stmt -> BREAK SEMICOLON
Rule 13    stmt -> CONTINUE SEMICOLON
Rule 14    stmt -> expr SEMICOLON
Rule 15    stmt -> RETURN expr SEMICOLON
Rule 16    comparison -> expr GREATER expr
Rule 17    comparison -> expr LESSER expr
Rule 18    comparison -> expr GREATER_EQUAL expr
Rule 19    comparison -> expr LESSER_EQUAL expr
Rule 20    comparison -> expr EQUALS expr
Rule 21    comparison -> expr NOT_EQUAL expr
Rule 22    operator -> expr PLUS expr
Rule 23    operator -> expr MINUS expr
Rule 24    operator -> expr TIMES expr
Rule 25    operator -> expr DIVIDE expr
Rule 26    operator -> MINUS expr
Rule 27    type_recognition -> ID
Rule 28    type_recognition -> NUMBER
Rule 29    type_recognition -> FLOATNUMBER
Rule 30    type_recognition -> STRING
Rule 31    single_operation -> ID ASSIGN expr
Rule 32    single_operation -> ID INCREMENT expr
Rule 33    single_operation -> ID DECREMENT expr
Rule 34    single_operation -> ID MULTIPLY_ASSIGN expr
Rule 35    single_operation -> ID DIVIDE_ASSIGN expr
Rule 36    expression_operation -> expr PLUS_MATRIX expr
Rule 37    expression_operation -> expr MINUS_MATRIX expr
Rule 38    expression_operation -> expr TIMES_MATRIX expr
Rule 39    expression_operation -> expr DIVIDE_MATRIX expr
Rule 40    matrix_element_operation -> lvalue ASSIGN expr
Rule 41    matrix_element_operation -> lvalue INCREMENT expr
Rule 42    matrix_element_operation -> lvalue DECREMENT expr
Rule 43    matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr
Rule 44    matrix_element_operation -> lvalue DIVIDE_ASSIGN expr
Rule 45    lvalue -> expr idx
Rule 46    idx -> LPAREN_SQ list RPAREN_SQ
Rule 47    list -> expr
Rule 48    list -> list COMMA expr
Rule 49    empty -> LPAREN_SQ RPAREN_SQ
Rule 50    special_matrix -> EYE LPAREN list RPAREN
Rule 51    special_matrix -> ONES LPAREN list RPAREN
Rule 52    special_matrix -> ZEROS LPAREN list RPAREN
Rule 53    expr -> type_recognition
Rule 54    expr -> single_operation
Rule 55    expr -> matrix_element_operation
Rule 56    expr -> expression_operation
Rule 57    expr -> comparison
Rule 58    expr -> operator
Rule 59    expr -> special_matrix
Rule 60    expr -> empty
Rule 61    expr -> idx
Rule 62    expr -> lvalue
Rule 63    expr -> expr TRANSPOSE
Rule 64    if_stmt -> IF LPAREN expr RPAREN stmt
Rule 65    if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt
Rule 66    while_stmt -> WHILE LPAREN expr RPAREN stmt
Rule 67    for_stmt -> FOR ID ASSIGN range stmt
Rule 68    range -> expr RANGE expr
Rule 69    print_stmt -> PRINT list SEMICOLON

Terminals, with rules where they appear

ASSIGN               : 31 40 67
BREAK                : 12
COMMA                : 48
CONTINUE             : 13
DECREMENT            : 33 42
DIVIDE               : 25
DIVIDE_ASSIGN        : 35 44
DIVIDE_MATRIX        : 39
ELSE                 : 65
EQUALS               : 20
EYE                  : 50
FLOATNUMBER          : 29
FOR                  : 67
GREATER              : 16
GREATER_EQUAL        : 18
ID                   : 27 31 32 33 34 35 67
IF                   : 64 65
INCREMENT            : 32 41
LESSER               : 17
LESSER_EQUAL         : 19
LPAREN               : 50 51 52 64 65 66
LPAREN_F             : 7 11
LPAREN_SQ            : 46 49
MINUS                : 23 26
MINUS_MATRIX         : 37
MULTIPLY_ASSIGN      : 34 43
NOT_EQUAL            : 21
NUMBER               : 28
ONES                 : 51
PLUS                 : 22
PLUS_MATRIX          : 36
PRINT                : 69
RANGE                : 68
RETURN               : 15
RPAREN               : 50 51 52 64 65 66
RPAREN_F             : 7 11
RPAREN_SQ            : 46 49
SEMICOLON            : 10 12 13 14 15 69
STRING               : 30
TIMES                : 24
TIMES_MATRIX         : 38
TRANSPOSE            : 63
WHILE                : 66
ZEROS                : 52
error                : 

Nonterminals, with rules where they appear

comparison           : 57
empty                : 60
expr                 : 14 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 31 32 33 34 35 36 36 37 37 38 38 39 39 40 41 42 43 44 45 47 48 63 64 65 66 68 68
expression_operation : 56
for_stmt             : 6
idx                  : 45 61
if_stmt              : 4
list                 : 46 48 50 51 52 69
lvalue               : 40 41 42 43 44 62
matrix_element_operation : 55
operator             : 58
print_stmt           : 3
program              : 2 0
range                : 67
single_operation     : 54
special_matrix       : 59
stmt                 : 1 2 8 9 64 65 65 66 67
stmt_list            : 7 9
type_recognition     : 53
while_stmt           : 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt
    (2) program -> . program stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    program                        shift and go to state 1
    stmt                           shift and go to state 2
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    expr                           shift and go to state 11
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 1

    (0) S' -> program .
    (2) program -> program . stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    stmt                           shift and go to state 36
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    expr                           shift and go to state 11
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 2

    (1) program -> stmt .

    LPAREN_F        reduce using rule 1 (program -> stmt .)
    SEMICOLON       reduce using rule 1 (program -> stmt .)
    BREAK           reduce using rule 1 (program -> stmt .)
    CONTINUE        reduce using rule 1 (program -> stmt .)
    RETURN          reduce using rule 1 (program -> stmt .)
    PRINT           reduce using rule 1 (program -> stmt .)
    IF              reduce using rule 1 (program -> stmt .)
    WHILE           reduce using rule 1 (program -> stmt .)
    FOR             reduce using rule 1 (program -> stmt .)
    ID              reduce using rule 1 (program -> stmt .)
    NUMBER          reduce using rule 1 (program -> stmt .)
    FLOATNUMBER     reduce using rule 1 (program -> stmt .)
    STRING          reduce using rule 1 (program -> stmt .)
    MINUS           reduce using rule 1 (program -> stmt .)
    EYE             reduce using rule 1 (program -> stmt .)
    ONES            reduce using rule 1 (program -> stmt .)
    ZEROS           reduce using rule 1 (program -> stmt .)
    LPAREN_SQ       reduce using rule 1 (program -> stmt .)
    $end            reduce using rule 1 (program -> stmt .)


state 3

    (3) stmt -> print_stmt .

    LPAREN_F        reduce using rule 3 (stmt -> print_stmt .)
    SEMICOLON       reduce using rule 3 (stmt -> print_stmt .)
    BREAK           reduce using rule 3 (stmt -> print_stmt .)
    CONTINUE        reduce using rule 3 (stmt -> print_stmt .)
    RETURN          reduce using rule 3 (stmt -> print_stmt .)
    PRINT           reduce using rule 3 (stmt -> print_stmt .)
    IF              reduce using rule 3 (stmt -> print_stmt .)
    WHILE           reduce using rule 3 (stmt -> print_stmt .)
    FOR             reduce using rule 3 (stmt -> print_stmt .)
    ID              reduce using rule 3 (stmt -> print_stmt .)
    NUMBER          reduce using rule 3 (stmt -> print_stmt .)
    FLOATNUMBER     reduce using rule 3 (stmt -> print_stmt .)
    STRING          reduce using rule 3 (stmt -> print_stmt .)
    MINUS           reduce using rule 3 (stmt -> print_stmt .)
    EYE             reduce using rule 3 (stmt -> print_stmt .)
    ONES            reduce using rule 3 (stmt -> print_stmt .)
    ZEROS           reduce using rule 3 (stmt -> print_stmt .)
    LPAREN_SQ       reduce using rule 3 (stmt -> print_stmt .)
    $end            reduce using rule 3 (stmt -> print_stmt .)
    RPAREN_F        reduce using rule 3 (stmt -> print_stmt .)
    ELSE            reduce using rule 3 (stmt -> print_stmt .)


state 4

    (4) stmt -> if_stmt .

    LPAREN_F        reduce using rule 4 (stmt -> if_stmt .)
    SEMICOLON       reduce using rule 4 (stmt -> if_stmt .)
    BREAK           reduce using rule 4 (stmt -> if_stmt .)
    CONTINUE        reduce using rule 4 (stmt -> if_stmt .)
    RETURN          reduce using rule 4 (stmt -> if_stmt .)
    PRINT           reduce using rule 4 (stmt -> if_stmt .)
    IF              reduce using rule 4 (stmt -> if_stmt .)
    WHILE           reduce using rule 4 (stmt -> if_stmt .)
    FOR             reduce using rule 4 (stmt -> if_stmt .)
    ID              reduce using rule 4 (stmt -> if_stmt .)
    NUMBER          reduce using rule 4 (stmt -> if_stmt .)
    FLOATNUMBER     reduce using rule 4 (stmt -> if_stmt .)
    STRING          reduce using rule 4 (stmt -> if_stmt .)
    MINUS           reduce using rule 4 (stmt -> if_stmt .)
    EYE             reduce using rule 4 (stmt -> if_stmt .)
    ONES            reduce using rule 4 (stmt -> if_stmt .)
    ZEROS           reduce using rule 4 (stmt -> if_stmt .)
    LPAREN_SQ       reduce using rule 4 (stmt -> if_stmt .)
    $end            reduce using rule 4 (stmt -> if_stmt .)
    RPAREN_F        reduce using rule 4 (stmt -> if_stmt .)
    ELSE            reduce using rule 4 (stmt -> if_stmt .)


state 5

    (5) stmt -> while_stmt .

    LPAREN_F        reduce using rule 5 (stmt -> while_stmt .)
    SEMICOLON       reduce using rule 5 (stmt -> while_stmt .)
    BREAK           reduce using rule 5 (stmt -> while_stmt .)
    CONTINUE        reduce using rule 5 (stmt -> while_stmt .)
    RETURN          reduce using rule 5 (stmt -> while_stmt .)
    PRINT           reduce using rule 5 (stmt -> while_stmt .)
    IF              reduce using rule 5 (stmt -> while_stmt .)
    WHILE           reduce using rule 5 (stmt -> while_stmt .)
    FOR             reduce using rule 5 (stmt -> while_stmt .)
    ID              reduce using rule 5 (stmt -> while_stmt .)
    NUMBER          reduce using rule 5 (stmt -> while_stmt .)
    FLOATNUMBER     reduce using rule 5 (stmt -> while_stmt .)
    STRING          reduce using rule 5 (stmt -> while_stmt .)
    MINUS           reduce using rule 5 (stmt -> while_stmt .)
    EYE             reduce using rule 5 (stmt -> while_stmt .)
    ONES            reduce using rule 5 (stmt -> while_stmt .)
    ZEROS           reduce using rule 5 (stmt -> while_stmt .)
    LPAREN_SQ       reduce using rule 5 (stmt -> while_stmt .)
    $end            reduce using rule 5 (stmt -> while_stmt .)
    RPAREN_F        reduce using rule 5 (stmt -> while_stmt .)
    ELSE            reduce using rule 5 (stmt -> while_stmt .)


state 6

    (6) stmt -> for_stmt .

    LPAREN_F        reduce using rule 6 (stmt -> for_stmt .)
    SEMICOLON       reduce using rule 6 (stmt -> for_stmt .)
    BREAK           reduce using rule 6 (stmt -> for_stmt .)
    CONTINUE        reduce using rule 6 (stmt -> for_stmt .)
    RETURN          reduce using rule 6 (stmt -> for_stmt .)
    PRINT           reduce using rule 6 (stmt -> for_stmt .)
    IF              reduce using rule 6 (stmt -> for_stmt .)
    WHILE           reduce using rule 6 (stmt -> for_stmt .)
    FOR             reduce using rule 6 (stmt -> for_stmt .)
    ID              reduce using rule 6 (stmt -> for_stmt .)
    NUMBER          reduce using rule 6 (stmt -> for_stmt .)
    FLOATNUMBER     reduce using rule 6 (stmt -> for_stmt .)
    STRING          reduce using rule 6 (stmt -> for_stmt .)
    MINUS           reduce using rule 6 (stmt -> for_stmt .)
    EYE             reduce using rule 6 (stmt -> for_stmt .)
    ONES            reduce using rule 6 (stmt -> for_stmt .)
    ZEROS           reduce using rule 6 (stmt -> for_stmt .)
    LPAREN_SQ       reduce using rule 6 (stmt -> for_stmt .)
    $end            reduce using rule 6 (stmt -> for_stmt .)
    RPAREN_F        reduce using rule 6 (stmt -> for_stmt .)
    ELSE            reduce using rule 6 (stmt -> for_stmt .)


state 7

    (7) stmt -> LPAREN_F . stmt_list RPAREN_F
    (11) stmt -> LPAREN_F . RPAREN_F
    (8) stmt_list -> . stmt
    (9) stmt_list -> . stmt_list stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    RPAREN_F        shift and go to state 38
    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    stmt_list                      shift and go to state 37
    stmt                           shift and go to state 39
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    expr                           shift and go to state 11
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 8

    (10) stmt -> SEMICOLON .

    LPAREN_F        reduce using rule 10 (stmt -> SEMICOLON .)
    SEMICOLON       reduce using rule 10 (stmt -> SEMICOLON .)
    BREAK           reduce using rule 10 (stmt -> SEMICOLON .)
    CONTINUE        reduce using rule 10 (stmt -> SEMICOLON .)
    RETURN          reduce using rule 10 (stmt -> SEMICOLON .)
    PRINT           reduce using rule 10 (stmt -> SEMICOLON .)
    IF              reduce using rule 10 (stmt -> SEMICOLON .)
    WHILE           reduce using rule 10 (stmt -> SEMICOLON .)
    FOR             reduce using rule 10 (stmt -> SEMICOLON .)
    ID              reduce using rule 10 (stmt -> SEMICOLON .)
    NUMBER          reduce using rule 10 (stmt -> SEMICOLON .)
    FLOATNUMBER     reduce using rule 10 (stmt -> SEMICOLON .)
    STRING          reduce using rule 10 (stmt -> SEMICOLON .)
    MINUS           reduce using rule 10 (stmt -> SEMICOLON .)
    EYE             reduce using rule 10 (stmt -> SEMICOLON .)
    ONES            reduce using rule 10 (stmt -> SEMICOLON .)
    ZEROS           reduce using rule 10 (stmt -> SEMICOLON .)
    LPAREN_SQ       reduce using rule 10 (stmt -> SEMICOLON .)
    $end            reduce using rule 10 (stmt -> SEMICOLON .)
    RPAREN_F        reduce using rule 10 (stmt -> SEMICOLON .)
    ELSE            reduce using rule 10 (stmt -> SEMICOLON .)


state 9

    (12) stmt -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 40


state 10

    (13) stmt -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 41


state 11

    (14) stmt -> expr . SEMICOLON
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       shift and go to state 42
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 12

    (15) stmt -> RETURN . expr SEMICOLON
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 60
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 13

    (69) print_stmt -> PRINT . list SEMICOLON
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 61
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 14

    (64) if_stmt -> IF . LPAREN expr RPAREN stmt
    (65) if_stmt -> IF . LPAREN expr RPAREN stmt ELSE stmt

    LPAREN          shift and go to state 63


state 15

    (66) while_stmt -> WHILE . LPAREN expr RPAREN stmt

    LPAREN          shift and go to state 64


state 16

    (67) for_stmt -> FOR . ID ASSIGN range stmt

    ID              shift and go to state 65


state 17

    (27) type_recognition -> ID .
    (31) single_operation -> ID . ASSIGN expr
    (32) single_operation -> ID . INCREMENT expr
    (33) single_operation -> ID . DECREMENT expr
    (34) single_operation -> ID . MULTIPLY_ASSIGN expr
    (35) single_operation -> ID . DIVIDE_ASSIGN expr

    SEMICOLON       reduce using rule 27 (type_recognition -> ID .)
    TRANSPOSE       reduce using rule 27 (type_recognition -> ID .)
    PLUS_MATRIX     reduce using rule 27 (type_recognition -> ID .)
    MINUS_MATRIX    reduce using rule 27 (type_recognition -> ID .)
    TIMES_MATRIX    reduce using rule 27 (type_recognition -> ID .)
    DIVIDE_MATRIX   reduce using rule 27 (type_recognition -> ID .)
    GREATER         reduce using rule 27 (type_recognition -> ID .)
    LESSER          reduce using rule 27 (type_recognition -> ID .)
    GREATER_EQUAL   reduce using rule 27 (type_recognition -> ID .)
    LESSER_EQUAL    reduce using rule 27 (type_recognition -> ID .)
    EQUALS          reduce using rule 27 (type_recognition -> ID .)
    NOT_EQUAL       reduce using rule 27 (type_recognition -> ID .)
    PLUS            reduce using rule 27 (type_recognition -> ID .)
    MINUS           reduce using rule 27 (type_recognition -> ID .)
    TIMES           reduce using rule 27 (type_recognition -> ID .)
    DIVIDE          reduce using rule 27 (type_recognition -> ID .)
    LPAREN_SQ       reduce using rule 27 (type_recognition -> ID .)
    COMMA           reduce using rule 27 (type_recognition -> ID .)
    RPAREN_SQ       reduce using rule 27 (type_recognition -> ID .)
    RPAREN          reduce using rule 27 (type_recognition -> ID .)
    RANGE           reduce using rule 27 (type_recognition -> ID .)
    LPAREN_F        reduce using rule 27 (type_recognition -> ID .)
    BREAK           reduce using rule 27 (type_recognition -> ID .)
    CONTINUE        reduce using rule 27 (type_recognition -> ID .)
    RETURN          reduce using rule 27 (type_recognition -> ID .)
    PRINT           reduce using rule 27 (type_recognition -> ID .)
    IF              reduce using rule 27 (type_recognition -> ID .)
    WHILE           reduce using rule 27 (type_recognition -> ID .)
    FOR             reduce using rule 27 (type_recognition -> ID .)
    ID              reduce using rule 27 (type_recognition -> ID .)
    NUMBER          reduce using rule 27 (type_recognition -> ID .)
    FLOATNUMBER     reduce using rule 27 (type_recognition -> ID .)
    STRING          reduce using rule 27 (type_recognition -> ID .)
    EYE             reduce using rule 27 (type_recognition -> ID .)
    ONES            reduce using rule 27 (type_recognition -> ID .)
    ZEROS           reduce using rule 27 (type_recognition -> ID .)
    ASSIGN          shift and go to state 66
    INCREMENT       shift and go to state 67
    DECREMENT       shift and go to state 68
    MULTIPLY_ASSIGN shift and go to state 69
    DIVIDE_ASSIGN   shift and go to state 70


state 18

    (53) expr -> type_recognition .

    SEMICOLON       reduce using rule 53 (expr -> type_recognition .)
    TRANSPOSE       reduce using rule 53 (expr -> type_recognition .)
    PLUS_MATRIX     reduce using rule 53 (expr -> type_recognition .)
    MINUS_MATRIX    reduce using rule 53 (expr -> type_recognition .)
    TIMES_MATRIX    reduce using rule 53 (expr -> type_recognition .)
    DIVIDE_MATRIX   reduce using rule 53 (expr -> type_recognition .)
    GREATER         reduce using rule 53 (expr -> type_recognition .)
    LESSER          reduce using rule 53 (expr -> type_recognition .)
    GREATER_EQUAL   reduce using rule 53 (expr -> type_recognition .)
    LESSER_EQUAL    reduce using rule 53 (expr -> type_recognition .)
    EQUALS          reduce using rule 53 (expr -> type_recognition .)
    NOT_EQUAL       reduce using rule 53 (expr -> type_recognition .)
    PLUS            reduce using rule 53 (expr -> type_recognition .)
    MINUS           reduce using rule 53 (expr -> type_recognition .)
    TIMES           reduce using rule 53 (expr -> type_recognition .)
    DIVIDE          reduce using rule 53 (expr -> type_recognition .)
    LPAREN_SQ       reduce using rule 53 (expr -> type_recognition .)
    COMMA           reduce using rule 53 (expr -> type_recognition .)
    RPAREN_SQ       reduce using rule 53 (expr -> type_recognition .)
    RPAREN          reduce using rule 53 (expr -> type_recognition .)
    RANGE           reduce using rule 53 (expr -> type_recognition .)
    LPAREN_F        reduce using rule 53 (expr -> type_recognition .)
    BREAK           reduce using rule 53 (expr -> type_recognition .)
    CONTINUE        reduce using rule 53 (expr -> type_recognition .)
    RETURN          reduce using rule 53 (expr -> type_recognition .)
    PRINT           reduce using rule 53 (expr -> type_recognition .)
    IF              reduce using rule 53 (expr -> type_recognition .)
    WHILE           reduce using rule 53 (expr -> type_recognition .)
    FOR             reduce using rule 53 (expr -> type_recognition .)
    ID              reduce using rule 53 (expr -> type_recognition .)
    NUMBER          reduce using rule 53 (expr -> type_recognition .)
    FLOATNUMBER     reduce using rule 53 (expr -> type_recognition .)
    STRING          reduce using rule 53 (expr -> type_recognition .)
    EYE             reduce using rule 53 (expr -> type_recognition .)
    ONES            reduce using rule 53 (expr -> type_recognition .)
    ZEROS           reduce using rule 53 (expr -> type_recognition .)


state 19

    (54) expr -> single_operation .

    SEMICOLON       reduce using rule 54 (expr -> single_operation .)
    TRANSPOSE       reduce using rule 54 (expr -> single_operation .)
    PLUS_MATRIX     reduce using rule 54 (expr -> single_operation .)
    MINUS_MATRIX    reduce using rule 54 (expr -> single_operation .)
    TIMES_MATRIX    reduce using rule 54 (expr -> single_operation .)
    DIVIDE_MATRIX   reduce using rule 54 (expr -> single_operation .)
    GREATER         reduce using rule 54 (expr -> single_operation .)
    LESSER          reduce using rule 54 (expr -> single_operation .)
    GREATER_EQUAL   reduce using rule 54 (expr -> single_operation .)
    LESSER_EQUAL    reduce using rule 54 (expr -> single_operation .)
    EQUALS          reduce using rule 54 (expr -> single_operation .)
    NOT_EQUAL       reduce using rule 54 (expr -> single_operation .)
    PLUS            reduce using rule 54 (expr -> single_operation .)
    MINUS           reduce using rule 54 (expr -> single_operation .)
    TIMES           reduce using rule 54 (expr -> single_operation .)
    DIVIDE          reduce using rule 54 (expr -> single_operation .)
    LPAREN_SQ       reduce using rule 54 (expr -> single_operation .)
    COMMA           reduce using rule 54 (expr -> single_operation .)
    RPAREN_SQ       reduce using rule 54 (expr -> single_operation .)
    RPAREN          reduce using rule 54 (expr -> single_operation .)
    RANGE           reduce using rule 54 (expr -> single_operation .)
    LPAREN_F        reduce using rule 54 (expr -> single_operation .)
    BREAK           reduce using rule 54 (expr -> single_operation .)
    CONTINUE        reduce using rule 54 (expr -> single_operation .)
    RETURN          reduce using rule 54 (expr -> single_operation .)
    PRINT           reduce using rule 54 (expr -> single_operation .)
    IF              reduce using rule 54 (expr -> single_operation .)
    WHILE           reduce using rule 54 (expr -> single_operation .)
    FOR             reduce using rule 54 (expr -> single_operation .)
    ID              reduce using rule 54 (expr -> single_operation .)
    NUMBER          reduce using rule 54 (expr -> single_operation .)
    FLOATNUMBER     reduce using rule 54 (expr -> single_operation .)
    STRING          reduce using rule 54 (expr -> single_operation .)
    EYE             reduce using rule 54 (expr -> single_operation .)
    ONES            reduce using rule 54 (expr -> single_operation .)
    ZEROS           reduce using rule 54 (expr -> single_operation .)


state 20

    (55) expr -> matrix_element_operation .

    SEMICOLON       reduce using rule 55 (expr -> matrix_element_operation .)
    TRANSPOSE       reduce using rule 55 (expr -> matrix_element_operation .)
    PLUS_MATRIX     reduce using rule 55 (expr -> matrix_element_operation .)
    MINUS_MATRIX    reduce using rule 55 (expr -> matrix_element_operation .)
    TIMES_MATRIX    reduce using rule 55 (expr -> matrix_element_operation .)
    DIVIDE_MATRIX   reduce using rule 55 (expr -> matrix_element_operation .)
    GREATER         reduce using rule 55 (expr -> matrix_element_operation .)
    LESSER          reduce using rule 55 (expr -> matrix_element_operation .)
    GREATER_EQUAL   reduce using rule 55 (expr -> matrix_element_operation .)
    LESSER_EQUAL    reduce using rule 55 (expr -> matrix_element_operation .)
    EQUALS          reduce using rule 55 (expr -> matrix_element_operation .)
    NOT_EQUAL       reduce using rule 55 (expr -> matrix_element_operation .)
    PLUS            reduce using rule 55 (expr -> matrix_element_operation .)
    MINUS           reduce using rule 55 (expr -> matrix_element_operation .)
    TIMES           reduce using rule 55 (expr -> matrix_element_operation .)
    DIVIDE          reduce using rule 55 (expr -> matrix_element_operation .)
    LPAREN_SQ       reduce using rule 55 (expr -> matrix_element_operation .)
    COMMA           reduce using rule 55 (expr -> matrix_element_operation .)
    RPAREN_SQ       reduce using rule 55 (expr -> matrix_element_operation .)
    RPAREN          reduce using rule 55 (expr -> matrix_element_operation .)
    RANGE           reduce using rule 55 (expr -> matrix_element_operation .)
    LPAREN_F        reduce using rule 55 (expr -> matrix_element_operation .)
    BREAK           reduce using rule 55 (expr -> matrix_element_operation .)
    CONTINUE        reduce using rule 55 (expr -> matrix_element_operation .)
    RETURN          reduce using rule 55 (expr -> matrix_element_operation .)
    PRINT           reduce using rule 55 (expr -> matrix_element_operation .)
    IF              reduce using rule 55 (expr -> matrix_element_operation .)
    WHILE           reduce using rule 55 (expr -> matrix_element_operation .)
    FOR             reduce using rule 55 (expr -> matrix_element_operation .)
    ID              reduce using rule 55 (expr -> matrix_element_operation .)
    NUMBER          reduce using rule 55 (expr -> matrix_element_operation .)
    FLOATNUMBER     reduce using rule 55 (expr -> matrix_element_operation .)
    STRING          reduce using rule 55 (expr -> matrix_element_operation .)
    EYE             reduce using rule 55 (expr -> matrix_element_operation .)
    ONES            reduce using rule 55 (expr -> matrix_element_operation .)
    ZEROS           reduce using rule 55 (expr -> matrix_element_operation .)


state 21

    (56) expr -> expression_operation .

    SEMICOLON       reduce using rule 56 (expr -> expression_operation .)
    TRANSPOSE       reduce using rule 56 (expr -> expression_operation .)
    PLUS_MATRIX     reduce using rule 56 (expr -> expression_operation .)
    MINUS_MATRIX    reduce using rule 56 (expr -> expression_operation .)
    TIMES_MATRIX    reduce using rule 56 (expr -> expression_operation .)
    DIVIDE_MATRIX   reduce using rule 56 (expr -> expression_operation .)
    GREATER         reduce using rule 56 (expr -> expression_operation .)
    LESSER          reduce using rule 56 (expr -> expression_operation .)
    GREATER_EQUAL   reduce using rule 56 (expr -> expression_operation .)
    LESSER_EQUAL    reduce using rule 56 (expr -> expression_operation .)
    EQUALS          reduce using rule 56 (expr -> expression_operation .)
    NOT_EQUAL       reduce using rule 56 (expr -> expression_operation .)
    PLUS            reduce using rule 56 (expr -> expression_operation .)
    MINUS           reduce using rule 56 (expr -> expression_operation .)
    TIMES           reduce using rule 56 (expr -> expression_operation .)
    DIVIDE          reduce using rule 56 (expr -> expression_operation .)
    LPAREN_SQ       reduce using rule 56 (expr -> expression_operation .)
    COMMA           reduce using rule 56 (expr -> expression_operation .)
    RPAREN_SQ       reduce using rule 56 (expr -> expression_operation .)
    RPAREN          reduce using rule 56 (expr -> expression_operation .)
    RANGE           reduce using rule 56 (expr -> expression_operation .)
    LPAREN_F        reduce using rule 56 (expr -> expression_operation .)
    BREAK           reduce using rule 56 (expr -> expression_operation .)
    CONTINUE        reduce using rule 56 (expr -> expression_operation .)
    RETURN          reduce using rule 56 (expr -> expression_operation .)
    PRINT           reduce using rule 56 (expr -> expression_operation .)
    IF              reduce using rule 56 (expr -> expression_operation .)
    WHILE           reduce using rule 56 (expr -> expression_operation .)
    FOR             reduce using rule 56 (expr -> expression_operation .)
    ID              reduce using rule 56 (expr -> expression_operation .)
    NUMBER          reduce using rule 56 (expr -> expression_operation .)
    FLOATNUMBER     reduce using rule 56 (expr -> expression_operation .)
    STRING          reduce using rule 56 (expr -> expression_operation .)
    EYE             reduce using rule 56 (expr -> expression_operation .)
    ONES            reduce using rule 56 (expr -> expression_operation .)
    ZEROS           reduce using rule 56 (expr -> expression_operation .)


state 22

    (57) expr -> comparison .

    SEMICOLON       reduce using rule 57 (expr -> comparison .)
    TRANSPOSE       reduce using rule 57 (expr -> comparison .)
    PLUS_MATRIX     reduce using rule 57 (expr -> comparison .)
    MINUS_MATRIX    reduce using rule 57 (expr -> comparison .)
    TIMES_MATRIX    reduce using rule 57 (expr -> comparison .)
    DIVIDE_MATRIX   reduce using rule 57 (expr -> comparison .)
    GREATER         reduce using rule 57 (expr -> comparison .)
    LESSER          reduce using rule 57 (expr -> comparison .)
    GREATER_EQUAL   reduce using rule 57 (expr -> comparison .)
    LESSER_EQUAL    reduce using rule 57 (expr -> comparison .)
    EQUALS          reduce using rule 57 (expr -> comparison .)
    NOT_EQUAL       reduce using rule 57 (expr -> comparison .)
    PLUS            reduce using rule 57 (expr -> comparison .)
    MINUS           reduce using rule 57 (expr -> comparison .)
    TIMES           reduce using rule 57 (expr -> comparison .)
    DIVIDE          reduce using rule 57 (expr -> comparison .)
    LPAREN_SQ       reduce using rule 57 (expr -> comparison .)
    COMMA           reduce using rule 57 (expr -> comparison .)
    RPAREN_SQ       reduce using rule 57 (expr -> comparison .)
    RPAREN          reduce using rule 57 (expr -> comparison .)
    RANGE           reduce using rule 57 (expr -> comparison .)
    LPAREN_F        reduce using rule 57 (expr -> comparison .)
    BREAK           reduce using rule 57 (expr -> comparison .)
    CONTINUE        reduce using rule 57 (expr -> comparison .)
    RETURN          reduce using rule 57 (expr -> comparison .)
    PRINT           reduce using rule 57 (expr -> comparison .)
    IF              reduce using rule 57 (expr -> comparison .)
    WHILE           reduce using rule 57 (expr -> comparison .)
    FOR             reduce using rule 57 (expr -> comparison .)
    ID              reduce using rule 57 (expr -> comparison .)
    NUMBER          reduce using rule 57 (expr -> comparison .)
    FLOATNUMBER     reduce using rule 57 (expr -> comparison .)
    STRING          reduce using rule 57 (expr -> comparison .)
    EYE             reduce using rule 57 (expr -> comparison .)
    ONES            reduce using rule 57 (expr -> comparison .)
    ZEROS           reduce using rule 57 (expr -> comparison .)


state 23

    (58) expr -> operator .

    SEMICOLON       reduce using rule 58 (expr -> operator .)
    TRANSPOSE       reduce using rule 58 (expr -> operator .)
    PLUS_MATRIX     reduce using rule 58 (expr -> operator .)
    MINUS_MATRIX    reduce using rule 58 (expr -> operator .)
    TIMES_MATRIX    reduce using rule 58 (expr -> operator .)
    DIVIDE_MATRIX   reduce using rule 58 (expr -> operator .)
    GREATER         reduce using rule 58 (expr -> operator .)
    LESSER          reduce using rule 58 (expr -> operator .)
    GREATER_EQUAL   reduce using rule 58 (expr -> operator .)
    LESSER_EQUAL    reduce using rule 58 (expr -> operator .)
    EQUALS          reduce using rule 58 (expr -> operator .)
    NOT_EQUAL       reduce using rule 58 (expr -> operator .)
    PLUS            reduce using rule 58 (expr -> operator .)
    MINUS           reduce using rule 58 (expr -> operator .)
    TIMES           reduce using rule 58 (expr -> operator .)
    DIVIDE          reduce using rule 58 (expr -> operator .)
    LPAREN_SQ       reduce using rule 58 (expr -> operator .)
    COMMA           reduce using rule 58 (expr -> operator .)
    RPAREN_SQ       reduce using rule 58 (expr -> operator .)
    RPAREN          reduce using rule 58 (expr -> operator .)
    RANGE           reduce using rule 58 (expr -> operator .)
    LPAREN_F        reduce using rule 58 (expr -> operator .)
    BREAK           reduce using rule 58 (expr -> operator .)
    CONTINUE        reduce using rule 58 (expr -> operator .)
    RETURN          reduce using rule 58 (expr -> operator .)
    PRINT           reduce using rule 58 (expr -> operator .)
    IF              reduce using rule 58 (expr -> operator .)
    WHILE           reduce using rule 58 (expr -> operator .)
    FOR             reduce using rule 58 (expr -> operator .)
    ID              reduce using rule 58 (expr -> operator .)
    NUMBER          reduce using rule 58 (expr -> operator .)
    FLOATNUMBER     reduce using rule 58 (expr -> operator .)
    STRING          reduce using rule 58 (expr -> operator .)
    EYE             reduce using rule 58 (expr -> operator .)
    ONES            reduce using rule 58 (expr -> operator .)
    ZEROS           reduce using rule 58 (expr -> operator .)


state 24

    (59) expr -> special_matrix .

    SEMICOLON       reduce using rule 59 (expr -> special_matrix .)
    TRANSPOSE       reduce using rule 59 (expr -> special_matrix .)
    PLUS_MATRIX     reduce using rule 59 (expr -> special_matrix .)
    MINUS_MATRIX    reduce using rule 59 (expr -> special_matrix .)
    TIMES_MATRIX    reduce using rule 59 (expr -> special_matrix .)
    DIVIDE_MATRIX   reduce using rule 59 (expr -> special_matrix .)
    GREATER         reduce using rule 59 (expr -> special_matrix .)
    LESSER          reduce using rule 59 (expr -> special_matrix .)
    GREATER_EQUAL   reduce using rule 59 (expr -> special_matrix .)
    LESSER_EQUAL    reduce using rule 59 (expr -> special_matrix .)
    EQUALS          reduce using rule 59 (expr -> special_matrix .)
    NOT_EQUAL       reduce using rule 59 (expr -> special_matrix .)
    PLUS            reduce using rule 59 (expr -> special_matrix .)
    MINUS           reduce using rule 59 (expr -> special_matrix .)
    TIMES           reduce using rule 59 (expr -> special_matrix .)
    DIVIDE          reduce using rule 59 (expr -> special_matrix .)
    LPAREN_SQ       reduce using rule 59 (expr -> special_matrix .)
    COMMA           reduce using rule 59 (expr -> special_matrix .)
    RPAREN_SQ       reduce using rule 59 (expr -> special_matrix .)
    RPAREN          reduce using rule 59 (expr -> special_matrix .)
    RANGE           reduce using rule 59 (expr -> special_matrix .)
    LPAREN_F        reduce using rule 59 (expr -> special_matrix .)
    BREAK           reduce using rule 59 (expr -> special_matrix .)
    CONTINUE        reduce using rule 59 (expr -> special_matrix .)
    RETURN          reduce using rule 59 (expr -> special_matrix .)
    PRINT           reduce using rule 59 (expr -> special_matrix .)
    IF              reduce using rule 59 (expr -> special_matrix .)
    WHILE           reduce using rule 59 (expr -> special_matrix .)
    FOR             reduce using rule 59 (expr -> special_matrix .)
    ID              reduce using rule 59 (expr -> special_matrix .)
    NUMBER          reduce using rule 59 (expr -> special_matrix .)
    FLOATNUMBER     reduce using rule 59 (expr -> special_matrix .)
    STRING          reduce using rule 59 (expr -> special_matrix .)
    EYE             reduce using rule 59 (expr -> special_matrix .)
    ONES            reduce using rule 59 (expr -> special_matrix .)
    ZEROS           reduce using rule 59 (expr -> special_matrix .)


state 25

    (60) expr -> empty .

    SEMICOLON       reduce using rule 60 (expr -> empty .)
    TRANSPOSE       reduce using rule 60 (expr -> empty .)
    PLUS_MATRIX     reduce using rule 60 (expr -> empty .)
    MINUS_MATRIX    reduce using rule 60 (expr -> empty .)
    TIMES_MATRIX    reduce using rule 60 (expr -> empty .)
    DIVIDE_MATRIX   reduce using rule 60 (expr -> empty .)
    GREATER         reduce using rule 60 (expr -> empty .)
    LESSER          reduce using rule 60 (expr -> empty .)
    GREATER_EQUAL   reduce using rule 60 (expr -> empty .)
    LESSER_EQUAL    reduce using rule 60 (expr -> empty .)
    EQUALS          reduce using rule 60 (expr -> empty .)
    NOT_EQUAL       reduce using rule 60 (expr -> empty .)
    PLUS            reduce using rule 60 (expr -> empty .)
    MINUS           reduce using rule 60 (expr -> empty .)
    TIMES           reduce using rule 60 (expr -> empty .)
    DIVIDE          reduce using rule 60 (expr -> empty .)
    LPAREN_SQ       reduce using rule 60 (expr -> empty .)
    COMMA           reduce using rule 60 (expr -> empty .)
    RPAREN_SQ       reduce using rule 60 (expr -> empty .)
    RPAREN          reduce using rule 60 (expr -> empty .)
    RANGE           reduce using rule 60 (expr -> empty .)
    LPAREN_F        reduce using rule 60 (expr -> empty .)
    BREAK           reduce using rule 60 (expr -> empty .)
    CONTINUE        reduce using rule 60 (expr -> empty .)
    RETURN          reduce using rule 60 (expr -> empty .)
    PRINT           reduce using rule 60 (expr -> empty .)
    IF              reduce using rule 60 (expr -> empty .)
    WHILE           reduce using rule 60 (expr -> empty .)
    FOR             reduce using rule 60 (expr -> empty .)
    ID              reduce using rule 60 (expr -> empty .)
    NUMBER          reduce using rule 60 (expr -> empty .)
    FLOATNUMBER     reduce using rule 60 (expr -> empty .)
    STRING          reduce using rule 60 (expr -> empty .)
    EYE             reduce using rule 60 (expr -> empty .)
    ONES            reduce using rule 60 (expr -> empty .)
    ZEROS           reduce using rule 60 (expr -> empty .)


state 26

    (61) expr -> idx .

    SEMICOLON       reduce using rule 61 (expr -> idx .)
    TRANSPOSE       reduce using rule 61 (expr -> idx .)
    PLUS_MATRIX     reduce using rule 61 (expr -> idx .)
    MINUS_MATRIX    reduce using rule 61 (expr -> idx .)
    TIMES_MATRIX    reduce using rule 61 (expr -> idx .)
    DIVIDE_MATRIX   reduce using rule 61 (expr -> idx .)
    GREATER         reduce using rule 61 (expr -> idx .)
    LESSER          reduce using rule 61 (expr -> idx .)
    GREATER_EQUAL   reduce using rule 61 (expr -> idx .)
    LESSER_EQUAL    reduce using rule 61 (expr -> idx .)
    EQUALS          reduce using rule 61 (expr -> idx .)
    NOT_EQUAL       reduce using rule 61 (expr -> idx .)
    PLUS            reduce using rule 61 (expr -> idx .)
    MINUS           reduce using rule 61 (expr -> idx .)
    TIMES           reduce using rule 61 (expr -> idx .)
    DIVIDE          reduce using rule 61 (expr -> idx .)
    LPAREN_SQ       reduce using rule 61 (expr -> idx .)
    COMMA           reduce using rule 61 (expr -> idx .)
    RPAREN_SQ       reduce using rule 61 (expr -> idx .)
    RPAREN          reduce using rule 61 (expr -> idx .)
    RANGE           reduce using rule 61 (expr -> idx .)
    LPAREN_F        reduce using rule 61 (expr -> idx .)
    BREAK           reduce using rule 61 (expr -> idx .)
    CONTINUE        reduce using rule 61 (expr -> idx .)
    RETURN          reduce using rule 61 (expr -> idx .)
    PRINT           reduce using rule 61 (expr -> idx .)
    IF              reduce using rule 61 (expr -> idx .)
    WHILE           reduce using rule 61 (expr -> idx .)
    FOR             reduce using rule 61 (expr -> idx .)
    ID              reduce using rule 61 (expr -> idx .)
    NUMBER          reduce using rule 61 (expr -> idx .)
    FLOATNUMBER     reduce using rule 61 (expr -> idx .)
    STRING          reduce using rule 61 (expr -> idx .)
    EYE             reduce using rule 61 (expr -> idx .)
    ONES            reduce using rule 61 (expr -> idx .)
    ZEROS           reduce using rule 61 (expr -> idx .)


state 27

    (62) expr -> lvalue .
    (40) matrix_element_operation -> lvalue . ASSIGN expr
    (41) matrix_element_operation -> lvalue . INCREMENT expr
    (42) matrix_element_operation -> lvalue . DECREMENT expr
    (43) matrix_element_operation -> lvalue . MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> lvalue . DIVIDE_ASSIGN expr

    SEMICOLON       reduce using rule 62 (expr -> lvalue .)
    TRANSPOSE       reduce using rule 62 (expr -> lvalue .)
    PLUS_MATRIX     reduce using rule 62 (expr -> lvalue .)
    MINUS_MATRIX    reduce using rule 62 (expr -> lvalue .)
    TIMES_MATRIX    reduce using rule 62 (expr -> lvalue .)
    DIVIDE_MATRIX   reduce using rule 62 (expr -> lvalue .)
    GREATER         reduce using rule 62 (expr -> lvalue .)
    LESSER          reduce using rule 62 (expr -> lvalue .)
    GREATER_EQUAL   reduce using rule 62 (expr -> lvalue .)
    LESSER_EQUAL    reduce using rule 62 (expr -> lvalue .)
    EQUALS          reduce using rule 62 (expr -> lvalue .)
    NOT_EQUAL       reduce using rule 62 (expr -> lvalue .)
    PLUS            reduce using rule 62 (expr -> lvalue .)
    MINUS           reduce using rule 62 (expr -> lvalue .)
    TIMES           reduce using rule 62 (expr -> lvalue .)
    DIVIDE          reduce using rule 62 (expr -> lvalue .)
    LPAREN_SQ       reduce using rule 62 (expr -> lvalue .)
    COMMA           reduce using rule 62 (expr -> lvalue .)
    RPAREN_SQ       reduce using rule 62 (expr -> lvalue .)
    RPAREN          reduce using rule 62 (expr -> lvalue .)
    RANGE           reduce using rule 62 (expr -> lvalue .)
    LPAREN_F        reduce using rule 62 (expr -> lvalue .)
    BREAK           reduce using rule 62 (expr -> lvalue .)
    CONTINUE        reduce using rule 62 (expr -> lvalue .)
    RETURN          reduce using rule 62 (expr -> lvalue .)
    PRINT           reduce using rule 62 (expr -> lvalue .)
    IF              reduce using rule 62 (expr -> lvalue .)
    WHILE           reduce using rule 62 (expr -> lvalue .)
    FOR             reduce using rule 62 (expr -> lvalue .)
    ID              reduce using rule 62 (expr -> lvalue .)
    NUMBER          reduce using rule 62 (expr -> lvalue .)
    FLOATNUMBER     reduce using rule 62 (expr -> lvalue .)
    STRING          reduce using rule 62 (expr -> lvalue .)
    EYE             reduce using rule 62 (expr -> lvalue .)
    ONES            reduce using rule 62 (expr -> lvalue .)
    ZEROS           reduce using rule 62 (expr -> lvalue .)
    ASSIGN          shift and go to state 71
    INCREMENT       shift and go to state 72
    DECREMENT       shift and go to state 73
    MULTIPLY_ASSIGN shift and go to state 74
    DIVIDE_ASSIGN   shift and go to state 75


state 28

    (28) type_recognition -> NUMBER .

    SEMICOLON       reduce using rule 28 (type_recognition -> NUMBER .)
    TRANSPOSE       reduce using rule 28 (type_recognition -> NUMBER .)
    PLUS_MATRIX     reduce using rule 28 (type_recognition -> NUMBER .)
    MINUS_MATRIX    reduce using rule 28 (type_recognition -> NUMBER .)
    TIMES_MATRIX    reduce using rule 28 (type_recognition -> NUMBER .)
    DIVIDE_MATRIX   reduce using rule 28 (type_recognition -> NUMBER .)
    GREATER         reduce using rule 28 (type_recognition -> NUMBER .)
    LESSER          reduce using rule 28 (type_recognition -> NUMBER .)
    GREATER_EQUAL   reduce using rule 28 (type_recognition -> NUMBER .)
    LESSER_EQUAL    reduce using rule 28 (type_recognition -> NUMBER .)
    EQUALS          reduce using rule 28 (type_recognition -> NUMBER .)
    NOT_EQUAL       reduce using rule 28 (type_recognition -> NUMBER .)
    PLUS            reduce using rule 28 (type_recognition -> NUMBER .)
    MINUS           reduce using rule 28 (type_recognition -> NUMBER .)
    TIMES           reduce using rule 28 (type_recognition -> NUMBER .)
    DIVIDE          reduce using rule 28 (type_recognition -> NUMBER .)
    LPAREN_SQ       reduce using rule 28 (type_recognition -> NUMBER .)
    COMMA           reduce using rule 28 (type_recognition -> NUMBER .)
    RPAREN_SQ       reduce using rule 28 (type_recognition -> NUMBER .)
    RPAREN          reduce using rule 28 (type_recognition -> NUMBER .)
    RANGE           reduce using rule 28 (type_recognition -> NUMBER .)
    LPAREN_F        reduce using rule 28 (type_recognition -> NUMBER .)
    BREAK           reduce using rule 28 (type_recognition -> NUMBER .)
    CONTINUE        reduce using rule 28 (type_recognition -> NUMBER .)
    RETURN          reduce using rule 28 (type_recognition -> NUMBER .)
    PRINT           reduce using rule 28 (type_recognition -> NUMBER .)
    IF              reduce using rule 28 (type_recognition -> NUMBER .)
    WHILE           reduce using rule 28 (type_recognition -> NUMBER .)
    FOR             reduce using rule 28 (type_recognition -> NUMBER .)
    ID              reduce using rule 28 (type_recognition -> NUMBER .)
    NUMBER          reduce using rule 28 (type_recognition -> NUMBER .)
    FLOATNUMBER     reduce using rule 28 (type_recognition -> NUMBER .)
    STRING          reduce using rule 28 (type_recognition -> NUMBER .)
    EYE             reduce using rule 28 (type_recognition -> NUMBER .)
    ONES            reduce using rule 28 (type_recognition -> NUMBER .)
    ZEROS           reduce using rule 28 (type_recognition -> NUMBER .)


state 29

    (29) type_recognition -> FLOATNUMBER .

    SEMICOLON       reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    TRANSPOSE       reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    PLUS_MATRIX     reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    MINUS_MATRIX    reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    TIMES_MATRIX    reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    DIVIDE_MATRIX   reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    GREATER         reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    LESSER          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    GREATER_EQUAL   reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    LESSER_EQUAL    reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    EQUALS          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    NOT_EQUAL       reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    PLUS            reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    MINUS           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    TIMES           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    DIVIDE          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    LPAREN_SQ       reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    COMMA           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    RPAREN_SQ       reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    RPAREN          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    RANGE           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    LPAREN_F        reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    BREAK           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    CONTINUE        reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    RETURN          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    PRINT           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    IF              reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    WHILE           reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    FOR             reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    ID              reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    NUMBER          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    FLOATNUMBER     reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    STRING          reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    EYE             reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    ONES            reduce using rule 29 (type_recognition -> FLOATNUMBER .)
    ZEROS           reduce using rule 29 (type_recognition -> FLOATNUMBER .)


state 30

    (30) type_recognition -> STRING .

    SEMICOLON       reduce using rule 30 (type_recognition -> STRING .)
    TRANSPOSE       reduce using rule 30 (type_recognition -> STRING .)
    PLUS_MATRIX     reduce using rule 30 (type_recognition -> STRING .)
    MINUS_MATRIX    reduce using rule 30 (type_recognition -> STRING .)
    TIMES_MATRIX    reduce using rule 30 (type_recognition -> STRING .)
    DIVIDE_MATRIX   reduce using rule 30 (type_recognition -> STRING .)
    GREATER         reduce using rule 30 (type_recognition -> STRING .)
    LESSER          reduce using rule 30 (type_recognition -> STRING .)
    GREATER_EQUAL   reduce using rule 30 (type_recognition -> STRING .)
    LESSER_EQUAL    reduce using rule 30 (type_recognition -> STRING .)
    EQUALS          reduce using rule 30 (type_recognition -> STRING .)
    NOT_EQUAL       reduce using rule 30 (type_recognition -> STRING .)
    PLUS            reduce using rule 30 (type_recognition -> STRING .)
    MINUS           reduce using rule 30 (type_recognition -> STRING .)
    TIMES           reduce using rule 30 (type_recognition -> STRING .)
    DIVIDE          reduce using rule 30 (type_recognition -> STRING .)
    LPAREN_SQ       reduce using rule 30 (type_recognition -> STRING .)
    COMMA           reduce using rule 30 (type_recognition -> STRING .)
    RPAREN_SQ       reduce using rule 30 (type_recognition -> STRING .)
    RPAREN          reduce using rule 30 (type_recognition -> STRING .)
    RANGE           reduce using rule 30 (type_recognition -> STRING .)
    LPAREN_F        reduce using rule 30 (type_recognition -> STRING .)
    BREAK           reduce using rule 30 (type_recognition -> STRING .)
    CONTINUE        reduce using rule 30 (type_recognition -> STRING .)
    RETURN          reduce using rule 30 (type_recognition -> STRING .)
    PRINT           reduce using rule 30 (type_recognition -> STRING .)
    IF              reduce using rule 30 (type_recognition -> STRING .)
    WHILE           reduce using rule 30 (type_recognition -> STRING .)
    FOR             reduce using rule 30 (type_recognition -> STRING .)
    ID              reduce using rule 30 (type_recognition -> STRING .)
    NUMBER          reduce using rule 30 (type_recognition -> STRING .)
    FLOATNUMBER     reduce using rule 30 (type_recognition -> STRING .)
    STRING          reduce using rule 30 (type_recognition -> STRING .)
    EYE             reduce using rule 30 (type_recognition -> STRING .)
    ONES            reduce using rule 30 (type_recognition -> STRING .)
    ZEROS           reduce using rule 30 (type_recognition -> STRING .)


state 31

    (26) operator -> MINUS . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 76
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 32

    (50) special_matrix -> EYE . LPAREN list RPAREN

    LPAREN          shift and go to state 77


state 33

    (51) special_matrix -> ONES . LPAREN list RPAREN

    LPAREN          shift and go to state 78


state 34

    (52) special_matrix -> ZEROS . LPAREN list RPAREN

    LPAREN          shift and go to state 79


state 35

    (49) empty -> LPAREN_SQ . RPAREN_SQ
    (46) idx -> LPAREN_SQ . list RPAREN_SQ
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    RPAREN_SQ       shift and go to state 80
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 81
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 36

    (2) program -> program stmt .

    LPAREN_F        reduce using rule 2 (program -> program stmt .)
    SEMICOLON       reduce using rule 2 (program -> program stmt .)
    BREAK           reduce using rule 2 (program -> program stmt .)
    CONTINUE        reduce using rule 2 (program -> program stmt .)
    RETURN          reduce using rule 2 (program -> program stmt .)
    PRINT           reduce using rule 2 (program -> program stmt .)
    IF              reduce using rule 2 (program -> program stmt .)
    WHILE           reduce using rule 2 (program -> program stmt .)
    FOR             reduce using rule 2 (program -> program stmt .)
    ID              reduce using rule 2 (program -> program stmt .)
    NUMBER          reduce using rule 2 (program -> program stmt .)
    FLOATNUMBER     reduce using rule 2 (program -> program stmt .)
    STRING          reduce using rule 2 (program -> program stmt .)
    MINUS           reduce using rule 2 (program -> program stmt .)
    EYE             reduce using rule 2 (program -> program stmt .)
    ONES            reduce using rule 2 (program -> program stmt .)
    ZEROS           reduce using rule 2 (program -> program stmt .)
    LPAREN_SQ       reduce using rule 2 (program -> program stmt .)
    $end            reduce using rule 2 (program -> program stmt .)


state 37

    (7) stmt -> LPAREN_F stmt_list . RPAREN_F
    (9) stmt_list -> stmt_list . stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    RPAREN_F        shift and go to state 82
    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    stmt                           shift and go to state 83
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    expr                           shift and go to state 11
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 38

    (11) stmt -> LPAREN_F RPAREN_F .

    LPAREN_F        reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    SEMICOLON       reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    BREAK           reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    CONTINUE        reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    RETURN          reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    PRINT           reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    IF              reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    WHILE           reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    FOR             reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    ID              reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    NUMBER          reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    FLOATNUMBER     reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    STRING          reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    MINUS           reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    EYE             reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    ONES            reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    ZEROS           reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    LPAREN_SQ       reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    $end            reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    RPAREN_F        reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)
    ELSE            reduce using rule 11 (stmt -> LPAREN_F RPAREN_F .)


state 39

    (8) stmt_list -> stmt .

    RPAREN_F        reduce using rule 8 (stmt_list -> stmt .)
    LPAREN_F        reduce using rule 8 (stmt_list -> stmt .)
    SEMICOLON       reduce using rule 8 (stmt_list -> stmt .)
    BREAK           reduce using rule 8 (stmt_list -> stmt .)
    CONTINUE        reduce using rule 8 (stmt_list -> stmt .)
    RETURN          reduce using rule 8 (stmt_list -> stmt .)
    PRINT           reduce using rule 8 (stmt_list -> stmt .)
    IF              reduce using rule 8 (stmt_list -> stmt .)
    WHILE           reduce using rule 8 (stmt_list -> stmt .)
    FOR             reduce using rule 8 (stmt_list -> stmt .)
    ID              reduce using rule 8 (stmt_list -> stmt .)
    NUMBER          reduce using rule 8 (stmt_list -> stmt .)
    FLOATNUMBER     reduce using rule 8 (stmt_list -> stmt .)
    STRING          reduce using rule 8 (stmt_list -> stmt .)
    MINUS           reduce using rule 8 (stmt_list -> stmt .)
    EYE             reduce using rule 8 (stmt_list -> stmt .)
    ONES            reduce using rule 8 (stmt_list -> stmt .)
    ZEROS           reduce using rule 8 (stmt_list -> stmt .)
    LPAREN_SQ       reduce using rule 8 (stmt_list -> stmt .)


state 40

    (12) stmt -> BREAK SEMICOLON .

    LPAREN_F        reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    SEMICOLON       reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    BREAK           reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    RETURN          reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    PRINT           reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    IF              reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    WHILE           reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    FOR             reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    ID              reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    FLOATNUMBER     reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    STRING          reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    MINUS           reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    EYE             reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    ONES            reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    ZEROS           reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    LPAREN_SQ       reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    $end            reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    RPAREN_F        reduce using rule 12 (stmt -> BREAK SEMICOLON .)
    ELSE            reduce using rule 12 (stmt -> BREAK SEMICOLON .)


state 41

    (13) stmt -> CONTINUE SEMICOLON .

    LPAREN_F        reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    SEMICOLON       reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    IF              reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    ID              reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    NUMBER          reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    FLOATNUMBER     reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    MINUS           reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    EYE             reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    ONES            reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    ZEROS           reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    LPAREN_SQ       reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    $end            reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    RPAREN_F        reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 13 (stmt -> CONTINUE SEMICOLON .)


state 42

    (14) stmt -> expr SEMICOLON .

    LPAREN_F        reduce using rule 14 (stmt -> expr SEMICOLON .)
    SEMICOLON       reduce using rule 14 (stmt -> expr SEMICOLON .)
    BREAK           reduce using rule 14 (stmt -> expr SEMICOLON .)
    CONTINUE        reduce using rule 14 (stmt -> expr SEMICOLON .)
    RETURN          reduce using rule 14 (stmt -> expr SEMICOLON .)
    PRINT           reduce using rule 14 (stmt -> expr SEMICOLON .)
    IF              reduce using rule 14 (stmt -> expr SEMICOLON .)
    WHILE           reduce using rule 14 (stmt -> expr SEMICOLON .)
    FOR             reduce using rule 14 (stmt -> expr SEMICOLON .)
    ID              reduce using rule 14 (stmt -> expr SEMICOLON .)
    NUMBER          reduce using rule 14 (stmt -> expr SEMICOLON .)
    FLOATNUMBER     reduce using rule 14 (stmt -> expr SEMICOLON .)
    STRING          reduce using rule 14 (stmt -> expr SEMICOLON .)
    MINUS           reduce using rule 14 (stmt -> expr SEMICOLON .)
    EYE             reduce using rule 14 (stmt -> expr SEMICOLON .)
    ONES            reduce using rule 14 (stmt -> expr SEMICOLON .)
    ZEROS           reduce using rule 14 (stmt -> expr SEMICOLON .)
    LPAREN_SQ       reduce using rule 14 (stmt -> expr SEMICOLON .)
    $end            reduce using rule 14 (stmt -> expr SEMICOLON .)
    RPAREN_F        reduce using rule 14 (stmt -> expr SEMICOLON .)
    ELSE            reduce using rule 14 (stmt -> expr SEMICOLON .)


state 43

    (63) expr -> expr TRANSPOSE .

    SEMICOLON       reduce using rule 63 (expr -> expr TRANSPOSE .)
    TRANSPOSE       reduce using rule 63 (expr -> expr TRANSPOSE .)
    PLUS_MATRIX     reduce using rule 63 (expr -> expr TRANSPOSE .)
    MINUS_MATRIX    reduce using rule 63 (expr -> expr TRANSPOSE .)
    TIMES_MATRIX    reduce using rule 63 (expr -> expr TRANSPOSE .)
    DIVIDE_MATRIX   reduce using rule 63 (expr -> expr TRANSPOSE .)
    GREATER         reduce using rule 63 (expr -> expr TRANSPOSE .)
    LESSER          reduce using rule 63 (expr -> expr TRANSPOSE .)
    GREATER_EQUAL   reduce using rule 63 (expr -> expr TRANSPOSE .)
    LESSER_EQUAL    reduce using rule 63 (expr -> expr TRANSPOSE .)
    EQUALS          reduce using rule 63 (expr -> expr TRANSPOSE .)
    NOT_EQUAL       reduce using rule 63 (expr -> expr TRANSPOSE .)
    PLUS            reduce using rule 63 (expr -> expr TRANSPOSE .)
    MINUS           reduce using rule 63 (expr -> expr TRANSPOSE .)
    TIMES           reduce using rule 63 (expr -> expr TRANSPOSE .)
    DIVIDE          reduce using rule 63 (expr -> expr TRANSPOSE .)
    LPAREN_SQ       reduce using rule 63 (expr -> expr TRANSPOSE .)
    COMMA           reduce using rule 63 (expr -> expr TRANSPOSE .)
    RPAREN_SQ       reduce using rule 63 (expr -> expr TRANSPOSE .)
    RPAREN          reduce using rule 63 (expr -> expr TRANSPOSE .)
    RANGE           reduce using rule 63 (expr -> expr TRANSPOSE .)
    LPAREN_F        reduce using rule 63 (expr -> expr TRANSPOSE .)
    BREAK           reduce using rule 63 (expr -> expr TRANSPOSE .)
    CONTINUE        reduce using rule 63 (expr -> expr TRANSPOSE .)
    RETURN          reduce using rule 63 (expr -> expr TRANSPOSE .)
    PRINT           reduce using rule 63 (expr -> expr TRANSPOSE .)
    IF              reduce using rule 63 (expr -> expr TRANSPOSE .)
    WHILE           reduce using rule 63 (expr -> expr TRANSPOSE .)
    FOR             reduce using rule 63 (expr -> expr TRANSPOSE .)
    ID              reduce using rule 63 (expr -> expr TRANSPOSE .)
    NUMBER          reduce using rule 63 (expr -> expr TRANSPOSE .)
    FLOATNUMBER     reduce using rule 63 (expr -> expr TRANSPOSE .)
    STRING          reduce using rule 63 (expr -> expr TRANSPOSE .)
    EYE             reduce using rule 63 (expr -> expr TRANSPOSE .)
    ONES            reduce using rule 63 (expr -> expr TRANSPOSE .)
    ZEROS           reduce using rule 63 (expr -> expr TRANSPOSE .)


state 44

    (36) expression_operation -> expr PLUS_MATRIX . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 84
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 45

    (37) expression_operation -> expr MINUS_MATRIX . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 85
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 46

    (38) expression_operation -> expr TIMES_MATRIX . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 86
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 47

    (39) expression_operation -> expr DIVIDE_MATRIX . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 87
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 48

    (16) comparison -> expr GREATER . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 88
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 49

    (17) comparison -> expr LESSER . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 89
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 50

    (18) comparison -> expr GREATER_EQUAL . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 90
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 51

    (19) comparison -> expr LESSER_EQUAL . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 91
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 52

    (20) comparison -> expr EQUALS . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 92
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 53

    (21) comparison -> expr NOT_EQUAL . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 93
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 54

    (22) operator -> expr PLUS . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 94
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 55

    (23) operator -> expr MINUS . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 95
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 56

    (24) operator -> expr TIMES . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 96
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 57

    (25) operator -> expr DIVIDE . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 97
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 58

    (45) lvalue -> expr idx .

    ASSIGN          reduce using rule 45 (lvalue -> expr idx .)
    INCREMENT       reduce using rule 45 (lvalue -> expr idx .)
    DECREMENT       reduce using rule 45 (lvalue -> expr idx .)
    MULTIPLY_ASSIGN reduce using rule 45 (lvalue -> expr idx .)
    DIVIDE_ASSIGN   reduce using rule 45 (lvalue -> expr idx .)
    SEMICOLON       reduce using rule 45 (lvalue -> expr idx .)
    TRANSPOSE       reduce using rule 45 (lvalue -> expr idx .)
    PLUS_MATRIX     reduce using rule 45 (lvalue -> expr idx .)
    MINUS_MATRIX    reduce using rule 45 (lvalue -> expr idx .)
    TIMES_MATRIX    reduce using rule 45 (lvalue -> expr idx .)
    DIVIDE_MATRIX   reduce using rule 45 (lvalue -> expr idx .)
    GREATER         reduce using rule 45 (lvalue -> expr idx .)
    LESSER          reduce using rule 45 (lvalue -> expr idx .)
    GREATER_EQUAL   reduce using rule 45 (lvalue -> expr idx .)
    LESSER_EQUAL    reduce using rule 45 (lvalue -> expr idx .)
    EQUALS          reduce using rule 45 (lvalue -> expr idx .)
    NOT_EQUAL       reduce using rule 45 (lvalue -> expr idx .)
    PLUS            reduce using rule 45 (lvalue -> expr idx .)
    MINUS           reduce using rule 45 (lvalue -> expr idx .)
    TIMES           reduce using rule 45 (lvalue -> expr idx .)
    DIVIDE          reduce using rule 45 (lvalue -> expr idx .)
    LPAREN_SQ       reduce using rule 45 (lvalue -> expr idx .)
    COMMA           reduce using rule 45 (lvalue -> expr idx .)
    RPAREN_SQ       reduce using rule 45 (lvalue -> expr idx .)
    RPAREN          reduce using rule 45 (lvalue -> expr idx .)
    RANGE           reduce using rule 45 (lvalue -> expr idx .)
    LPAREN_F        reduce using rule 45 (lvalue -> expr idx .)
    BREAK           reduce using rule 45 (lvalue -> expr idx .)
    CONTINUE        reduce using rule 45 (lvalue -> expr idx .)
    RETURN          reduce using rule 45 (lvalue -> expr idx .)
    PRINT           reduce using rule 45 (lvalue -> expr idx .)
    IF              reduce using rule 45 (lvalue -> expr idx .)
    WHILE           reduce using rule 45 (lvalue -> expr idx .)
    FOR             reduce using rule 45 (lvalue -> expr idx .)
    ID              reduce using rule 45 (lvalue -> expr idx .)
    NUMBER          reduce using rule 45 (lvalue -> expr idx .)
    FLOATNUMBER     reduce using rule 45 (lvalue -> expr idx .)
    STRING          reduce using rule 45 (lvalue -> expr idx .)
    EYE             reduce using rule 45 (lvalue -> expr idx .)
    ONES            reduce using rule 45 (lvalue -> expr idx .)
    ZEROS           reduce using rule 45 (lvalue -> expr idx .)


state 59

    (46) idx -> LPAREN_SQ . list RPAREN_SQ
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 81
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 60

    (15) stmt -> RETURN expr . SEMICOLON
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       shift and go to state 98
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 61

    (69) print_stmt -> PRINT list . SEMICOLON
    (48) list -> list . COMMA expr

    SEMICOLON       shift and go to state 99
    COMMA           shift and go to state 100


state 62

    (47) list -> expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 47 (list -> expr .)
    COMMA           reduce using rule 47 (list -> expr .)
    RPAREN_SQ       reduce using rule 47 (list -> expr .)
    RPAREN          reduce using rule 47 (list -> expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 63

    (64) if_stmt -> IF LPAREN . expr RPAREN stmt
    (65) if_stmt -> IF LPAREN . expr RPAREN stmt ELSE stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 101
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 64

    (66) while_stmt -> WHILE LPAREN . expr RPAREN stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 102
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 65

    (67) for_stmt -> FOR ID . ASSIGN range stmt

    ASSIGN          shift and go to state 103


state 66

    (31) single_operation -> ID ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 104
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 67

    (32) single_operation -> ID INCREMENT . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 105
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 68

    (33) single_operation -> ID DECREMENT . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 106
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 69

    (34) single_operation -> ID MULTIPLY_ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 107
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 70

    (35) single_operation -> ID DIVIDE_ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 108
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 71

    (40) matrix_element_operation -> lvalue ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    lvalue                         shift and go to state 27
    expr                           shift and go to state 109
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26

state 72

    (41) matrix_element_operation -> lvalue INCREMENT . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    lvalue                         shift and go to state 27
    expr                           shift and go to state 110
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26

state 73

    (42) matrix_element_operation -> lvalue DECREMENT . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    lvalue                         shift and go to state 27
    expr                           shift and go to state 111
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26

state 74

    (43) matrix_element_operation -> lvalue MULTIPLY_ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    lvalue                         shift and go to state 27
    expr                           shift and go to state 112
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26

state 75

    (44) matrix_element_operation -> lvalue DIVIDE_ASSIGN . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    lvalue                         shift and go to state 27
    expr                           shift and go to state 113
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26

state 76

    (26) operator -> MINUS expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 26 (operator -> MINUS expr .)
    TRANSPOSE       reduce using rule 26 (operator -> MINUS expr .)
    PLUS_MATRIX     reduce using rule 26 (operator -> MINUS expr .)
    MINUS_MATRIX    reduce using rule 26 (operator -> MINUS expr .)
    TIMES_MATRIX    reduce using rule 26 (operator -> MINUS expr .)
    DIVIDE_MATRIX   reduce using rule 26 (operator -> MINUS expr .)
    GREATER         reduce using rule 26 (operator -> MINUS expr .)
    LESSER          reduce using rule 26 (operator -> MINUS expr .)
    GREATER_EQUAL   reduce using rule 26 (operator -> MINUS expr .)
    LESSER_EQUAL    reduce using rule 26 (operator -> MINUS expr .)
    EQUALS          reduce using rule 26 (operator -> MINUS expr .)
    NOT_EQUAL       reduce using rule 26 (operator -> MINUS expr .)
    PLUS            reduce using rule 26 (operator -> MINUS expr .)
    MINUS           reduce using rule 26 (operator -> MINUS expr .)
    TIMES           reduce using rule 26 (operator -> MINUS expr .)
    DIVIDE          reduce using rule 26 (operator -> MINUS expr .)
    LPAREN_SQ       reduce using rule 26 (operator -> MINUS expr .)
    COMMA           reduce using rule 26 (operator -> MINUS expr .)
    RPAREN_SQ       reduce using rule 26 (operator -> MINUS expr .)
    RPAREN          reduce using rule 26 (operator -> MINUS expr .)
    RANGE           reduce using rule 26 (operator -> MINUS expr .)
    LPAREN_F        reduce using rule 26 (operator -> MINUS expr .)
    BREAK           reduce using rule 26 (operator -> MINUS expr .)
    CONTINUE        reduce using rule 26 (operator -> MINUS expr .)
    RETURN          reduce using rule 26 (operator -> MINUS expr .)
    PRINT           reduce using rule 26 (operator -> MINUS expr .)
    IF              reduce using rule 26 (operator -> MINUS expr .)
    WHILE           reduce using rule 26 (operator -> MINUS expr .)
    FOR             reduce using rule 26 (operator -> MINUS expr .)
    ID              reduce using rule 26 (operator -> MINUS expr .)
    NUMBER          reduce using rule 26 (operator -> MINUS expr .)
    FLOATNUMBER     reduce using rule 26 (operator -> MINUS expr .)
    STRING          reduce using rule 26 (operator -> MINUS expr .)
    EYE             reduce using rule 26 (operator -> MINUS expr .)
    ONES            reduce using rule 26 (operator -> MINUS expr .)
    ZEROS           reduce using rule 26 (operator -> MINUS expr .)

  ! TRANSPOSE       [ shift and go to state 43 ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! TIMES_MATRIX    [ shift and go to state 46 ]
  ! DIVIDE_MATRIX   [ shift and go to state 47 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 77

    (50) special_matrix -> EYE LPAREN . list RPAREN
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 114
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 78

    (51) special_matrix -> ONES LPAREN . list RPAREN
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 115
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 79

    (52) special_matrix -> ZEROS LPAREN . list RPAREN
    (47) list -> . expr
    (48) list -> . list COMMA expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    list                           shift and go to state 116
    expr                           shift and go to state 62
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 80

    (49) empty -> LPAREN_SQ RPAREN_SQ .

    SEMICOLON       reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    TRANSPOSE       reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    PLUS_MATRIX     reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    MINUS_MATRIX    reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    TIMES_MATRIX    reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    DIVIDE_MATRIX   reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    GREATER         reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    LESSER          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    GREATER_EQUAL   reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    LESSER_EQUAL    reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    EQUALS          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    NOT_EQUAL       reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    PLUS            reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    MINUS           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    TIMES           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    DIVIDE          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    LPAREN_SQ       reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    COMMA           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    RPAREN_SQ       reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    RPAREN          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    RANGE           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    LPAREN_F        reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    BREAK           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    CONTINUE        reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    RETURN          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    PRINT           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    IF              reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    WHILE           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    FOR             reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    ID              reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    NUMBER          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    FLOATNUMBER     reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    STRING          reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    EYE             reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    ONES            reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)
    ZEROS           reduce using rule 49 (empty -> LPAREN_SQ RPAREN_SQ .)


state 81

    (46) idx -> LPAREN_SQ list . RPAREN_SQ
    (48) list -> list . COMMA expr

    RPAREN_SQ       shift and go to state 117
    COMMA           shift and go to state 100


state 82

    (7) stmt -> LPAREN_F stmt_list RPAREN_F .

    LPAREN_F        reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    SEMICOLON       reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    BREAK           reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    CONTINUE        reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    RETURN          reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    PRINT           reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    IF              reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    WHILE           reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    FOR             reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    ID              reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    NUMBER          reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    FLOATNUMBER     reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    STRING          reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    MINUS           reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    EYE             reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    ONES            reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    ZEROS           reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    LPAREN_SQ       reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    $end            reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    RPAREN_F        reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)
    ELSE            reduce using rule 7 (stmt -> LPAREN_F stmt_list RPAREN_F .)


state 83

    (9) stmt_list -> stmt_list stmt .

    RPAREN_F        reduce using rule 9 (stmt_list -> stmt_list stmt .)
    LPAREN_F        reduce using rule 9 (stmt_list -> stmt_list stmt .)
    SEMICOLON       reduce using rule 9 (stmt_list -> stmt_list stmt .)
    BREAK           reduce using rule 9 (stmt_list -> stmt_list stmt .)
    CONTINUE        reduce using rule 9 (stmt_list -> stmt_list stmt .)
    RETURN          reduce using rule 9 (stmt_list -> stmt_list stmt .)
    PRINT           reduce using rule 9 (stmt_list -> stmt_list stmt .)
    IF              reduce using rule 9 (stmt_list -> stmt_list stmt .)
    WHILE           reduce using rule 9 (stmt_list -> stmt_list stmt .)
    FOR             reduce using rule 9 (stmt_list -> stmt_list stmt .)
    ID              reduce using rule 9 (stmt_list -> stmt_list stmt .)
    NUMBER          reduce using rule 9 (stmt_list -> stmt_list stmt .)
    FLOATNUMBER     reduce using rule 9 (stmt_list -> stmt_list stmt .)
    STRING          reduce using rule 9 (stmt_list -> stmt_list stmt .)
    MINUS           reduce using rule 9 (stmt_list -> stmt_list stmt .)
    EYE             reduce using rule 9 (stmt_list -> stmt_list stmt .)
    ONES            reduce using rule 9 (stmt_list -> stmt_list stmt .)
    ZEROS           reduce using rule 9 (stmt_list -> stmt_list stmt .)
    LPAREN_SQ       reduce using rule 9 (stmt_list -> stmt_list stmt .)


state 84

    (36) expression_operation -> expr PLUS_MATRIX expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    PLUS_MATRIX     reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    MINUS_MATRIX    reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    GREATER         reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    LESSER          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    GREATER_EQUAL   reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    LESSER_EQUAL    reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    EQUALS          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    NOT_EQUAL       reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    PLUS            reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    MINUS           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    LPAREN_SQ       reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    COMMA           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    RPAREN_SQ       reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    RPAREN          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    RANGE           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    LPAREN_F        reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    BREAK           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    CONTINUE        reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    RETURN          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    PRINT           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    IF              reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    WHILE           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    FOR             reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    ID              reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    NUMBER          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    FLOATNUMBER     reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    STRING          reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    EYE             reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    ONES            reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    ZEROS           reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .)
    TRANSPOSE       shift and go to state 43
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .) ]
  ! TIMES           [ reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .) ]
  ! DIVIDE          [ reduce using rule 36 (expression_operation -> expr PLUS_MATRIX expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 85

    (37) expression_operation -> expr MINUS_MATRIX expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    PLUS_MATRIX     reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    MINUS_MATRIX    reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    GREATER         reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    LESSER          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    GREATER_EQUAL   reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    LESSER_EQUAL    reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    EQUALS          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    NOT_EQUAL       reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    PLUS            reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    MINUS           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    LPAREN_SQ       reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    COMMA           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    RPAREN_SQ       reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    RPAREN          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    RANGE           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    LPAREN_F        reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    BREAK           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    CONTINUE        reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    RETURN          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    PRINT           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    IF              reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    WHILE           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    FOR             reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    ID              reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    NUMBER          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    FLOATNUMBER     reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    STRING          reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    EYE             reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    ONES            reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    ZEROS           reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .)
    TRANSPOSE       shift and go to state 43
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .) ]
  ! TIMES           [ reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .) ]
  ! DIVIDE          [ reduce using rule 37 (expression_operation -> expr MINUS_MATRIX expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 86

    (38) expression_operation -> expr TIMES_MATRIX expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    PLUS_MATRIX     reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    MINUS_MATRIX    reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    TIMES_MATRIX    reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    DIVIDE_MATRIX   reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    GREATER         reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    LESSER          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    GREATER_EQUAL   reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    LESSER_EQUAL    reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    EQUALS          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    NOT_EQUAL       reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    PLUS            reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    MINUS           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    TIMES           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    DIVIDE          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    LPAREN_SQ       reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    COMMA           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    RPAREN_SQ       reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    RPAREN          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    RANGE           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    LPAREN_F        reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    BREAK           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    CONTINUE        reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    RETURN          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    PRINT           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    IF              reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    WHILE           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    FOR             reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    ID              reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    NUMBER          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    FLOATNUMBER     reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    STRING          reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    EYE             reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    ONES            reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    ZEROS           reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .)
    TRANSPOSE       shift and go to state 43

  ! TRANSPOSE       [ reduce using rule 38 (expression_operation -> expr TIMES_MATRIX expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! TIMES_MATRIX    [ shift and go to state 46 ]
  ! DIVIDE_MATRIX   [ shift and go to state 47 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 87

    (39) expression_operation -> expr DIVIDE_MATRIX expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    PLUS_MATRIX     reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    MINUS_MATRIX    reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    TIMES_MATRIX    reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    DIVIDE_MATRIX   reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    GREATER         reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    LESSER          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    GREATER_EQUAL   reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    LESSER_EQUAL    reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    EQUALS          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    NOT_EQUAL       reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    PLUS            reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    MINUS           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    TIMES           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    DIVIDE          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    LPAREN_SQ       reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    COMMA           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    RPAREN_SQ       reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    RPAREN          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    RANGE           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    LPAREN_F        reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    BREAK           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    CONTINUE        reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    RETURN          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    PRINT           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    IF              reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    WHILE           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    FOR             reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    ID              reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    NUMBER          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    FLOATNUMBER     reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    STRING          reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    EYE             reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    ONES            reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    ZEROS           reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .)
    TRANSPOSE       shift and go to state 43

  ! TRANSPOSE       [ reduce using rule 39 (expression_operation -> expr DIVIDE_MATRIX expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! TIMES_MATRIX    [ shift and go to state 46 ]
  ! DIVIDE_MATRIX   [ shift and go to state 47 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 88

    (16) comparison -> expr GREATER expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 16 (comparison -> expr GREATER expr .)
    GREATER         reduce using rule 16 (comparison -> expr GREATER expr .)
    LESSER          reduce using rule 16 (comparison -> expr GREATER expr .)
    GREATER_EQUAL   reduce using rule 16 (comparison -> expr GREATER expr .)
    LESSER_EQUAL    reduce using rule 16 (comparison -> expr GREATER expr .)
    EQUALS          reduce using rule 16 (comparison -> expr GREATER expr .)
    NOT_EQUAL       reduce using rule 16 (comparison -> expr GREATER expr .)
    LPAREN_SQ       reduce using rule 16 (comparison -> expr GREATER expr .)
    COMMA           reduce using rule 16 (comparison -> expr GREATER expr .)
    RPAREN_SQ       reduce using rule 16 (comparison -> expr GREATER expr .)
    RPAREN          reduce using rule 16 (comparison -> expr GREATER expr .)
    RANGE           reduce using rule 16 (comparison -> expr GREATER expr .)
    LPAREN_F        reduce using rule 16 (comparison -> expr GREATER expr .)
    BREAK           reduce using rule 16 (comparison -> expr GREATER expr .)
    CONTINUE        reduce using rule 16 (comparison -> expr GREATER expr .)
    RETURN          reduce using rule 16 (comparison -> expr GREATER expr .)
    PRINT           reduce using rule 16 (comparison -> expr GREATER expr .)
    IF              reduce using rule 16 (comparison -> expr GREATER expr .)
    WHILE           reduce using rule 16 (comparison -> expr GREATER expr .)
    FOR             reduce using rule 16 (comparison -> expr GREATER expr .)
    ID              reduce using rule 16 (comparison -> expr GREATER expr .)
    NUMBER          reduce using rule 16 (comparison -> expr GREATER expr .)
    FLOATNUMBER     reduce using rule 16 (comparison -> expr GREATER expr .)
    STRING          reduce using rule 16 (comparison -> expr GREATER expr .)
    EYE             reduce using rule 16 (comparison -> expr GREATER expr .)
    ONES            reduce using rule 16 (comparison -> expr GREATER expr .)
    ZEROS           reduce using rule 16 (comparison -> expr GREATER expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! PLUS            [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! MINUS           [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! TIMES           [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! DIVIDE          [ reduce using rule 16 (comparison -> expr GREATER expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 89

    (17) comparison -> expr LESSER expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 17 (comparison -> expr LESSER expr .)
    GREATER         reduce using rule 17 (comparison -> expr LESSER expr .)
    LESSER          reduce using rule 17 (comparison -> expr LESSER expr .)
    GREATER_EQUAL   reduce using rule 17 (comparison -> expr LESSER expr .)
    LESSER_EQUAL    reduce using rule 17 (comparison -> expr LESSER expr .)
    EQUALS          reduce using rule 17 (comparison -> expr LESSER expr .)
    NOT_EQUAL       reduce using rule 17 (comparison -> expr LESSER expr .)
    LPAREN_SQ       reduce using rule 17 (comparison -> expr LESSER expr .)
    COMMA           reduce using rule 17 (comparison -> expr LESSER expr .)
    RPAREN_SQ       reduce using rule 17 (comparison -> expr LESSER expr .)
    RPAREN          reduce using rule 17 (comparison -> expr LESSER expr .)
    RANGE           reduce using rule 17 (comparison -> expr LESSER expr .)
    LPAREN_F        reduce using rule 17 (comparison -> expr LESSER expr .)
    BREAK           reduce using rule 17 (comparison -> expr LESSER expr .)
    CONTINUE        reduce using rule 17 (comparison -> expr LESSER expr .)
    RETURN          reduce using rule 17 (comparison -> expr LESSER expr .)
    PRINT           reduce using rule 17 (comparison -> expr LESSER expr .)
    IF              reduce using rule 17 (comparison -> expr LESSER expr .)
    WHILE           reduce using rule 17 (comparison -> expr LESSER expr .)
    FOR             reduce using rule 17 (comparison -> expr LESSER expr .)
    ID              reduce using rule 17 (comparison -> expr LESSER expr .)
    NUMBER          reduce using rule 17 (comparison -> expr LESSER expr .)
    FLOATNUMBER     reduce using rule 17 (comparison -> expr LESSER expr .)
    STRING          reduce using rule 17 (comparison -> expr LESSER expr .)
    EYE             reduce using rule 17 (comparison -> expr LESSER expr .)
    ONES            reduce using rule 17 (comparison -> expr LESSER expr .)
    ZEROS           reduce using rule 17 (comparison -> expr LESSER expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! PLUS            [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! MINUS           [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! TIMES           [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! DIVIDE          [ reduce using rule 17 (comparison -> expr LESSER expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 90

    (18) comparison -> expr GREATER_EQUAL expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    GREATER         reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    LESSER          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    GREATER_EQUAL   reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    LESSER_EQUAL    reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    EQUALS          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    NOT_EQUAL       reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    LPAREN_SQ       reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    COMMA           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    RPAREN_SQ       reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    RPAREN          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    RANGE           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    LPAREN_F        reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    BREAK           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    CONTINUE        reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    RETURN          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    PRINT           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    IF              reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    WHILE           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    FOR             reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    ID              reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    NUMBER          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    FLOATNUMBER     reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    STRING          reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    EYE             reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    ONES            reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    ZEROS           reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 18 (comparison -> expr GREATER_EQUAL expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 91

    (19) comparison -> expr LESSER_EQUAL expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    GREATER         reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    LESSER          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    GREATER_EQUAL   reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    LESSER_EQUAL    reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    EQUALS          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    NOT_EQUAL       reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    LPAREN_SQ       reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    COMMA           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    RPAREN_SQ       reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    RPAREN          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    RANGE           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    LPAREN_F        reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    BREAK           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    CONTINUE        reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    RETURN          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    PRINT           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    IF              reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    WHILE           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    FOR             reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    ID              reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    NUMBER          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    FLOATNUMBER     reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    STRING          reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    EYE             reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    ONES            reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    ZEROS           reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 19 (comparison -> expr LESSER_EQUAL expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 92

    (20) comparison -> expr EQUALS expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 20 (comparison -> expr EQUALS expr .)
    GREATER         reduce using rule 20 (comparison -> expr EQUALS expr .)
    LESSER          reduce using rule 20 (comparison -> expr EQUALS expr .)
    GREATER_EQUAL   reduce using rule 20 (comparison -> expr EQUALS expr .)
    LESSER_EQUAL    reduce using rule 20 (comparison -> expr EQUALS expr .)
    EQUALS          reduce using rule 20 (comparison -> expr EQUALS expr .)
    NOT_EQUAL       reduce using rule 20 (comparison -> expr EQUALS expr .)
    LPAREN_SQ       reduce using rule 20 (comparison -> expr EQUALS expr .)
    COMMA           reduce using rule 20 (comparison -> expr EQUALS expr .)
    RPAREN_SQ       reduce using rule 20 (comparison -> expr EQUALS expr .)
    RPAREN          reduce using rule 20 (comparison -> expr EQUALS expr .)
    RANGE           reduce using rule 20 (comparison -> expr EQUALS expr .)
    LPAREN_F        reduce using rule 20 (comparison -> expr EQUALS expr .)
    BREAK           reduce using rule 20 (comparison -> expr EQUALS expr .)
    CONTINUE        reduce using rule 20 (comparison -> expr EQUALS expr .)
    RETURN          reduce using rule 20 (comparison -> expr EQUALS expr .)
    PRINT           reduce using rule 20 (comparison -> expr EQUALS expr .)
    IF              reduce using rule 20 (comparison -> expr EQUALS expr .)
    WHILE           reduce using rule 20 (comparison -> expr EQUALS expr .)
    FOR             reduce using rule 20 (comparison -> expr EQUALS expr .)
    ID              reduce using rule 20 (comparison -> expr EQUALS expr .)
    NUMBER          reduce using rule 20 (comparison -> expr EQUALS expr .)
    FLOATNUMBER     reduce using rule 20 (comparison -> expr EQUALS expr .)
    STRING          reduce using rule 20 (comparison -> expr EQUALS expr .)
    EYE             reduce using rule 20 (comparison -> expr EQUALS expr .)
    ONES            reduce using rule 20 (comparison -> expr EQUALS expr .)
    ZEROS           reduce using rule 20 (comparison -> expr EQUALS expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! PLUS            [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! MINUS           [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! TIMES           [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 20 (comparison -> expr EQUALS expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 93

    (21) comparison -> expr NOT_EQUAL expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    GREATER         reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    LESSER          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    GREATER_EQUAL   reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    LESSER_EQUAL    reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    EQUALS          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    NOT_EQUAL       reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    LPAREN_SQ       reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    COMMA           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    RPAREN_SQ       reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    RPAREN          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    RANGE           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    LPAREN_F        reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    BREAK           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    CONTINUE        reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    RETURN          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    PRINT           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    IF              reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    WHILE           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    FOR             reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    ID              reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    NUMBER          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    FLOATNUMBER     reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    STRING          reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    EYE             reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    ONES            reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    ZEROS           reduce using rule 21 (comparison -> expr NOT_EQUAL expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! PLUS            [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 21 (comparison -> expr NOT_EQUAL expr .) ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 94

    (22) operator -> expr PLUS expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 22 (operator -> expr PLUS expr .)
    PLUS_MATRIX     reduce using rule 22 (operator -> expr PLUS expr .)
    MINUS_MATRIX    reduce using rule 22 (operator -> expr PLUS expr .)
    GREATER         reduce using rule 22 (operator -> expr PLUS expr .)
    LESSER          reduce using rule 22 (operator -> expr PLUS expr .)
    GREATER_EQUAL   reduce using rule 22 (operator -> expr PLUS expr .)
    LESSER_EQUAL    reduce using rule 22 (operator -> expr PLUS expr .)
    EQUALS          reduce using rule 22 (operator -> expr PLUS expr .)
    NOT_EQUAL       reduce using rule 22 (operator -> expr PLUS expr .)
    PLUS            reduce using rule 22 (operator -> expr PLUS expr .)
    MINUS           reduce using rule 22 (operator -> expr PLUS expr .)
    LPAREN_SQ       reduce using rule 22 (operator -> expr PLUS expr .)
    COMMA           reduce using rule 22 (operator -> expr PLUS expr .)
    RPAREN_SQ       reduce using rule 22 (operator -> expr PLUS expr .)
    RPAREN          reduce using rule 22 (operator -> expr PLUS expr .)
    RANGE           reduce using rule 22 (operator -> expr PLUS expr .)
    LPAREN_F        reduce using rule 22 (operator -> expr PLUS expr .)
    BREAK           reduce using rule 22 (operator -> expr PLUS expr .)
    CONTINUE        reduce using rule 22 (operator -> expr PLUS expr .)
    RETURN          reduce using rule 22 (operator -> expr PLUS expr .)
    PRINT           reduce using rule 22 (operator -> expr PLUS expr .)
    IF              reduce using rule 22 (operator -> expr PLUS expr .)
    WHILE           reduce using rule 22 (operator -> expr PLUS expr .)
    FOR             reduce using rule 22 (operator -> expr PLUS expr .)
    ID              reduce using rule 22 (operator -> expr PLUS expr .)
    NUMBER          reduce using rule 22 (operator -> expr PLUS expr .)
    FLOATNUMBER     reduce using rule 22 (operator -> expr PLUS expr .)
    STRING          reduce using rule 22 (operator -> expr PLUS expr .)
    EYE             reduce using rule 22 (operator -> expr PLUS expr .)
    ONES            reduce using rule 22 (operator -> expr PLUS expr .)
    ZEROS           reduce using rule 22 (operator -> expr PLUS expr .)
    TRANSPOSE       shift and go to state 43
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 22 (operator -> expr PLUS expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 22 (operator -> expr PLUS expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 22 (operator -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 22 (operator -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 22 (operator -> expr PLUS expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 95

    (23) operator -> expr MINUS expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 23 (operator -> expr MINUS expr .)
    PLUS_MATRIX     reduce using rule 23 (operator -> expr MINUS expr .)
    MINUS_MATRIX    reduce using rule 23 (operator -> expr MINUS expr .)
    GREATER         reduce using rule 23 (operator -> expr MINUS expr .)
    LESSER          reduce using rule 23 (operator -> expr MINUS expr .)
    GREATER_EQUAL   reduce using rule 23 (operator -> expr MINUS expr .)
    LESSER_EQUAL    reduce using rule 23 (operator -> expr MINUS expr .)
    EQUALS          reduce using rule 23 (operator -> expr MINUS expr .)
    NOT_EQUAL       reduce using rule 23 (operator -> expr MINUS expr .)
    PLUS            reduce using rule 23 (operator -> expr MINUS expr .)
    MINUS           reduce using rule 23 (operator -> expr MINUS expr .)
    LPAREN_SQ       reduce using rule 23 (operator -> expr MINUS expr .)
    COMMA           reduce using rule 23 (operator -> expr MINUS expr .)
    RPAREN_SQ       reduce using rule 23 (operator -> expr MINUS expr .)
    RPAREN          reduce using rule 23 (operator -> expr MINUS expr .)
    RANGE           reduce using rule 23 (operator -> expr MINUS expr .)
    LPAREN_F        reduce using rule 23 (operator -> expr MINUS expr .)
    BREAK           reduce using rule 23 (operator -> expr MINUS expr .)
    CONTINUE        reduce using rule 23 (operator -> expr MINUS expr .)
    RETURN          reduce using rule 23 (operator -> expr MINUS expr .)
    PRINT           reduce using rule 23 (operator -> expr MINUS expr .)
    IF              reduce using rule 23 (operator -> expr MINUS expr .)
    WHILE           reduce using rule 23 (operator -> expr MINUS expr .)
    FOR             reduce using rule 23 (operator -> expr MINUS expr .)
    ID              reduce using rule 23 (operator -> expr MINUS expr .)
    NUMBER          reduce using rule 23 (operator -> expr MINUS expr .)
    FLOATNUMBER     reduce using rule 23 (operator -> expr MINUS expr .)
    STRING          reduce using rule 23 (operator -> expr MINUS expr .)
    EYE             reduce using rule 23 (operator -> expr MINUS expr .)
    ONES            reduce using rule 23 (operator -> expr MINUS expr .)
    ZEROS           reduce using rule 23 (operator -> expr MINUS expr .)
    TRANSPOSE       shift and go to state 43
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 23 (operator -> expr MINUS expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 23 (operator -> expr MINUS expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 23 (operator -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 23 (operator -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 23 (operator -> expr MINUS expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 96

    (24) operator -> expr TIMES expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 24 (operator -> expr TIMES expr .)
    PLUS_MATRIX     reduce using rule 24 (operator -> expr TIMES expr .)
    MINUS_MATRIX    reduce using rule 24 (operator -> expr TIMES expr .)
    TIMES_MATRIX    reduce using rule 24 (operator -> expr TIMES expr .)
    DIVIDE_MATRIX   reduce using rule 24 (operator -> expr TIMES expr .)
    GREATER         reduce using rule 24 (operator -> expr TIMES expr .)
    LESSER          reduce using rule 24 (operator -> expr TIMES expr .)
    GREATER_EQUAL   reduce using rule 24 (operator -> expr TIMES expr .)
    LESSER_EQUAL    reduce using rule 24 (operator -> expr TIMES expr .)
    EQUALS          reduce using rule 24 (operator -> expr TIMES expr .)
    NOT_EQUAL       reduce using rule 24 (operator -> expr TIMES expr .)
    PLUS            reduce using rule 24 (operator -> expr TIMES expr .)
    MINUS           reduce using rule 24 (operator -> expr TIMES expr .)
    TIMES           reduce using rule 24 (operator -> expr TIMES expr .)
    DIVIDE          reduce using rule 24 (operator -> expr TIMES expr .)
    LPAREN_SQ       reduce using rule 24 (operator -> expr TIMES expr .)
    COMMA           reduce using rule 24 (operator -> expr TIMES expr .)
    RPAREN_SQ       reduce using rule 24 (operator -> expr TIMES expr .)
    RPAREN          reduce using rule 24 (operator -> expr TIMES expr .)
    RANGE           reduce using rule 24 (operator -> expr TIMES expr .)
    LPAREN_F        reduce using rule 24 (operator -> expr TIMES expr .)
    BREAK           reduce using rule 24 (operator -> expr TIMES expr .)
    CONTINUE        reduce using rule 24 (operator -> expr TIMES expr .)
    RETURN          reduce using rule 24 (operator -> expr TIMES expr .)
    PRINT           reduce using rule 24 (operator -> expr TIMES expr .)
    IF              reduce using rule 24 (operator -> expr TIMES expr .)
    WHILE           reduce using rule 24 (operator -> expr TIMES expr .)
    FOR             reduce using rule 24 (operator -> expr TIMES expr .)
    ID              reduce using rule 24 (operator -> expr TIMES expr .)
    NUMBER          reduce using rule 24 (operator -> expr TIMES expr .)
    FLOATNUMBER     reduce using rule 24 (operator -> expr TIMES expr .)
    STRING          reduce using rule 24 (operator -> expr TIMES expr .)
    EYE             reduce using rule 24 (operator -> expr TIMES expr .)
    ONES            reduce using rule 24 (operator -> expr TIMES expr .)
    ZEROS           reduce using rule 24 (operator -> expr TIMES expr .)
    TRANSPOSE       shift and go to state 43

  ! TRANSPOSE       [ reduce using rule 24 (operator -> expr TIMES expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! TIMES_MATRIX    [ shift and go to state 46 ]
  ! DIVIDE_MATRIX   [ shift and go to state 47 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 97

    (25) operator -> expr DIVIDE expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 25 (operator -> expr DIVIDE expr .)
    PLUS_MATRIX     reduce using rule 25 (operator -> expr DIVIDE expr .)
    MINUS_MATRIX    reduce using rule 25 (operator -> expr DIVIDE expr .)
    TIMES_MATRIX    reduce using rule 25 (operator -> expr DIVIDE expr .)
    DIVIDE_MATRIX   reduce using rule 25 (operator -> expr DIVIDE expr .)
    GREATER         reduce using rule 25 (operator -> expr DIVIDE expr .)
    LESSER          reduce using rule 25 (operator -> expr DIVIDE expr .)
    GREATER_EQUAL   reduce using rule 25 (operator -> expr DIVIDE expr .)
    LESSER_EQUAL    reduce using rule 25 (operator -> expr DIVIDE expr .)
    EQUALS          reduce using rule 25 (operator -> expr DIVIDE expr .)
    NOT_EQUAL       reduce using rule 25 (operator -> expr DIVIDE expr .)
    PLUS            reduce using rule 25 (operator -> expr DIVIDE expr .)
    MINUS           reduce using rule 25 (operator -> expr DIVIDE expr .)
    TIMES           reduce using rule 25 (operator -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 25 (operator -> expr DIVIDE expr .)
    LPAREN_SQ       reduce using rule 25 (operator -> expr DIVIDE expr .)
    COMMA           reduce using rule 25 (operator -> expr DIVIDE expr .)
    RPAREN_SQ       reduce using rule 25 (operator -> expr DIVIDE expr .)
    RPAREN          reduce using rule 25 (operator -> expr DIVIDE expr .)
    RANGE           reduce using rule 25 (operator -> expr DIVIDE expr .)
    LPAREN_F        reduce using rule 25 (operator -> expr DIVIDE expr .)
    BREAK           reduce using rule 25 (operator -> expr DIVIDE expr .)
    CONTINUE        reduce using rule 25 (operator -> expr DIVIDE expr .)
    RETURN          reduce using rule 25 (operator -> expr DIVIDE expr .)
    PRINT           reduce using rule 25 (operator -> expr DIVIDE expr .)
    IF              reduce using rule 25 (operator -> expr DIVIDE expr .)
    WHILE           reduce using rule 25 (operator -> expr DIVIDE expr .)
    FOR             reduce using rule 25 (operator -> expr DIVIDE expr .)
    ID              reduce using rule 25 (operator -> expr DIVIDE expr .)
    NUMBER          reduce using rule 25 (operator -> expr DIVIDE expr .)
    FLOATNUMBER     reduce using rule 25 (operator -> expr DIVIDE expr .)
    STRING          reduce using rule 25 (operator -> expr DIVIDE expr .)
    EYE             reduce using rule 25 (operator -> expr DIVIDE expr .)
    ONES            reduce using rule 25 (operator -> expr DIVIDE expr .)
    ZEROS           reduce using rule 25 (operator -> expr DIVIDE expr .)
    TRANSPOSE       shift and go to state 43

  ! TRANSPOSE       [ reduce using rule 25 (operator -> expr DIVIDE expr .) ]
  ! PLUS_MATRIX     [ shift and go to state 44 ]
  ! MINUS_MATRIX    [ shift and go to state 45 ]
  ! TIMES_MATRIX    [ shift and go to state 46 ]
  ! DIVIDE_MATRIX   [ shift and go to state 47 ]
  ! GREATER         [ shift and go to state 48 ]
  ! LESSER          [ shift and go to state 49 ]
  ! GREATER_EQUAL   [ shift and go to state 50 ]
  ! LESSER_EQUAL    [ shift and go to state 51 ]
  ! EQUALS          [ shift and go to state 52 ]
  ! NOT_EQUAL       [ shift and go to state 53 ]
  ! PLUS            [ shift and go to state 54 ]
  ! MINUS           [ shift and go to state 55 ]
  ! TIMES           [ shift and go to state 56 ]
  ! DIVIDE          [ shift and go to state 57 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 98

    (15) stmt -> RETURN expr SEMICOLON .

    LPAREN_F        reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    SEMICOLON       reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    BREAK           reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    CONTINUE        reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    PRINT           reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    IF              reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    ID              reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    NUMBER          reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    FLOATNUMBER     reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    STRING          reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    MINUS           reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    EYE             reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    ONES            reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    ZEROS           reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    LPAREN_SQ       reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    $end            reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    RPAREN_F        reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)
    ELSE            reduce using rule 15 (stmt -> RETURN expr SEMICOLON .)


state 99

    (69) print_stmt -> PRINT list SEMICOLON .

    LPAREN_F        reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    SEMICOLON       reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    BREAK           reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    CONTINUE        reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    RETURN          reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    PRINT           reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    IF              reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    WHILE           reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    FOR             reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    ID              reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    NUMBER          reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    FLOATNUMBER     reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    STRING          reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    MINUS           reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    EYE             reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    ONES            reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    ZEROS           reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    LPAREN_SQ       reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    $end            reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    RPAREN_F        reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)
    ELSE            reduce using rule 69 (print_stmt -> PRINT list SEMICOLON .)


state 100

    (48) list -> list COMMA . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 118
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 101

    (64) if_stmt -> IF LPAREN expr . RPAREN stmt
    (65) if_stmt -> IF LPAREN expr . RPAREN stmt ELSE stmt
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    RPAREN          shift and go to state 119
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 102

    (66) while_stmt -> WHILE LPAREN expr . RPAREN stmt
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    RPAREN          shift and go to state 120
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 103

    (67) for_stmt -> FOR ID ASSIGN . range stmt
    (68) range -> . expr RANGE expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    range                          shift and go to state 121
    expr                           shift and go to state 122
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 104

    (31) single_operation -> ID ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    LPAREN_SQ       reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    COMMA           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    RPAREN_SQ       reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    RPAREN          reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    RANGE           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    LPAREN_F        reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    BREAK           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    CONTINUE        reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    RETURN          reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    PRINT           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    IF              reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    WHILE           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    FOR             reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    ID              reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    NUMBER          reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    FLOATNUMBER     reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    STRING          reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    EYE             reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    ONES            reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    ZEROS           reduce using rule 31 (single_operation -> ID ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 31 (single_operation -> ID ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 105

    (32) single_operation -> ID INCREMENT expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    LPAREN_SQ       reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    COMMA           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    RPAREN_SQ       reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    RPAREN          reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    RANGE           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    LPAREN_F        reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    BREAK           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    CONTINUE        reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    RETURN          reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    PRINT           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    IF              reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    WHILE           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    FOR             reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    ID              reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    NUMBER          reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    FLOATNUMBER     reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    STRING          reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    EYE             reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    ONES            reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    ZEROS           reduce using rule 32 (single_operation -> ID INCREMENT expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! GREATER         [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! LESSER          [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! EQUALS          [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! NOT_EQUAL       [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! PLUS            [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! MINUS           [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! TIMES           [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 32 (single_operation -> ID INCREMENT expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 106

    (33) single_operation -> ID DECREMENT expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    LPAREN_SQ       reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    COMMA           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    RPAREN_SQ       reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    RPAREN          reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    RANGE           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    LPAREN_F        reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    BREAK           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    CONTINUE        reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    RETURN          reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    PRINT           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    IF              reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    WHILE           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    FOR             reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    ID              reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    NUMBER          reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    FLOATNUMBER     reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    STRING          reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    EYE             reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    ONES            reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    ZEROS           reduce using rule 33 (single_operation -> ID DECREMENT expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! GREATER         [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! LESSER          [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! EQUALS          [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! NOT_EQUAL       [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! PLUS            [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! MINUS           [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! TIMES           [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 33 (single_operation -> ID DECREMENT expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 107

    (34) single_operation -> ID MULTIPLY_ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    LPAREN_SQ       reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    COMMA           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    RPAREN_SQ       reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    RPAREN          reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    RANGE           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    LPAREN_F        reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    BREAK           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    CONTINUE        reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    RETURN          reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    PRINT           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    IF              reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    WHILE           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    FOR             reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    ID              reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    NUMBER          reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    FLOATNUMBER     reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    STRING          reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    EYE             reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    ONES            reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    ZEROS           reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 34 (single_operation -> ID MULTIPLY_ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 108

    (35) single_operation -> ID DIVIDE_ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    LPAREN_SQ       reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    COMMA           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    RPAREN_SQ       reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    RPAREN          reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    RANGE           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    LPAREN_F        reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    BREAK           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    CONTINUE        reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    RETURN          reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    PRINT           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    IF              reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    WHILE           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    FOR             reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    ID              reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    NUMBER          reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    FLOATNUMBER     reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    STRING          reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    EYE             reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    ONES            reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    ZEROS           reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 35 (single_operation -> ID DIVIDE_ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 109

    (40) matrix_element_operation -> lvalue ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    LPAREN_SQ       reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    COMMA           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    RPAREN_SQ       reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    RPAREN          reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    RANGE           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    LPAREN_F        reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    BREAK           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    CONTINUE        reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    RETURN          reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    PRINT           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    IF              reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    WHILE           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    FOR             reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    ID              reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    NUMBER          reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    FLOATNUMBER     reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    STRING          reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    EYE             reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    ONES            reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    ZEROS           reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 40 (matrix_element_operation -> lvalue ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 110

    (41) matrix_element_operation -> lvalue INCREMENT expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    LPAREN_SQ       reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    COMMA           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    RPAREN_SQ       reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    RPAREN          reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    RANGE           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    LPAREN_F        reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    BREAK           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    CONTINUE        reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    RETURN          reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    PRINT           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    IF              reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    WHILE           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    FOR             reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    ID              reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    NUMBER          reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    FLOATNUMBER     reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    STRING          reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    EYE             reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    ONES            reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    ZEROS           reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! GREATER         [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! LESSER          [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! EQUALS          [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! NOT_EQUAL       [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! PLUS            [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! MINUS           [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! TIMES           [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 41 (matrix_element_operation -> lvalue INCREMENT expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 111

    (42) matrix_element_operation -> lvalue DECREMENT expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    LPAREN_SQ       reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    COMMA           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    RPAREN_SQ       reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    RPAREN          reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    RANGE           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    LPAREN_F        reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    BREAK           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    CONTINUE        reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    RETURN          reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    PRINT           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    IF              reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    WHILE           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    FOR             reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    ID              reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    NUMBER          reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    FLOATNUMBER     reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    STRING          reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    EYE             reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    ONES            reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    ZEROS           reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! GREATER         [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! LESSER          [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! EQUALS          [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! NOT_EQUAL       [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! PLUS            [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! MINUS           [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! TIMES           [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! DIVIDE          [ reduce using rule 42 (matrix_element_operation -> lvalue DECREMENT expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 112

    (43) matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    LPAREN_SQ       reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    COMMA           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    RPAREN_SQ       reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    RPAREN          reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    RANGE           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    LPAREN_F        reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    BREAK           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    CONTINUE        reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    RETURN          reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    PRINT           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    IF              reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    WHILE           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    FOR             reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    ID              reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    NUMBER          reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    FLOATNUMBER     reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    STRING          reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    EYE             reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    ONES            reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    ZEROS           reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 43 (matrix_element_operation -> lvalue MULTIPLY_ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 113

    (44) matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    LPAREN_SQ       reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    COMMA           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    RPAREN_SQ       reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    RPAREN          reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    RANGE           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    LPAREN_F        reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    BREAK           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    CONTINUE        reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    RETURN          reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    PRINT           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    IF              reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    WHILE           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    FOR             reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    ID              reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    NUMBER          reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    FLOATNUMBER     reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    STRING          reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    EYE             reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    ONES            reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    ZEROS           reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! TRANSPOSE       [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! PLUS_MATRIX     [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! MINUS_MATRIX    [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! TIMES_MATRIX    [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! DIVIDE_MATRIX   [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! GREATER         [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! LESSER          [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! GREATER_EQUAL   [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! LESSER_EQUAL    [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! PLUS            [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 44 (matrix_element_operation -> lvalue DIVIDE_ASSIGN expr .) ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 114

    (50) special_matrix -> EYE LPAREN list . RPAREN
    (48) list -> list . COMMA expr

    RPAREN          shift and go to state 123
    COMMA           shift and go to state 100


state 115

    (51) special_matrix -> ONES LPAREN list . RPAREN
    (48) list -> list . COMMA expr

    RPAREN          shift and go to state 124
    COMMA           shift and go to state 100


state 116

    (52) special_matrix -> ZEROS LPAREN list . RPAREN
    (48) list -> list . COMMA expr

    RPAREN          shift and go to state 125
    COMMA           shift and go to state 100


state 117

    (46) idx -> LPAREN_SQ list RPAREN_SQ .

    SEMICOLON       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    TRANSPOSE       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    PLUS_MATRIX     reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    MINUS_MATRIX    reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    TIMES_MATRIX    reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    DIVIDE_MATRIX   reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    GREATER         reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    LESSER          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    GREATER_EQUAL   reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    LESSER_EQUAL    reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    EQUALS          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    NOT_EQUAL       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    PLUS            reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    MINUS           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    TIMES           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    DIVIDE          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    LPAREN_SQ       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    ASSIGN          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    INCREMENT       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    DECREMENT       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    MULTIPLY_ASSIGN reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    DIVIDE_ASSIGN   reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    COMMA           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    RPAREN_SQ       reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    RPAREN          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    RANGE           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    LPAREN_F        reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    BREAK           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    CONTINUE        reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    RETURN          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    PRINT           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    IF              reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    WHILE           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    FOR             reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    ID              reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    NUMBER          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    FLOATNUMBER     reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    STRING          reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    EYE             reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    ONES            reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)
    ZEROS           reduce using rule 46 (idx -> LPAREN_SQ list RPAREN_SQ .)


state 118

    (48) list -> list COMMA expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    SEMICOLON       reduce using rule 48 (list -> list COMMA expr .)
    COMMA           reduce using rule 48 (list -> list COMMA expr .)
    RPAREN_SQ       reduce using rule 48 (list -> list COMMA expr .)
    RPAREN          reduce using rule 48 (list -> list COMMA expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 119

    (64) if_stmt -> IF LPAREN expr RPAREN . stmt
    (65) if_stmt -> IF LPAREN expr RPAREN . stmt ELSE stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 11
    stmt                           shift and go to state 126
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 120

    (66) while_stmt -> WHILE LPAREN expr RPAREN . stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 11
    stmt                           shift and go to state 127
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 121

    (67) for_stmt -> FOR ID ASSIGN range . stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    stmt                           shift and go to state 128
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    expr                           shift and go to state 11
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 122

    (68) range -> expr . RANGE expr
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    RANGE           shift and go to state 129
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    MINUS           shift and go to state 55
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57
    LPAREN_SQ       shift and go to state 59

    idx                            shift and go to state 58

state 123

    (50) special_matrix -> EYE LPAREN list RPAREN .

    SEMICOLON       reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    TRANSPOSE       reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    PLUS_MATRIX     reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    MINUS_MATRIX    reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    TIMES_MATRIX    reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    DIVIDE_MATRIX   reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    GREATER         reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    LESSER          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    GREATER_EQUAL   reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    LESSER_EQUAL    reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    EQUALS          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    NOT_EQUAL       reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    PLUS            reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    MINUS           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    TIMES           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    DIVIDE          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    LPAREN_SQ       reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    COMMA           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    RPAREN_SQ       reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    RPAREN          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    RANGE           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    LPAREN_F        reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    BREAK           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    CONTINUE        reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    RETURN          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    PRINT           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    IF              reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    WHILE           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    FOR             reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    ID              reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    NUMBER          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    FLOATNUMBER     reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    STRING          reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    EYE             reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    ONES            reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)
    ZEROS           reduce using rule 50 (special_matrix -> EYE LPAREN list RPAREN .)


state 124

    (51) special_matrix -> ONES LPAREN list RPAREN .

    SEMICOLON       reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    TRANSPOSE       reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    PLUS_MATRIX     reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    MINUS_MATRIX    reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    TIMES_MATRIX    reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    DIVIDE_MATRIX   reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    GREATER         reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    LESSER          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    GREATER_EQUAL   reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    LESSER_EQUAL    reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    EQUALS          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    NOT_EQUAL       reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    PLUS            reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    MINUS           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    TIMES           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    DIVIDE          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    LPAREN_SQ       reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    COMMA           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    RPAREN_SQ       reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    RPAREN          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    RANGE           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    LPAREN_F        reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    BREAK           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    CONTINUE        reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    RETURN          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    PRINT           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    IF              reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    WHILE           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    FOR             reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    ID              reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    NUMBER          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    FLOATNUMBER     reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    STRING          reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    EYE             reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    ONES            reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)
    ZEROS           reduce using rule 51 (special_matrix -> ONES LPAREN list RPAREN .)


state 125

    (52) special_matrix -> ZEROS LPAREN list RPAREN .

    SEMICOLON       reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    TRANSPOSE       reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    PLUS_MATRIX     reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    MINUS_MATRIX    reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    TIMES_MATRIX    reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    DIVIDE_MATRIX   reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    GREATER         reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    LESSER          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    GREATER_EQUAL   reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    LESSER_EQUAL    reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    EQUALS          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    NOT_EQUAL       reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    PLUS            reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    MINUS           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    TIMES           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    DIVIDE          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    LPAREN_SQ       reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    COMMA           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    RPAREN_SQ       reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    RPAREN          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    RANGE           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    LPAREN_F        reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    BREAK           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    CONTINUE        reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    RETURN          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    PRINT           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    IF              reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    WHILE           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    FOR             reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    ID              reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    NUMBER          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    FLOATNUMBER     reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    STRING          reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    EYE             reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    ONES            reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)
    ZEROS           reduce using rule 52 (special_matrix -> ZEROS LPAREN list RPAREN .)


state 126

    (64) if_stmt -> IF LPAREN expr RPAREN stmt .
    (65) if_stmt -> IF LPAREN expr RPAREN stmt . ELSE stmt

    LPAREN_F        reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    SEMICOLON       reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    BREAK           reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    CONTINUE        reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    RETURN          reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    PRINT           reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    IF              reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    WHILE           reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    FOR             reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    ID              reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    NUMBER          reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    FLOATNUMBER     reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    STRING          reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    MINUS           reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    EYE             reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    ONES            reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    ZEROS           reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    LPAREN_SQ       reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    $end            reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    RPAREN_F        reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .)
    ELSE            shift and go to state 130

  ! ELSE            [ reduce using rule 64 (if_stmt -> IF LPAREN expr RPAREN stmt .) ]


state 127

    (66) while_stmt -> WHILE LPAREN expr RPAREN stmt .

    LPAREN_F        reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    SEMICOLON       reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    BREAK           reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    CONTINUE        reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    RETURN          reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    PRINT           reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    IF              reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    WHILE           reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    FOR             reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    ID              reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    NUMBER          reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    FLOATNUMBER     reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    STRING          reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    MINUS           reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    EYE             reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    ONES            reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    ZEROS           reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    LPAREN_SQ       reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    $end            reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    RPAREN_F        reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)
    ELSE            reduce using rule 66 (while_stmt -> WHILE LPAREN expr RPAREN stmt .)


state 128

    (67) for_stmt -> FOR ID ASSIGN range stmt .

    LPAREN_F        reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    SEMICOLON       reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    BREAK           reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    CONTINUE        reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    RETURN          reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    PRINT           reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    IF              reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    WHILE           reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    FOR             reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    ID              reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    NUMBER          reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    FLOATNUMBER     reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    STRING          reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    MINUS           reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    EYE             reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    ONES            reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    ZEROS           reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    LPAREN_SQ       reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    $end            reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    RPAREN_F        reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)
    ELSE            reduce using rule 67 (for_stmt -> FOR ID ASSIGN range stmt .)


state 129

    (68) range -> expr RANGE . expr
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 131
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 130

    (65) if_stmt -> IF LPAREN expr RPAREN stmt ELSE . stmt
    (3) stmt -> . print_stmt
    (4) stmt -> . if_stmt
    (5) stmt -> . while_stmt
    (6) stmt -> . for_stmt
    (7) stmt -> . LPAREN_F stmt_list RPAREN_F
    (10) stmt -> . SEMICOLON
    (11) stmt -> . LPAREN_F RPAREN_F
    (12) stmt -> . BREAK SEMICOLON
    (13) stmt -> . CONTINUE SEMICOLON
    (14) stmt -> . expr SEMICOLON
    (15) stmt -> . RETURN expr SEMICOLON
    (69) print_stmt -> . PRINT list SEMICOLON
    (64) if_stmt -> . IF LPAREN expr RPAREN stmt
    (65) if_stmt -> . IF LPAREN expr RPAREN stmt ELSE stmt
    (66) while_stmt -> . WHILE LPAREN expr RPAREN stmt
    (67) for_stmt -> . FOR ID ASSIGN range stmt
    (53) expr -> . type_recognition
    (54) expr -> . single_operation
    (55) expr -> . matrix_element_operation
    (56) expr -> . expression_operation
    (57) expr -> . comparison
    (58) expr -> . operator
    (59) expr -> . special_matrix
    (60) expr -> . empty
    (61) expr -> . idx
    (62) expr -> . lvalue
    (63) expr -> . expr TRANSPOSE
    (27) type_recognition -> . ID
    (28) type_recognition -> . NUMBER
    (29) type_recognition -> . FLOATNUMBER
    (30) type_recognition -> . STRING
    (31) single_operation -> . ID ASSIGN expr
    (32) single_operation -> . ID INCREMENT expr
    (33) single_operation -> . ID DECREMENT expr
    (34) single_operation -> . ID MULTIPLY_ASSIGN expr
    (35) single_operation -> . ID DIVIDE_ASSIGN expr
    (40) matrix_element_operation -> . lvalue ASSIGN expr
    (41) matrix_element_operation -> . lvalue INCREMENT expr
    (42) matrix_element_operation -> . lvalue DECREMENT expr
    (43) matrix_element_operation -> . lvalue MULTIPLY_ASSIGN expr
    (44) matrix_element_operation -> . lvalue DIVIDE_ASSIGN expr
    (36) expression_operation -> . expr PLUS_MATRIX expr
    (37) expression_operation -> . expr MINUS_MATRIX expr
    (38) expression_operation -> . expr TIMES_MATRIX expr
    (39) expression_operation -> . expr DIVIDE_MATRIX expr
    (16) comparison -> . expr GREATER expr
    (17) comparison -> . expr LESSER expr
    (18) comparison -> . expr GREATER_EQUAL expr
    (19) comparison -> . expr LESSER_EQUAL expr
    (20) comparison -> . expr EQUALS expr
    (21) comparison -> . expr NOT_EQUAL expr
    (22) operator -> . expr PLUS expr
    (23) operator -> . expr MINUS expr
    (24) operator -> . expr TIMES expr
    (25) operator -> . expr DIVIDE expr
    (26) operator -> . MINUS expr
    (50) special_matrix -> . EYE LPAREN list RPAREN
    (51) special_matrix -> . ONES LPAREN list RPAREN
    (52) special_matrix -> . ZEROS LPAREN list RPAREN
    (49) empty -> . LPAREN_SQ RPAREN_SQ
    (46) idx -> . LPAREN_SQ list RPAREN_SQ
    (45) lvalue -> . expr idx

    LPAREN_F        shift and go to state 7
    SEMICOLON       shift and go to state 8
    BREAK           shift and go to state 9
    CONTINUE        shift and go to state 10
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    IF              shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    ID              shift and go to state 17
    NUMBER          shift and go to state 28
    FLOATNUMBER     shift and go to state 29
    STRING          shift and go to state 30
    MINUS           shift and go to state 31
    EYE             shift and go to state 32
    ONES            shift and go to state 33
    ZEROS           shift and go to state 34
    LPAREN_SQ       shift and go to state 35

    expr                           shift and go to state 11
    stmt                           shift and go to state 132
    print_stmt                     shift and go to state 3
    if_stmt                        shift and go to state 4
    while_stmt                     shift and go to state 5
    for_stmt                       shift and go to state 6
    type_recognition               shift and go to state 18
    single_operation               shift and go to state 19
    matrix_element_operation       shift and go to state 20
    expression_operation           shift and go to state 21
    comparison                     shift and go to state 22
    operator                       shift and go to state 23
    special_matrix                 shift and go to state 24
    empty                          shift and go to state 25
    idx                            shift and go to state 26
    lvalue                         shift and go to state 27

state 131

    (68) range -> expr RANGE expr .
    (63) expr -> expr . TRANSPOSE
    (36) expression_operation -> expr . PLUS_MATRIX expr
    (37) expression_operation -> expr . MINUS_MATRIX expr
    (38) expression_operation -> expr . TIMES_MATRIX expr
    (39) expression_operation -> expr . DIVIDE_MATRIX expr
    (16) comparison -> expr . GREATER expr
    (17) comparison -> expr . LESSER expr
    (18) comparison -> expr . GREATER_EQUAL expr
    (19) comparison -> expr . LESSER_EQUAL expr
    (20) comparison -> expr . EQUALS expr
    (21) comparison -> expr . NOT_EQUAL expr
    (22) operator -> expr . PLUS expr
    (23) operator -> expr . MINUS expr
    (24) operator -> expr . TIMES expr
    (25) operator -> expr . DIVIDE expr
    (45) lvalue -> expr . idx
    (46) idx -> . LPAREN_SQ list RPAREN_SQ

    LPAREN_F        reduce using rule 68 (range -> expr RANGE expr .)
    SEMICOLON       reduce using rule 68 (range -> expr RANGE expr .)
    BREAK           reduce using rule 68 (range -> expr RANGE expr .)
    CONTINUE        reduce using rule 68 (range -> expr RANGE expr .)
    RETURN          reduce using rule 68 (range -> expr RANGE expr .)
    PRINT           reduce using rule 68 (range -> expr RANGE expr .)
    IF              reduce using rule 68 (range -> expr RANGE expr .)
    WHILE           reduce using rule 68 (range -> expr RANGE expr .)
    FOR             reduce using rule 68 (range -> expr RANGE expr .)
    ID              reduce using rule 68 (range -> expr RANGE expr .)
    NUMBER          reduce using rule 68 (range -> expr RANGE expr .)
    FLOATNUMBER     reduce using rule 68 (range -> expr RANGE expr .)
    STRING          reduce using rule 68 (range -> expr RANGE expr .)
    MINUS           reduce using rule 68 (range -> expr RANGE expr .)
    EYE             reduce using rule 68 (range -> expr RANGE expr .)
    ONES            reduce using rule 68 (range -> expr RANGE expr .)
    ZEROS           reduce using rule 68 (range -> expr RANGE expr .)
    LPAREN_SQ       reduce using rule 68 (range -> expr RANGE expr .)
    TRANSPOSE       shift and go to state 43
    PLUS_MATRIX     shift and go to state 44
    MINUS_MATRIX    shift and go to state 45
    TIMES_MATRIX    shift and go to state 46
    DIVIDE_MATRIX   shift and go to state 47
    GREATER         shift and go to state 48
    LESSER          shift and go to state 49
    GREATER_EQUAL   shift and go to state 50
    LESSER_EQUAL    shift and go to state 51
    EQUALS          shift and go to state 52
    NOT_EQUAL       shift and go to state 53
    PLUS            shift and go to state 54
    TIMES           shift and go to state 56
    DIVIDE          shift and go to state 57

  ! MINUS           [ shift and go to state 55 ]
  ! LPAREN_SQ       [ shift and go to state 59 ]

    idx                            shift and go to state 58

state 132

    (65) if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .

    LPAREN_F        reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    SEMICOLON       reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    BREAK           reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    CONTINUE        reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    RETURN          reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    PRINT           reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    IF              reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    WHILE           reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    FOR             reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ID              reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    NUMBER          reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    FLOATNUMBER     reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    STRING          reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    MINUS           reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    EYE             reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ONES            reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ZEROS           reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    LPAREN_SQ       reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    $end            reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    RPAREN_F        reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)
    ELSE            reduce using rule 65 (if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt .)

