
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNINCREMENTDECREMENTMULTIPLY_ASSIGNDIVIDE_ASSIGNleftLESSERGREATERLESSER_EQUALGREATER_EQUALEQUALSNOT_EQUALleftPLUSMINUSPLUS_MATRIXMINUS_MATRIXleftTIMESDIVIDETIMES_MATRIXDIVIDE_MATRIXrightONESZEROSEYEleftTRANSPOSErightRANGErightUMINUSnonassocIFXnonassocELSEASSIGN BREAK COMMA CONTINUE DECREMENT DIVIDE DIVIDE_ASSIGN DIVIDE_MATRIX ELSE EQUALS EYE FLOATNUMBER FOR GREATER GREATER_EQUAL ID IF INCREMENT LESSER LESSER_EQUAL LPAREN LPAREN_F LPAREN_SQ MINUS MINUS_MATRIX MULTIPLY_ASSIGN NOT_EQUAL NUMBER ONES PLUS PLUS_MATRIX PRINT RANGE RETURN RPAREN RPAREN_F RPAREN_SQ SEMICOLON STRING TIMES TIMES_MATRIX TRANSPOSE WHILE ZEROS\n    program : stmt\n            | program stmt\n    \n    stmt : expr SEMICOLON\n         | print_stmt\n         | if_stmt\n         | while_stmt\n         | for_stmt\n         | BREAK SEMICOLON\n         | CONTINUE SEMICOLON\n         | RETURN expr SEMICOLON\n         | SEMICOLON\n         | LPAREN_F RPAREN_F\n         | LPAREN_F stmt_list RPAREN_F\n    stmt_list : stmt\n              | stmt_list stmt\n    \n    comparison : expr GREATER expr\n               | expr LESSER expr\n               | expr GREATER_EQUAL expr\n               | expr LESSER_EQUAL expr\n               | expr EQUALS expr\n               | expr NOT_EQUAL expr\n    \n    operator : expr PLUS expr\n             | expr MINUS expr\n             | MINUS expr %prec UMINUS\n             | expr TIMES expr\n             | expr DIVIDE expr\n    \n    type_recognition : Variable\n                     | intNum\n                     | floatNum\n                     | string\n    \n    Variable : ID\n    \n    intNum : NUMBER\n    \n    floatNum : FLOATNUMBER\n    \n    string : STRING\n    \n    single_operation : ID ASSIGN expr\n                     | ID INCREMENT expr\n                     | ID DECREMENT expr\n                     | ID MULTIPLY_ASSIGN expr\n                     | ID DIVIDE_ASSIGN expr\n    \n    expression_operation : expr PLUS_MATRIX expr\n                         | expr MINUS_MATRIX expr\n                         | expr TIMES_MATRIX expr\n                         | expr DIVIDE_MATRIX expr\n    \n    matrix_element_operation : expr idx ASSIGN expr\n                             | expr idx INCREMENT expr\n                             | expr idx DECREMENT expr\n                             | expr idx MULTIPLY_ASSIGN expr\n                             | expr idx DIVIDE_ASSIGN expr\n    \n    idx : LPAREN_SQ list RPAREN_SQ\n    \n    list : expr\n         | list COMMA expr\n    \n    empty : LPAREN_SQ RPAREN_SQ\n    \n    special_matrix : EYE LPAREN expr RPAREN\n                   | ONES LPAREN expr RPAREN\n                   | ZEROS LPAREN expr RPAREN\n    \n    expr : type_recognition\n         | single_operation\n         | matrix_element_operation\n         | expression_operation\n         | comparison\n         | operator\n         | special_matrix\n         | empty\n         | idx\n         | expr TRANSPOSE\n    \n    if_stmt : IF LPAREN expr RPAREN stmt %prec IFX\n            | IF LPAREN expr RPAREN stmt ELSE stmt\n    \n    while_stmt : WHILE LPAREN expr RPAREN stmt\n    \n    for_stmt : FOR ID ASSIGN range stmt\n    range : expr RANGE expr\n    \n    print_stmt : PRINT list SEMICOLON\n    '
    
_lr_action_items = {'BREAK':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[9,9,-1,-11,-4,-5,-6,-7,9,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,9,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,9,9,9,-53,-54,-55,-66,-68,-69,9,-70,-67,]),'CONTINUE':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[10,10,-1,-11,-4,-5,-6,-7,10,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,10,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,10,10,10,-53,-54,-55,-66,-68,-69,10,-70,-67,]),'RETURN':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[11,11,-1,-11,-4,-5,-6,-7,11,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,11,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,11,11,11,-53,-54,-55,-66,-68,-69,11,-70,-67,]),'SEMICOLON':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,60,61,62,63,64,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,133,134,135,],[4,4,-1,40,-11,-4,-5,-6,-7,58,59,4,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,99,-12,4,-14,102,-50,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,-51,4,4,4,-53,-54,-55,-66,-68,-69,4,-70,-67,]),'LPAREN_F':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[12,12,-1,-11,-4,-5,-6,-7,12,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,12,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,12,12,12,-53,-54,-55,-66,-68,-69,12,-70,-67,]),'PRINT':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[22,22,-1,-11,-4,-5,-6,-7,22,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,22,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,22,22,22,-53,-54,-55,-66,-68,-69,22,-70,-67,]),'IF':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[23,23,-1,-11,-4,-5,-6,-7,23,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,23,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,23,23,23,-53,-54,-55,-66,-68,-69,23,-70,-67,]),'WHILE':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[24,24,-1,-11,-4,-5,-6,-7,24,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,24,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,24,24,24,-53,-54,-55,-66,-68,-69,24,-70,-67,]),'FOR':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,39,40,41,58,59,61,62,63,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,],[25,25,-1,-11,-4,-5,-6,-7,25,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-2,-3,-65,-8,-9,-12,25,-14,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,25,25,25,-53,-54,-55,-66,-68,-69,25,-70,-67,]),'ID':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[26,26,-1,-11,-4,-5,-6,-7,26,26,-56,-57,-58,-59,-60,-61,-62,-63,-64,26,68,-31,-27,-28,-29,-30,26,26,-32,-33,-34,-2,-3,-65,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-8,-9,-12,26,-14,26,26,26,26,26,26,26,-24,26,26,26,-52,26,26,26,26,26,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,26,26,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,26,26,26,-53,-54,-55,-66,-68,-69,26,26,-70,-67,]),'MINUS':([0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,],[31,31,-1,54,-11,-4,-5,-6,-7,31,31,-56,-57,-58,-59,-60,-61,-62,-63,-64,31,-31,-27,-28,-29,-30,31,31,-32,-33,-34,-2,-3,-65,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-8,-9,54,-12,31,-14,54,31,31,31,31,31,31,31,-24,31,31,31,-52,31,31,31,31,31,-40,-41,-42,-43,54,54,54,54,54,54,-22,-23,-25,-26,-10,-13,-15,-71,31,54,54,31,54,54,54,54,54,54,54,54,-49,54,54,54,54,54,54,31,31,31,54,-53,-54,-55,-66,-68,-69,31,31,-70,-67,]),'EYE':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[32,32,-1,-11,-4,-5,-6,-7,32,32,-56,-57,-58,-59,-60,-61,-62,-63,-64,32,-31,-27,-28,-29,-30,32,32,-32,-33,-34,-2,-3,-65,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-8,-9,-12,32,-14,32,32,32,32,32,32,32,-24,32,32,32,-52,32,32,32,32,32,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,32,32,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,32,32,32,-53,-54,-55,-66,-68,-69,32,32,-70,-67,]),'ONES':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[33,33,-1,-11,-4,-5,-6,-7,33,33,-56,-57,-58,-59,-60,-61,-62,-63,-64,33,-31,-27,-28,-29,-30,33,33,-32,-33,-34,-2,-3,-65,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-8,-9,-12,33,-14,33,33,33,33,33,33,33,-24,33,33,33,-52,33,33,33,33,33,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,33,33,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,33,33,33,-53,-54,-55,-66,-68,-69,33,33,-70,-67,]),'ZEROS':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[34,34,-1,-11,-4,-5,-6,-7,34,34,-56,-57,-58,-59,-60,-61,-62,-63,-64,34,-31,-27,-28,-29,-30,34,34,-32,-33,-34,-2,-3,-65,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-8,-9,-12,34,-14,34,34,34,34,34,34,34,-24,34,34,34,-52,34,34,34,34,34,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,34,34,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,34,34,34,-53,-54,-55,-66,-68,-69,34,34,-70,-67,]),'LPAREN_SQ':([0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,],[35,35,-1,57,-11,-4,-5,-6,-7,35,35,-56,-57,-58,-59,-60,-61,-62,-63,-64,35,-31,-27,-28,-29,-30,35,35,-32,-33,-34,-2,-3,-65,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-8,-9,57,-12,35,-14,57,35,35,35,35,35,35,35,-24,35,35,35,-52,35,35,35,35,35,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,35,57,57,35,-35,-36,-37,-38,-39,57,57,57,-49,-44,-45,-46,-47,-48,57,35,35,35,57,-53,-54,-55,-66,-68,-69,35,35,-70,-67,]),'NUMBER':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[36,36,-1,-11,-4,-5,-6,-7,36,36,-56,-57,-58,-59,-60,-61,-62,-63,-64,36,-31,-27,-28,-29,-30,36,36,-32,-33,-34,-2,-3,-65,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-8,-9,-12,36,-14,36,36,36,36,36,36,36,-24,36,36,36,-52,36,36,36,36,36,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,36,36,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,36,36,36,-53,-54,-55,-66,-68,-69,36,36,-70,-67,]),'FLOATNUMBER':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[37,37,-1,-11,-4,-5,-6,-7,37,37,-56,-57,-58,-59,-60,-61,-62,-63,-64,37,-31,-27,-28,-29,-30,37,37,-32,-33,-34,-2,-3,-65,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-8,-9,-12,37,-14,37,37,37,37,37,37,37,-24,37,37,37,-52,37,37,37,37,37,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,37,37,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,37,37,37,-53,-54,-55,-66,-68,-69,37,37,-70,-67,]),'STRING':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,31,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,66,67,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,115,116,117,118,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,],[38,38,-1,-11,-4,-5,-6,-7,38,38,-56,-57,-58,-59,-60,-61,-62,-63,-64,38,-31,-27,-28,-29,-30,38,38,-32,-33,-34,-2,-3,-65,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-8,-9,-12,38,-14,38,38,38,38,38,38,38,-24,38,38,38,-52,38,38,38,38,38,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-71,38,38,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,38,38,38,-53,-54,-55,-66,-68,-69,38,38,-70,-67,]),'$end':([1,2,4,5,6,7,8,39,40,58,59,61,99,100,102,129,130,131,135,],[0,-1,-11,-4,-5,-6,-7,-2,-3,-8,-9,-12,-10,-13,-71,-66,-68,-69,-67,]),'TRANSPOSE':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[41,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,41,41,-24,-52,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-49,41,41,41,41,41,41,41,-53,-54,-55,41,]),'PLUS_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[43,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,43,43,-24,-52,-40,-41,-42,-43,43,43,43,43,43,43,-22,-23,-25,-26,43,43,43,43,43,43,43,43,43,43,-49,43,43,43,43,43,43,43,-53,-54,-55,43,]),'MINUS_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[44,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,44,44,-24,-52,-40,-41,-42,-43,44,44,44,44,44,44,-22,-23,-25,-26,44,44,44,44,44,44,44,44,44,44,-49,44,44,44,44,44,44,44,-53,-54,-55,44,]),'TIMES_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[45,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,45,45,-24,-52,45,45,-42,-43,45,45,45,45,45,45,45,45,-25,-26,45,45,45,45,45,45,45,45,45,45,-49,45,45,45,45,45,45,45,-53,-54,-55,45,]),'DIVIDE_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[46,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,46,46,-24,-52,46,46,-42,-43,46,46,46,46,46,46,46,46,-25,-26,46,46,46,46,46,46,46,46,46,46,-49,46,46,46,46,46,46,46,-53,-54,-55,46,]),'GREATER':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[47,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,47,47,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,47,47,47,47,47,47,47,47,47,47,-49,47,47,47,47,47,47,47,-53,-54,-55,47,]),'LESSER':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[48,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,48,48,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,48,48,48,48,48,48,48,48,48,48,-49,48,48,48,48,48,48,48,-53,-54,-55,48,]),'GREATER_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[49,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,49,49,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,49,49,49,49,49,49,49,49,49,49,-49,49,49,49,49,49,49,49,-53,-54,-55,49,]),'LESSER_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[50,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,50,50,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,50,50,50,50,50,50,50,50,50,50,-49,50,50,50,50,50,50,50,-53,-54,-55,50,]),'EQUALS':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[51,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,51,51,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,51,51,51,51,51,51,51,51,51,51,-49,51,51,51,51,51,51,51,-53,-54,-55,51,]),'NOT_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[52,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,52,52,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,52,52,52,52,52,52,52,52,52,52,-49,52,52,52,52,52,52,52,-53,-54,-55,52,]),'PLUS':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[53,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,53,53,-24,-52,-40,-41,-42,-43,53,53,53,53,53,53,-22,-23,-25,-26,53,53,53,53,53,53,53,53,53,53,-49,53,53,53,53,53,53,53,-53,-54,-55,53,]),'TIMES':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,55,55,-24,-52,55,55,-42,-43,55,55,55,55,55,55,55,55,-25,-26,55,55,55,55,55,55,55,55,55,55,-49,55,55,55,55,55,55,55,-53,-54,-55,55,]),'DIVIDE':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,60,65,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,134,],[56,-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,56,56,-24,-52,56,56,-42,-43,56,56,56,56,56,56,56,56,-25,-26,56,56,56,56,56,56,56,56,56,56,-49,56,56,56,56,56,56,56,-53,-54,-55,56,]),'RPAREN_F':([4,5,6,7,8,12,40,58,59,61,62,63,99,100,101,102,129,130,131,135,],[-11,-4,-5,-6,-7,61,-3,-8,-9,-12,100,-14,-10,-13,-15,-71,-66,-68,-69,-67,]),'ELSE':([4,5,6,7,8,40,58,59,61,99,100,102,129,130,131,135,],[-11,-4,-5,-6,-7,-3,-8,-9,-12,-10,-13,-71,133,-68,-69,-67,]),'COMMA':([13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,64,65,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,108,109,110,111,115,116,117,118,119,120,121,126,127,128,],[-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,103,-50,-24,-52,103,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,-51,-53,-54,-55,]),'RPAREN_SQ':([13,14,15,16,17,18,19,20,21,26,27,28,29,30,35,36,37,38,41,65,74,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,108,109,110,111,115,116,117,118,119,120,121,126,127,128,],[-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,78,-32,-33,-34,-65,-50,-24,-52,115,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,-51,-53,-54,-55,]),'RPAREN':([13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,126,127,128,],[-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,122,123,-35,-36,-37,-38,-39,126,127,128,-49,-44,-45,-46,-47,-48,-53,-54,-55,]),'RANGE':([13,14,15,16,17,18,19,20,21,26,27,28,29,30,36,37,38,41,74,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,108,109,110,111,115,116,117,118,119,120,125,126,127,128,],[-56,-57,-58,-59,-60,-61,-62,-63,-64,-31,-27,-28,-29,-30,-32,-33,-34,-65,-24,-52,-40,-41,-42,-43,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-35,-36,-37,-38,-39,-49,-44,-45,-46,-47,-48,132,-53,-54,-55,]),'LPAREN':([23,24,32,33,34,],[66,67,75,76,77,]),'ASSIGN':([26,42,68,115,],[69,80,106,-49,]),'INCREMENT':([26,42,115,],[70,81,-49,]),'DECREMENT':([26,42,115,],[71,82,-49,]),'MULTIPLY_ASSIGN':([26,42,115,],[72,83,-49,]),'DIVIDE_ASSIGN':([26,42,115,],[73,84,-49,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt':([0,1,12,62,122,123,124,133,],[2,39,63,101,129,130,131,135,]),'expr':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[3,3,60,3,65,74,65,85,86,87,88,89,90,91,92,93,94,95,96,97,98,65,3,104,105,107,108,109,110,111,112,113,114,116,117,118,119,120,121,125,3,3,3,134,3,]),'print_stmt':([0,1,12,62,122,123,124,133,],[5,5,5,5,5,5,5,5,]),'if_stmt':([0,1,12,62,122,123,124,133,],[6,6,6,6,6,6,6,6,]),'while_stmt':([0,1,12,62,122,123,124,133,],[7,7,7,7,7,7,7,7,]),'for_stmt':([0,1,12,62,122,123,124,133,],[8,8,8,8,8,8,8,8,]),'type_recognition':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'single_operation':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'matrix_element_operation':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression_operation':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'comparison':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'operator':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'special_matrix':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'empty':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'idx':([0,1,3,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,62,65,66,67,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,108,109,110,111,112,113,114,116,117,118,119,120,121,122,123,124,125,132,133,134,],[21,21,42,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,42,21,42,21,21,21,21,21,21,21,42,21,21,21,21,21,21,21,21,42,42,42,42,42,42,42,42,42,42,42,42,42,42,21,42,42,21,42,42,42,42,42,42,42,42,42,42,42,42,42,42,21,21,21,42,21,21,42,]),'Variable':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'intNum':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'floatNum':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'string':([0,1,11,12,22,31,35,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,62,66,67,69,70,71,72,73,75,76,77,80,81,82,83,84,103,106,122,123,124,132,133,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'stmt_list':([12,],[62,]),'list':([22,35,57,],[64,79,79,]),'range':([106,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','Mparser.py',31),
  ('program -> program stmt','program',2,'p_program','Mparser.py',32),
  ('stmt -> expr SEMICOLON','stmt',2,'p_stmt','Mparser.py',38),
  ('stmt -> print_stmt','stmt',1,'p_stmt','Mparser.py',39),
  ('stmt -> if_stmt','stmt',1,'p_stmt','Mparser.py',40),
  ('stmt -> while_stmt','stmt',1,'p_stmt','Mparser.py',41),
  ('stmt -> for_stmt','stmt',1,'p_stmt','Mparser.py',42),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_stmt','Mparser.py',43),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_stmt','Mparser.py',44),
  ('stmt -> RETURN expr SEMICOLON','stmt',3,'p_stmt','Mparser.py',45),
  ('stmt -> SEMICOLON','stmt',1,'p_stmt','Mparser.py',46),
  ('stmt -> LPAREN_F RPAREN_F','stmt',2,'p_stmt','Mparser.py',47),
  ('stmt -> LPAREN_F stmt_list RPAREN_F','stmt',3,'p_stmt','Mparser.py',48),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt','Mparser.py',49),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt','Mparser.py',50),
  ('comparison -> expr GREATER expr','comparison',3,'p_comparison','Mparser.py',56),
  ('comparison -> expr LESSER expr','comparison',3,'p_comparison','Mparser.py',57),
  ('comparison -> expr GREATER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',58),
  ('comparison -> expr LESSER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',59),
  ('comparison -> expr EQUALS expr','comparison',3,'p_comparison','Mparser.py',60),
  ('comparison -> expr NOT_EQUAL expr','comparison',3,'p_comparison','Mparser.py',61),
  ('operator -> expr PLUS expr','operator',3,'p_operator','Mparser.py',67),
  ('operator -> expr MINUS expr','operator',3,'p_operator','Mparser.py',68),
  ('operator -> MINUS expr','operator',2,'p_operator','Mparser.py',69),
  ('operator -> expr TIMES expr','operator',3,'p_operator','Mparser.py',70),
  ('operator -> expr DIVIDE expr','operator',3,'p_operator','Mparser.py',71),
  ('type_recognition -> Variable','type_recognition',1,'p_type_recognition','Mparser.py',77),
  ('type_recognition -> intNum','type_recognition',1,'p_type_recognition','Mparser.py',78),
  ('type_recognition -> floatNum','type_recognition',1,'p_type_recognition','Mparser.py',79),
  ('type_recognition -> string','type_recognition',1,'p_type_recognition','Mparser.py',80),
  ('Variable -> ID','Variable',1,'p_Variable','Mparser.py',85),
  ('intNum -> NUMBER','intNum',1,'p_intNum','Mparser.py',91),
  ('floatNum -> FLOATNUMBER','floatNum',1,'p_floatNum','Mparser.py',97),
  ('string -> STRING','string',1,'p_string','Mparser.py',103),
  ('single_operation -> ID ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',109),
  ('single_operation -> ID INCREMENT expr','single_operation',3,'p_single_operation','Mparser.py',110),
  ('single_operation -> ID DECREMENT expr','single_operation',3,'p_single_operation','Mparser.py',111),
  ('single_operation -> ID MULTIPLY_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',112),
  ('single_operation -> ID DIVIDE_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',113),
  ('expression_operation -> expr PLUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',119),
  ('expression_operation -> expr MINUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',120),
  ('expression_operation -> expr TIMES_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',121),
  ('expression_operation -> expr DIVIDE_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',122),
  ('matrix_element_operation -> expr idx ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',128),
  ('matrix_element_operation -> expr idx INCREMENT expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',129),
  ('matrix_element_operation -> expr idx DECREMENT expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',130),
  ('matrix_element_operation -> expr idx MULTIPLY_ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',131),
  ('matrix_element_operation -> expr idx DIVIDE_ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',132),
  ('idx -> LPAREN_SQ list RPAREN_SQ','idx',3,'p_idx','Mparser.py',138),
  ('list -> expr','list',1,'p_list','Mparser.py',144),
  ('list -> list COMMA expr','list',3,'p_list','Mparser.py',145),
  ('empty -> LPAREN_SQ RPAREN_SQ','empty',2,'p_empty','Mparser.py',151),
  ('special_matrix -> EYE LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',157),
  ('special_matrix -> ONES LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',158),
  ('special_matrix -> ZEROS LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',159),
  ('expr -> type_recognition','expr',1,'p_epxr','Mparser.py',166),
  ('expr -> single_operation','expr',1,'p_epxr','Mparser.py',167),
  ('expr -> matrix_element_operation','expr',1,'p_epxr','Mparser.py',168),
  ('expr -> expression_operation','expr',1,'p_epxr','Mparser.py',169),
  ('expr -> comparison','expr',1,'p_epxr','Mparser.py',170),
  ('expr -> operator','expr',1,'p_epxr','Mparser.py',171),
  ('expr -> special_matrix','expr',1,'p_epxr','Mparser.py',172),
  ('expr -> empty','expr',1,'p_epxr','Mparser.py',173),
  ('expr -> idx','expr',1,'p_epxr','Mparser.py',174),
  ('expr -> expr TRANSPOSE','expr',2,'p_epxr','Mparser.py',175),
  ('if_stmt -> IF LPAREN expr RPAREN stmt','if_stmt',5,'p_if_stmt','Mparser.py',181),
  ('if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','if_stmt',7,'p_if_stmt','Mparser.py',182),
  ('while_stmt -> WHILE LPAREN expr RPAREN stmt','while_stmt',5,'p_while_stmt','Mparser.py',188),
  ('for_stmt -> FOR ID ASSIGN range stmt','for_stmt',5,'p_for_stmt','Mparser.py',194),
  ('range -> expr RANGE expr','range',3,'p_for_stmt','Mparser.py',195),
  ('print_stmt -> PRINT list SEMICOLON','print_stmt',3,'p_print','Mparser.py',201),
]
