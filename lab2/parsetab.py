
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftASSIGNINCREMENTDECREMENTMULTIPLY_ASSIGNDIVIDE_ASSIGNleftLESSERGREATERLESSER_EQUALGREATER_EQUALEQUALSNOT_EQUALleftPLUSMINUSPLUS_MATRIXMINUS_MATRIXleftTIMESDIVIDETIMES_MATRIXDIVIDE_MATRIXrightONESZEROSEYEleftTRANSPOSErightRANGErightUMINUSnonassocIFXnonassocELSEASSIGN BREAK COMMA CONTINUE DECREMENT DIVIDE DIVIDE_ASSIGN DIVIDE_MATRIX ELSE EQUALS EYE FLOATNUMBER FOR GREATER GREATER_EQUAL ID IF INCREMENT LESSER LESSER_EQUAL LPAREN LPAREN_F LPAREN_SQ MINUS MINUS_MATRIX MULTIPLY_ASSIGN NOT_EQUAL NUMBER ONES PLUS PLUS_MATRIX PRINT RANGE RETURN RPAREN RPAREN_F RPAREN_SQ SEMICOLON STRING TIMES TIMES_MATRIX TRANSPOSE WHILE ZEROS\n    program : stmt\n            | program stmt\n    \n    stmt : expr SEMICOLON\n         | print_stmt\n         | if_stmt\n         | while_stmt\n         | for_stmt\n         | BREAK SEMICOLON\n         | CONTINUE SEMICOLON\n         | RETURN expr SEMICOLON\n         | SEMICOLON\n         | LPAREN_F RPAREN_F\n         | LPAREN_F stmt_list RPAREN_F\n    stmt_list : stmt\n              | stmt_list stmt\n    \n    comparison : expr GREATER expr\n               | expr LESSER expr\n               | expr GREATER_EQUAL expr\n               | expr LESSER_EQUAL expr\n               | expr EQUALS expr\n               | expr NOT_EQUAL expr\n    \n    operator : expr PLUS expr\n             | expr MINUS expr\n             | MINUS expr %prec UMINUS\n             | expr TIMES expr\n             | expr DIVIDE expr\n    \n    type_recognition : ID\n                     | NUMBER\n                     | FLOATNUMBER\n                     | STRING\n    \n    single_operation : ID ASSIGN expr\n                     | ID INCREMENT expr\n                     | ID DECREMENT expr\n                     | ID MULTIPLY_ASSIGN expr\n                     | ID DIVIDE_ASSIGN expr\n    \n    expression_operation : expr PLUS_MATRIX expr\n                         | expr MINUS_MATRIX expr\n                         | expr TIMES_MATRIX expr\n                         | expr DIVIDE_MATRIX expr\n    \n    matrix_element_operation : expr idx ASSIGN expr\n                             | expr idx INCREMENT expr\n                             | expr idx DECREMENT expr\n                             | expr idx MULTIPLY_ASSIGN expr\n                             | expr idx DIVIDE_ASSIGN expr\n    \n    idx : LPAREN_SQ list RPAREN_SQ\n    \n    list : expr\n         | list COMMA expr\n    \n    empty : LPAREN_SQ RPAREN_SQ\n    \n    special_matrix : EYE LPAREN expr RPAREN\n                   | ONES LPAREN expr RPAREN\n                   | ZEROS LPAREN expr RPAREN\n    \n    expr : type_recognition\n         | single_operation\n         | matrix_element_operation\n         | expression_operation\n         | comparison\n         | operator\n         | special_matrix\n         | empty\n         | idx\n         | expr TRANSPOSE\n    \n    if_stmt : IF LPAREN expr RPAREN stmt %prec IFX\n            | IF LPAREN expr RPAREN stmt ELSE stmt\n    \n    while_stmt : WHILE LPAREN expr RPAREN stmt\n    \n    for_stmt : FOR ID ASSIGN range stmt\n    range : expr RANGE expr\n    \n    print_stmt : PRINT list SEMICOLON\n    '
    
_lr_action_items = {'BREAK':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[9,9,-1,-11,-4,-5,-6,-7,9,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,9,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,9,9,9,-49,-50,-51,-62,-64,-65,9,-66,-63,]),'CONTINUE':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[10,10,-1,-11,-4,-5,-6,-7,10,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,10,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,10,10,10,-49,-50,-51,-62,-64,-65,10,-66,-63,]),'RETURN':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[11,11,-1,-11,-4,-5,-6,-7,11,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,11,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,11,11,11,-49,-50,-51,-62,-64,-65,11,-66,-63,]),'SEMICOLON':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,56,57,58,59,60,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,117,118,119,120,122,123,124,125,126,127,129,130,131,],[4,4,-1,36,-11,-4,-5,-6,-7,54,55,4,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,95,-12,4,-14,98,-46,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,-47,4,4,4,-49,-50,-51,-62,-64,-65,4,-66,-63,]),'LPAREN_F':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[12,12,-1,-11,-4,-5,-6,-7,12,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,12,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,12,12,12,-49,-50,-51,-62,-64,-65,12,-66,-63,]),'PRINT':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[22,22,-1,-11,-4,-5,-6,-7,22,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,22,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,22,22,22,-49,-50,-51,-62,-64,-65,22,-66,-63,]),'IF':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[23,23,-1,-11,-4,-5,-6,-7,23,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,23,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,23,23,23,-49,-50,-51,-62,-64,-65,23,-66,-63,]),'WHILE':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[24,24,-1,-11,-4,-5,-6,-7,24,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,24,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,24,24,24,-49,-50,-51,-62,-64,-65,24,-66,-63,]),'FOR':([0,1,2,4,5,6,7,8,12,13,14,15,16,17,18,19,20,21,26,27,28,29,35,36,37,54,55,57,58,59,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,129,130,131,],[25,25,-1,-11,-4,-5,-6,-7,25,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-2,-3,-61,-8,-9,-12,25,-14,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,25,25,25,-49,-50,-51,-62,-64,-65,25,-66,-63,]),'ID':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[26,26,-1,-11,-4,-5,-6,-7,26,26,-52,-53,-54,-55,-56,-57,-58,-59,-60,26,64,-27,-28,-29,-30,26,26,-2,-3,-61,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-8,-9,-12,26,-14,26,26,26,26,26,26,26,-24,26,26,26,-48,26,26,26,26,26,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,26,26,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,26,26,26,-49,-50,-51,-62,-64,-65,26,26,-66,-63,]),'NUMBER':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[27,27,-1,-11,-4,-5,-6,-7,27,27,-52,-53,-54,-55,-56,-57,-58,-59,-60,27,-27,-28,-29,-30,27,27,-2,-3,-61,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-8,-9,-12,27,-14,27,27,27,27,27,27,27,-24,27,27,27,-48,27,27,27,27,27,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,27,27,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,27,27,27,-49,-50,-51,-62,-64,-65,27,27,-66,-63,]),'FLOATNUMBER':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[28,28,-1,-11,-4,-5,-6,-7,28,28,-52,-53,-54,-55,-56,-57,-58,-59,-60,28,-27,-28,-29,-30,28,28,-2,-3,-61,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-8,-9,-12,28,-14,28,28,28,28,28,28,28,-24,28,28,28,-48,28,28,28,28,28,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,28,28,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,28,28,28,-49,-50,-51,-62,-64,-65,28,28,-66,-63,]),'STRING':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[29,29,-1,-11,-4,-5,-6,-7,29,29,-52,-53,-54,-55,-56,-57,-58,-59,-60,29,-27,-28,-29,-30,29,29,-2,-3,-61,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-8,-9,-12,29,-14,29,29,29,29,29,29,29,-24,29,29,29,-48,29,29,29,29,29,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,29,29,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,29,29,29,-49,-50,-51,-62,-64,-65,29,29,-66,-63,]),'MINUS':([0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,],[30,30,-1,50,-11,-4,-5,-6,-7,30,30,-52,-53,-54,-55,-56,-57,-58,-59,-60,30,-27,-28,-29,-30,30,30,-2,-3,-61,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-8,-9,50,-12,30,-14,50,30,30,30,30,30,30,30,-24,30,30,30,-48,30,30,30,30,30,-36,-37,-38,-39,50,50,50,50,50,50,-22,-23,-25,-26,-10,-13,-15,-67,30,50,50,30,50,50,50,50,50,50,50,50,-45,50,50,50,50,50,50,30,30,30,50,-49,-50,-51,-62,-64,-65,30,30,-66,-63,]),'EYE':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[31,31,-1,-11,-4,-5,-6,-7,31,31,-52,-53,-54,-55,-56,-57,-58,-59,-60,31,-27,-28,-29,-30,31,31,-2,-3,-61,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-8,-9,-12,31,-14,31,31,31,31,31,31,31,-24,31,31,31,-48,31,31,31,31,31,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,31,31,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,31,31,31,-49,-50,-51,-62,-64,-65,31,31,-66,-63,]),'ONES':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[32,32,-1,-11,-4,-5,-6,-7,32,32,-52,-53,-54,-55,-56,-57,-58,-59,-60,32,-27,-28,-29,-30,32,32,-2,-3,-61,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-8,-9,-12,32,-14,32,32,32,32,32,32,32,-24,32,32,32,-48,32,32,32,32,32,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,32,32,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,32,32,32,-49,-50,-51,-62,-64,-65,32,32,-66,-63,]),'ZEROS':([0,1,2,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,111,112,113,114,115,116,118,119,120,122,123,124,125,126,127,128,129,130,131,],[33,33,-1,-11,-4,-5,-6,-7,33,33,-52,-53,-54,-55,-56,-57,-58,-59,-60,33,-27,-28,-29,-30,33,33,-2,-3,-61,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-8,-9,-12,33,-14,33,33,33,33,33,33,33,-24,33,33,33,-48,33,33,33,33,33,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,33,33,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,33,33,33,-49,-50,-51,-62,-64,-65,33,33,-66,-63,]),'LPAREN_SQ':([0,1,2,3,4,5,6,7,8,11,12,13,14,15,16,17,18,19,20,21,22,26,27,28,29,30,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,],[34,34,-1,53,-11,-4,-5,-6,-7,34,34,-52,-53,-54,-55,-56,-57,-58,-59,-60,34,-27,-28,-29,-30,34,34,-2,-3,-61,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-8,-9,53,-12,34,-14,53,34,34,34,34,34,34,34,-24,34,34,34,-48,34,34,34,34,34,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-10,-13,-15,-67,34,53,53,34,-31,-32,-33,-34,-35,53,53,53,-45,-40,-41,-42,-43,-44,53,34,34,34,53,-49,-50,-51,-62,-64,-65,34,34,-66,-63,]),'$end':([1,2,4,5,6,7,8,35,36,54,55,57,95,96,98,125,126,127,131,],[0,-1,-11,-4,-5,-6,-7,-2,-3,-8,-9,-12,-10,-13,-67,-62,-64,-65,-63,]),'TRANSPOSE':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[37,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,37,37,-24,-48,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-45,37,37,37,37,37,37,37,-49,-50,-51,37,]),'PLUS_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[39,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,39,39,-24,-48,-36,-37,-38,-39,39,39,39,39,39,39,-22,-23,-25,-26,39,39,39,39,39,39,39,39,39,39,-45,39,39,39,39,39,39,39,-49,-50,-51,39,]),'MINUS_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[40,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,40,40,-24,-48,-36,-37,-38,-39,40,40,40,40,40,40,-22,-23,-25,-26,40,40,40,40,40,40,40,40,40,40,-45,40,40,40,40,40,40,40,-49,-50,-51,40,]),'TIMES_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[41,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,41,41,-24,-48,41,41,-38,-39,41,41,41,41,41,41,41,41,-25,-26,41,41,41,41,41,41,41,41,41,41,-45,41,41,41,41,41,41,41,-49,-50,-51,41,]),'DIVIDE_MATRIX':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[42,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,42,42,-24,-48,42,42,-38,-39,42,42,42,42,42,42,42,42,-25,-26,42,42,42,42,42,42,42,42,42,42,-45,42,42,42,42,42,42,42,-49,-50,-51,42,]),'GREATER':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[43,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,43,43,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,43,43,43,43,43,43,43,43,43,43,-45,43,43,43,43,43,43,43,-49,-50,-51,43,]),'LESSER':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[44,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,44,44,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,44,44,44,44,44,44,44,44,44,44,-45,44,44,44,44,44,44,44,-49,-50,-51,44,]),'GREATER_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[45,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,45,45,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,45,45,45,45,45,45,45,45,45,45,-45,45,45,45,45,45,45,45,-49,-50,-51,45,]),'LESSER_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[46,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,46,46,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,46,46,46,46,46,46,46,46,46,46,-45,46,46,46,46,46,46,46,-49,-50,-51,46,]),'EQUALS':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[47,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,47,47,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,47,47,47,47,47,47,47,47,47,47,-45,47,47,47,47,47,47,47,-49,-50,-51,47,]),'NOT_EQUAL':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[48,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,48,48,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,48,48,48,48,48,48,48,48,48,48,-45,48,48,48,48,48,48,48,-49,-50,-51,48,]),'PLUS':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[49,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,49,49,-24,-48,-36,-37,-38,-39,49,49,49,49,49,49,-22,-23,-25,-26,49,49,49,49,49,49,49,49,49,49,-45,49,49,49,49,49,49,49,-49,-50,-51,49,]),'TIMES':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,51,51,-24,-48,51,51,-38,-39,51,51,51,51,51,51,51,51,-25,-26,51,51,51,51,51,51,51,51,51,51,-45,51,51,51,51,51,51,51,-49,-50,-51,51,]),'DIVIDE':([3,13,14,15,16,17,18,19,20,21,26,27,28,29,37,56,61,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,130,],[52,-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,52,52,-24,-48,52,52,-38,-39,52,52,52,52,52,52,52,52,-25,-26,52,52,52,52,52,52,52,52,52,52,-45,52,52,52,52,52,52,52,-49,-50,-51,52,]),'RPAREN_F':([4,5,6,7,8,12,36,54,55,57,58,59,95,96,97,98,125,126,127,131,],[-11,-4,-5,-6,-7,57,-3,-8,-9,-12,96,-14,-10,-13,-15,-67,-62,-64,-65,-63,]),'ELSE':([4,5,6,7,8,36,54,55,57,95,96,98,125,126,127,131,],[-11,-4,-5,-6,-7,-3,-8,-9,-12,-10,-13,-67,129,-64,-65,-63,]),'COMMA':([13,14,15,16,17,18,19,20,21,26,27,28,29,37,60,61,70,74,75,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,105,106,107,111,112,113,114,115,116,117,122,123,124,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,99,-46,-24,-48,99,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,-47,-49,-50,-51,]),'RPAREN_SQ':([13,14,15,16,17,18,19,20,21,26,27,28,29,34,37,61,70,74,75,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,105,106,107,111,112,113,114,115,116,117,122,123,124,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,74,-61,-46,-24,-48,111,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,-47,-49,-50,-51,]),'RPAREN':([13,14,15,16,17,18,19,20,21,26,27,28,29,37,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,122,123,124,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,118,119,-31,-32,-33,-34,-35,122,123,124,-45,-40,-41,-42,-43,-44,-49,-50,-51,]),'RANGE':([13,14,15,16,17,18,19,20,21,26,27,28,29,37,70,74,81,82,83,84,85,86,87,88,89,90,91,92,93,94,103,104,105,106,107,111,112,113,114,115,116,121,122,123,124,],[-52,-53,-54,-55,-56,-57,-58,-59,-60,-27,-28,-29,-30,-61,-24,-48,-36,-37,-38,-39,-16,-17,-18,-19,-20,-21,-22,-23,-25,-26,-31,-32,-33,-34,-35,-45,-40,-41,-42,-43,-44,128,-49,-50,-51,]),'LPAREN':([23,24,31,32,33,],[62,63,71,72,73,]),'ASSIGN':([26,38,64,111,],[65,76,102,-45,]),'INCREMENT':([26,38,111,],[66,77,-45,]),'DECREMENT':([26,38,111,],[67,78,-45,]),'MULTIPLY_ASSIGN':([26,38,111,],[68,79,-45,]),'DIVIDE_ASSIGN':([26,38,111,],[69,80,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'stmt':([0,1,12,58,118,119,120,129,],[2,35,59,97,125,126,127,131,]),'expr':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[3,3,56,3,61,70,61,81,82,83,84,85,86,87,88,89,90,91,92,93,94,61,3,100,101,103,104,105,106,107,108,109,110,112,113,114,115,116,117,121,3,3,3,130,3,]),'print_stmt':([0,1,12,58,118,119,120,129,],[5,5,5,5,5,5,5,5,]),'if_stmt':([0,1,12,58,118,119,120,129,],[6,6,6,6,6,6,6,6,]),'while_stmt':([0,1,12,58,118,119,120,129,],[7,7,7,7,7,7,7,7,]),'for_stmt':([0,1,12,58,118,119,120,129,],[8,8,8,8,8,8,8,8,]),'type_recognition':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'single_operation':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'matrix_element_operation':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression_operation':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'comparison':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'operator':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'special_matrix':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'empty':([0,1,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,62,63,65,66,67,68,69,71,72,73,76,77,78,79,80,99,102,118,119,120,128,129,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'idx':([0,1,3,11,12,22,30,34,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,56,58,61,62,63,65,66,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,121,128,129,130,],[21,21,38,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,38,21,38,21,21,21,21,21,21,21,38,21,21,21,21,21,21,21,21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,21,38,38,21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,21,21,21,38,21,21,38,]),'stmt_list':([12,],[58,]),'list':([22,34,53,],[60,75,75,]),'range':([102,],[120,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt','program',1,'p_program','Mparser.py',29),
  ('program -> program stmt','program',2,'p_program','Mparser.py',30),
  ('stmt -> expr SEMICOLON','stmt',2,'p_stmt','Mparser.py',36),
  ('stmt -> print_stmt','stmt',1,'p_stmt','Mparser.py',37),
  ('stmt -> if_stmt','stmt',1,'p_stmt','Mparser.py',38),
  ('stmt -> while_stmt','stmt',1,'p_stmt','Mparser.py',39),
  ('stmt -> for_stmt','stmt',1,'p_stmt','Mparser.py',40),
  ('stmt -> BREAK SEMICOLON','stmt',2,'p_stmt','Mparser.py',41),
  ('stmt -> CONTINUE SEMICOLON','stmt',2,'p_stmt','Mparser.py',42),
  ('stmt -> RETURN expr SEMICOLON','stmt',3,'p_stmt','Mparser.py',43),
  ('stmt -> SEMICOLON','stmt',1,'p_stmt','Mparser.py',44),
  ('stmt -> LPAREN_F RPAREN_F','stmt',2,'p_stmt','Mparser.py',45),
  ('stmt -> LPAREN_F stmt_list RPAREN_F','stmt',3,'p_stmt','Mparser.py',46),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt','Mparser.py',47),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt','Mparser.py',48),
  ('comparison -> expr GREATER expr','comparison',3,'p_comparison','Mparser.py',54),
  ('comparison -> expr LESSER expr','comparison',3,'p_comparison','Mparser.py',55),
  ('comparison -> expr GREATER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',56),
  ('comparison -> expr LESSER_EQUAL expr','comparison',3,'p_comparison','Mparser.py',57),
  ('comparison -> expr EQUALS expr','comparison',3,'p_comparison','Mparser.py',58),
  ('comparison -> expr NOT_EQUAL expr','comparison',3,'p_comparison','Mparser.py',59),
  ('operator -> expr PLUS expr','operator',3,'p_operator','Mparser.py',65),
  ('operator -> expr MINUS expr','operator',3,'p_operator','Mparser.py',66),
  ('operator -> MINUS expr','operator',2,'p_operator','Mparser.py',67),
  ('operator -> expr TIMES expr','operator',3,'p_operator','Mparser.py',68),
  ('operator -> expr DIVIDE expr','operator',3,'p_operator','Mparser.py',69),
  ('type_recognition -> ID','type_recognition',1,'p_type_recognition','Mparser.py',75),
  ('type_recognition -> NUMBER','type_recognition',1,'p_type_recognition','Mparser.py',76),
  ('type_recognition -> FLOATNUMBER','type_recognition',1,'p_type_recognition','Mparser.py',77),
  ('type_recognition -> STRING','type_recognition',1,'p_type_recognition','Mparser.py',78),
  ('single_operation -> ID ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',84),
  ('single_operation -> ID INCREMENT expr','single_operation',3,'p_single_operation','Mparser.py',85),
  ('single_operation -> ID DECREMENT expr','single_operation',3,'p_single_operation','Mparser.py',86),
  ('single_operation -> ID MULTIPLY_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',87),
  ('single_operation -> ID DIVIDE_ASSIGN expr','single_operation',3,'p_single_operation','Mparser.py',88),
  ('expression_operation -> expr PLUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',94),
  ('expression_operation -> expr MINUS_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',95),
  ('expression_operation -> expr TIMES_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',96),
  ('expression_operation -> expr DIVIDE_MATRIX expr','expression_operation',3,'p_expression_operation','Mparser.py',97),
  ('matrix_element_operation -> expr idx ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',103),
  ('matrix_element_operation -> expr idx INCREMENT expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',104),
  ('matrix_element_operation -> expr idx DECREMENT expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',105),
  ('matrix_element_operation -> expr idx MULTIPLY_ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',106),
  ('matrix_element_operation -> expr idx DIVIDE_ASSIGN expr','matrix_element_operation',4,'p_matrix_element_operation','Mparser.py',107),
  ('idx -> LPAREN_SQ list RPAREN_SQ','idx',3,'p_idx','Mparser.py',113),
  ('list -> expr','list',1,'p_list','Mparser.py',119),
  ('list -> list COMMA expr','list',3,'p_list','Mparser.py',120),
  ('empty -> LPAREN_SQ RPAREN_SQ','empty',2,'p_empty','Mparser.py',126),
  ('special_matrix -> EYE LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',132),
  ('special_matrix -> ONES LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',133),
  ('special_matrix -> ZEROS LPAREN expr RPAREN','special_matrix',4,'p_special_matrix','Mparser.py',134),
  ('expr -> type_recognition','expr',1,'p_epxr','Mparser.py',140),
  ('expr -> single_operation','expr',1,'p_epxr','Mparser.py',141),
  ('expr -> matrix_element_operation','expr',1,'p_epxr','Mparser.py',142),
  ('expr -> expression_operation','expr',1,'p_epxr','Mparser.py',143),
  ('expr -> comparison','expr',1,'p_epxr','Mparser.py',144),
  ('expr -> operator','expr',1,'p_epxr','Mparser.py',145),
  ('expr -> special_matrix','expr',1,'p_epxr','Mparser.py',146),
  ('expr -> empty','expr',1,'p_epxr','Mparser.py',147),
  ('expr -> idx','expr',1,'p_epxr','Mparser.py',148),
  ('expr -> expr TRANSPOSE','expr',2,'p_epxr','Mparser.py',149),
  ('if_stmt -> IF LPAREN expr RPAREN stmt','if_stmt',5,'p_if_stmt','Mparser.py',155),
  ('if_stmt -> IF LPAREN expr RPAREN stmt ELSE stmt','if_stmt',7,'p_if_stmt','Mparser.py',156),
  ('while_stmt -> WHILE LPAREN expr RPAREN stmt','while_stmt',5,'p_while_stmt','Mparser.py',162),
  ('for_stmt -> FOR ID ASSIGN range stmt','for_stmt',5,'p_for_stmt','Mparser.py',168),
  ('range -> expr RANGE expr','range',3,'p_for_stmt','Mparser.py',169),
  ('print_stmt -> PRINT list SEMICOLON','print_stmt',3,'p_print','Mparser.py',175),
]
